definition {

	macro addBreakdown {
		Click(locator1 = "ACIndividualsDashboard#ADD_BREAKDOWN_BUTTON");

		ACIndividualsDashboard.nameBreakdown(breakdownName = "${breakdownName}");

		ACIndividualsDashboard.selectAttribute(attribute = "${attribute}");

		ACIndividualsDashboard.saveBreakdown();
	}

	macro assertCustomRangeNotApplied {
		var key_timeRange = "${timeRange}";

		AssertElementNotPresent(locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_TIME_RANGE");
	}

	macro assertIndividualAttribute {
		var key_individualAttribute = "${individualAttribute}";
		AssertElementPresent(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUAL_ATTRIBUTE");
	}

	macro assertIndividualsActivitiesTimeRange {
		var key_timeRange = "${timeRange}";

		AssertElementPresent(locator1 = "ACIndividualsDashboard#INDIVIDUALS_ACTIVITIES_TIME_RANGE");
	}

	macro clickBreakdownTab {
		Click(
			breakdownName = "${breakdownName}",
			locator1 = "ACIndividualsDashboard#BREAKDOWN_TAB");
	}

	macro deleteBreakdown {
		Click(
			breakdownName = "${breakdownName}",
			locator1 = "ACIndividualsDashboard#DELETE_BREAKDOWN_BUTTON");
	}

	macro goToDistributionTab {
		ACNavigation.switchTab(tabName = "Distribution");
	}

	macro goToInterestsTab {
		ACNavigation.switchTab(tabName = "Interests");
	}

	macro goToKnownIndividualDetails {
		var key_individualName = "${individualName}";
		Click(locator1 = "ACIndividualsDashboard#KNOWN_INDIVIDUALS_LIST_ITEMS");
	}

	macro goToKnownIndividualsTab {
		ACNavigation.switchTab(tabName = "Known Individuals");
	}

	macro goToOverviewTab {
		ACNavigation.switchTab(tabName = "Overview");
	}

	macro goToTabName {
		var key_tabName = "${tabName}";

		Click(locator1 = "ACIndividualsDashboard#INDIVIDUALS_TAB");
	}

	macro nameBreakdown {
		Type(
			locator1 = "ACIndividualsDashboard#BREAKDOWN_NAME_FIELD",
			value1 = "${breakdownName}");
	}

	macro saveBreakdown {
		Click(locator1 = "ACIndividualsDashboard#SAVE_BREAKDOWN_BUTTON");
	}

	macro selectAttribute {
		Click(
			key_text = "Attribute",
			locator1 = "TextInput#ANY");

		Click(
			locator1 = "ACIndividualsDashboard#DROPDOWN_MENU_ITEM",
			menuItem = "${attribute}");
	}

	macro viewActivitiesNumberInPeriod {
		AssertTextEquals(
			locator1 = "ACIndividualsDashboard#ACTIVITIES_NUMBER",
			value1 = "${activitiesNumber}");
	}

	macro viewBreakdownNotPresent {
		AssertElementNotPresent(
			breakdownName = "${breakdownName}",
			locator1 = "ACIndividualsDashboard#BREAKDOWN_TAB");
	}

	macro viewBreakdownRecharts {
		if (!(isSet(index))) {
			var index = "1";
		}

		AssertTextEquals.assertPartialText(
			index = "${index}",
			locator1 = "ACIndividualsDashboard#BREAKDOWN_RECHARTS_CARTESIAN_Y_AXIS_TICK",
			value1 = "${tick}");

		AssertAttributeValue(
			attribute1 = "fill",
			index = "${index}",
			locator1 = "ACIndividualsDashboard#BREAKDOWN_RECHARTS_BAR_FILL_COLOR",
			value1 = "${fillColor}");
	}

	macro viewIndividualDetailsCard {
		AssertVisible(locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_AVATAR");

		AssertVisible(
			fullName = "${fullName}",
			locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_FULL_NAME");

		AssertVisible(
			locator1 = "ACIndividualsDashboard#INDIVIDUAL_DETAILS_CARD_EMAIL",
			userEmailAddress = "${userEmailAddress}");
	}

	macro viewTotalActivities {
		var key_userName = "${userName}";
		var key_activitiesNumber = "${activitiesNumber}";

		AssertTextEquals(
			locator1 = "ACIndividualsDashboard#TOTAL_ACTIVITIES",
			value1 = "${activitiesNumber}");
	}

	macro viewTotalIndividualsCount {
		var key_individualCount = "${individualCount}";

		AssertTextEquals(
			locator1 = "ACIndividualsDashboard#TOTAL_INDIVIDUALS",
			value1 = "${individualCount}");
	}

}