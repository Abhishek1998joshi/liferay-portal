definition {

	macro addComment {
		Type(
			locator1 = "PublicationsChanges#COMMENT_BODY",
			value1 = "${commentValue}");

		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");

		AssertElementPresent(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");
	}

	macro assertPublicationsCommentsCRUDPermissions {
		PublicationsChanges.openCommentsSidebar();

		PublicationsChanges.addComment(commentValue = "Good to Publish");

		PublicationsChanges.editComment(
			commentValue = "Good to Publish",
			commentValueEdit = "It is not ready to Publish",
			userName = "Test Test");

		PublicationsChanges.deleteComment(commentValue = "It is not ready to Publish");
	}

	macro changeDisplayItem {
		Click(locator1 = "PublicationsChanges#CURRENT_DISPLAY_ICON");

		MenuItem.click(menuItem = "${displayItem}");

		AssertTextEquals.assertPartialText(
			key_displayItem = "${displayItem}",
			locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM",
			value1 = "${displayItem}");
	}

	macro deleteComment {
		Click.mouseOverClick(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");

		AssertClickNoError(
			key_menuItem = "Delete",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Delete");

		AssertElementPresent(locator1 = "PublicationsChanges#COMMENT_DELETING_MESSAGE");

		Click.javaScriptClick(locator1 = "Button#DELETE");

		AssertTextNotPresent(value1 = "${commentValue}");
	}

	macro discardChanges {
		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		if ("${conflictingChanges}" == "true") {
			Click(
				key_entryTitle = "${entryTitle}",
				locator1 = "PublicationsChanges#CONFLICTING_CHANGES_DISCARD_ELLIPSIS");

			MenuItem.click(menuItem = "Discard Change");
		}
		else {
			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE");

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_ELLIPSIS");

			MenuItem.click(menuItem = "Discard");
		}

		AssertElementPresent(locator1 = "PublicationsChanges#DISCARDED_CHANGES_TITLE");

		var key_changeCategory = "${changeCategory}";
		var key_changeTitle = "${changeTitle}";

		while (IsElementNotPresent(locator1 = "PublicationsChanges#CONTEXT_CHANGE_TITLE")) {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		Click(
			key_text = "Discard",
			locator1 = "Button#ANY");

		Alert.viewSuccessMessage();
	}

	macro editComment {
		Click.mouseOverClick(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");

		MenuItem.click(menuItem = "Edit");

		Type.clickAtType(
			key_userName = "${userName}",
			locator1 = "PublicationsChanges#COMMENT_BODY_SPECIFIC",
			value1 = "${commentValueEdit}");

		SelectFrame(value1 = "relative=top");

		Click.javaScriptClick(locator1 = "Button#SAVE");

		AssertElementPresent(
			key_commentValue = "${commentValueEdit}",
			locator1 = "PublicationsChanges#COMMENT_VALUE",
			value1 = "${commentValueEdit}");
	}

	macro gotoEditChanges {
		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		if ("${conflictingChanges}" == "true") {
			Click(
				key_entryTitle = "${entryTitle}",
				locator1 = "PublicationsChanges#CONFLICTING_CHANGES_DISCARD_ELLIPSIS");

			MenuItem.click(menuItem = "Edit Item");
		}
		else {
			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE");

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}
	}

	macro openCommentsSidebar {
		Click.javaScriptClick(locator1 = "PublicationsChanges#COMMENT_BUTTON");
	}

	macro sortChanges {
		Click(
			key_name = "${sortName}",
			locator1 = "PublicationsChanges#SORT_BUTTON");

		if ("${sort}" == "descending") {
			if (IsElementPresent(locator1 = "PublicationsChanges#SORTED_ASCENDING_ICON")) {
				Click(locator1 = "PublicationsChanges#SORTED_ASCENDING_ICON");
			}
		}

		if ("${sort}" == "ascending") {
			if (IsElementPresent(locator1 = "PublicationsChanges#SORTED_DESCENDING_ICON")) {
				Click(locator1 = "PublicationsChanges#SORTED_DESCENDING_ICON");
			}
		}
	}

	macro viewChangeDetailsInData {
		if ("${changeType}" == "Added") {
			AssertElementPresent(
				key_displayItem = "PUBLICATION (NEW)",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_columnValueInPublication = "${columnValueInPublication}";

			AssertTextEquals.assertPartialText(
				locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
				value1 = "${columnValueInPublication}");
		}

		if ("${changeType}" == "Deleted") {
			AssertElementPresent(
				key_displayItem = "PRODUCTION (DELETED)",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_columnValueInPublication = "${columnValueInProduction}";

			AssertTextEquals.assertPartialText(
				locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
				value1 = "${columnValueInProduction}");
		}

		if ("${changeType}" == "Modified") {
			AssertElementPresent(
				key_displayItem = "Unified View",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_columnName = "${columnName}";

			if (isSet(diffAddedValue)) {
				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_ADDED_VALUE",
					value1 = "${diffAddedValue}");
			}

			if (isSet(diffRemovedValue)) {
				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_REMOVED_VALUE",
					value1 = "${diffRemovedValue}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Split View");

			if (isSet(columnValueInProduction)) {
				var key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
			}

			if (isSet(columnValueInPublication)) {
				var key_columnValueInPublication = "${columnValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
					value1 = "${columnValueInPublication}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Production");

			if (isSet(columnValueInProduction)) {
				var key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Publication");

			if (isSet(columnValueInPublication)) {
				var key_columnValueInPublication = "${columnValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
					value1 = "${columnValueInPublication}");
			}
		}
	}

	macro viewChangeDetailsInDisplay {
		if ("${changeType}" == "Added") {
			AssertElementPresent(
				key_displayItem = "PUBLICATION (NEW)",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_contentValueInPublication = "${contentValueInPublication}";

			AssertTextEquals.assertPartialText(
				locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PUBLICATION",
				value1 = "${contentValueInPublication}");
		}

		if ("${changeType}" == "Deleted") {
			AssertElementPresent(
				key_displayItem = "PRODUCTION (DELETED)",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_contentValueInPublication = "${contentValueInProduction}";

			AssertTextEquals.assertPartialText(
				locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PRODUCTION",
				value1 = "${contentValueInProduction}");
		}

		if ("${changeType}" == "Modified") {
			AssertElementPresent(
				key_displayItem = "Unified View",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			if (isSet(diffAddedValue)) {
				AssertTextEquals.assertPartialText(
					key_diffAddedValue = "${diffAddedValue}",
					locator1 = "PublicationsChanges#DIFF_ADDED_VALUE",
					value1 = "${diffAddedValue}");
			}

			if (isSet(diffRemovedValue)) {
				AssertTextEquals.assertPartialText(
					key_diffRemovedValue = "${diffRemovedValue}",
					locator1 = "PublicationsChanges#DIFF_REMOVED_VALUE",
					value1 = "${diffRemovedValue}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Split View");

			if (isSet(contentValueInProduction)) {
				var key_contentValueInProduction = "${contentValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PRODUCTION",
					value1 = "${contentValueInProduction}");
			}

			if (isSet(contentValueInPublication)) {
				var key_contentValueInPublication = "${contentValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PUBLICATION",
					value1 = "${contentValueInPublication}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Production");

			if (isSet(contentValueInProduction)) {
				var key_contentValueInProduction = "${contentValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PRODUCTION",
					value1 = "${contentValueInProduction}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Publication");

			if (isSet(contentValueInPublication)) {
				var key_contentValueInPublication = "${contentValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DISPALY_CONTENT_VALUE_IN_PUBLICATION",
					value1 = "${contentValueInPublication}");
			}
		}
	}

	macro viewConflictingChangeDetails {
		if ("${DeletionModificationConflict}" == "true") {
			AssertElementPresent(
				key_displayItem = "Split View",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			PublicationsChanges.changeDisplayItem(displayItem = "Production");

			Alert.viewErrorMessage(errorMessage = "This item is missing or is deleted.");

			PublicationsChanges.changeDisplayItem(displayItem = "Publication");

			if (isSet(columnValueInPublication)) {
				var key_columnValueInPublication = "${columnValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
					value1 = "${columnValueInPublication}");
			}
		}

		if ("${ModificationDeletionConflict}" == "true") {
			if (isSet(columnValueInProduction)) {
				var key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
		}

		if ("${ModificationConflict}" == "true") {
			AssertElementPresent(
				key_displayItem = "Unified View",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM");

			var key_columnName = "${columnName}";

			if (isSet(diffAddedValue)) {
				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_ADDED_VALUE",
					value1 = "${diffAddedValue}");
			}

			if (isSet(diffRemovedValue)) {
				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_REMOVED_VALUE",
					value1 = "${diffRemovedValue}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Split View");

			if (isSet(columnValueInProduction)) {
				var key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
			}

			if (isSet(columnValueInPublication)) {
				var key_columnValueInPublication = "${columnValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
					value1 = "${columnValueInPublication}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Production");

			if (isSet(columnValueInProduction)) {
				var key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Publication");

			if (isSet(columnValueInPublication)) {
				var key_columnValueInPublication = "${columnValueInPublication}";

				AssertTextEquals.assertPartialText(
					locator1 = "PublicationsChanges#DATA_COLUMN_VALUE_IN_PUBLICATION",
					value1 = "${columnValueInPublication}");
			}
		}
	}

	macro viewChanges {
		if ("${publishedPublication}" == "true") {
			Click(
				key_publicationName = "${publicationName}",
				locator1 = "Publications#PUBLISHED_PUBLICATION_NAME");
		}

		WaitForElementPresent(locator1 = "PublicationsChanges#CHANGE_HEADER");

		if ("${showAllItems}" == "true") {
			Check.checkToggleSwitch(locator1 = "PublicationsChanges#SHOW_ALL_ITEMS_TOGGLE_SWITCH");
		}

		var key_changeCategory = "${changeCategory}";
		var key_changeUser = "${changeUser}";
		var key_changeSite = "${changeSite}";
		var key_changeTitle = "${changeTitle}";
		var key_changeType = "${changeType}";

		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		while (IsElementNotPresent(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_USER")) {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_SITE",
			value1 = "${changeSite}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
			value1 = "${changeTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TYPE",
			value1 = "${changeType}");
	}

	macro viewChangesResultNotPresent {
		var key_changeCategory = "${changeCategory}";
		var key_changeTitle = "${changeTitle}";

		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		AssertElementNotPresent(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
			value1 = "${changeTitle}");
	}

	macro viewChangesResultsOrder {
		var changeOrder = "0";

		for (var changeTitle : list "${changesList}") {
			var changeOrder = ${changeOrder} + 1;
			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			AssertTextEquals(
				changeOrder = "${changeOrder}",
				locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
				value1 = "${changeTitle}");
		}
	}

	macro viewDDLRecordChangeDetails {
		if ("${changeType}" == "Modified") {
			var key_fieldName = "${fieldName}";

			if (isSet(diffAddedValue)) {
				var key_diffAddedValue = "${diffAddedValue}";

				AssertElementPresent(
					locator1 = "PublicationsChanges#DIFF_ADDED_VALUE",
					value1 = "${diffAddedValue}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Production");

			AssertTextEquals(
				key_displayItem = "Production",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM",
				value1 = "Production");

			if (isSet(fieldValueInProduction)) {
				var key_fieldValueInProduction = "${fieldValueInProduction}";

				AssertElementPresent(
					locator1 = "PublicationsChanges#FIELD_VALUE_IN_PRODUCTION",
					value1 = "${fieldValueInProduction}");
			}

			PublicationsChanges.changeDisplayItem(displayItem = "Publication");

			AssertTextEquals.assertPartialText(
				key_displayItem = "${publicationName}",
				locator1 = "PublicationsChanges#CURRENT_DISPLAY_ITEM",
				value1 = "${publicationName}");

			if (isSet(fieldValueInPublication)) {
				var key_fieldValueInPublication = "${fieldValueInPublication}";

				AssertElementPresent(
					locator1 = "PublicationsChanges#FIELD_VALUE_IN_PUBLICATION",
					value1 = "${fieldValueInPublication}");
			}
		}
	}

}