definition {

	macro configureDisplaySettings {
		Panel.expandPanel(panel = "Display Settings");

		if (isSet(displayTemplate)) {
			Select(
				key_selectFieldLabel = "Display Template",
				locator1 = "Select#ANY",
				value1 = "${displayTemplate}");

			AssertSelectedLabel(
				key_selectFieldLabel = "Display Template",
				locator1 = "Select#ANY",
				value1 = "${displayTemplate}");
		}

		if ("${displayCurrentLocale}" == "true") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Display Current Locale",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Display Current Locale",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.save();
	}

	macro configureLanguages {
		Panel.expandPanel(panel = "Languages");

		while (IsElementPresent(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT")) {
			Click(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT");

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");
		}

		for (var currentLanguage : list "${currentLanguageList}") {
			var key_currentLanguage = "${currentLanguage}";

			Select(
				locator1 = "LanguageConfiguration#LANGUAGES_AVAILABLE",
				value1 = "${currentLanguage}");

			Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
				value1 = "${currentLanguage}");
		}

		PortletEntry.save();
	}

	macro selectLanguagePG {
		var portletName = "${portletName}";

		if (!(isSet(portletName))) {
			var portletName = "LanguagePortlet";
		}

		if (IsElementNotPresent(key_locale = "${locale}", key_portletName = "${portletName}", locator1 = "Language#DROPDOWN_CURRENT_LANGUAGE")) {
			Click(
				key_portletName = "${portletName}",
				locator1 = "Language#DROPDOWN");

			// Workaround for LPS-87409

			if (("${locale}" == "ar_SA") && (IsElementNotPresent(key_menuItem = "${textIcon}", locator1 = "MenuItem#ANY_MENU_ITEM"))) {
				MenuItem.click(menuItem = "العربية-المملكة العربية السعودية");
			}
			else {
				MenuItem.click(menuItem = "${textIcon}");
			}
		}
	}

	macro tearDownLanguagePG {
		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "english-United States");
	}

	macro viewCurrentLanguage {
		AssertElementPresent(
			key_locale = "${locale}",
			key_portletName = "LanguagePortlet",
			locator1 = "Language#DROPDOWN_CURRENT_LANGUAGE");
	}

		Panel.expandPanel(panel = "Languages");

		Select(
			locator1 = "Select#DISPLAY_TEMPLATE",
			value1 = "${displayStyle}");

		Pause(locator1 = "1000");

		AssertSelectedLabel(
			key_fieldLabel = "Display Template",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${displayStyle}");

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro viewDisplayTemplateLongText {
		var key_language = "${language}";

		AssertTextEquals.assertPartialText(
			locator1 = "Language#LONG_TEXT_LINK",
			value1 = "${language}");
	}

	macro viewDisplayTemplateSelectBox {
		AssertTextEquals.assertPartialText(
			locator1 = "Language#LANGUAGE_MENU_SELECT",
			value1 = "${language}");
	}

	macro viewDisplayTemplateShortText {
		var key_languageKey = "${languageKey}";

		AssertTextEquals.assertPartialText(
			locator1 = "Language#SHORT_TEXT_LINK",
			value1 = "${languageKey}");
	}

	macro viewLanguageCurrent {
		AssertElementPresent(
			key_locale = "${locale}",
			locator1 = "Language#DROPDOWN_CURRENT_LANGUAGE");
	}

	macro viewLanguagesAbsent {
		Click(
			key_portletName = "LanguagePortlet",
			locator1 = "Language#DROPDOWN");

		for (var missingLocale : list "${missingLocales}") {
			MenuItem.viewNotPresent(menuItem = "${missingLocale}");
		}

		Click(
			key_portletName = "LanguagePortlet",
			locator1 = "Language#DROPDOWN");
	}

	macro viewLanguagesSettings {
		Panel.expandPanel(panel = "Languages");

		for (var currentLanguage : list "${currentLanguageList}") {
			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
				value1 = "${currentLanguage}");
		}

		SelectFrame(value1 = "relative=top");
	}

}