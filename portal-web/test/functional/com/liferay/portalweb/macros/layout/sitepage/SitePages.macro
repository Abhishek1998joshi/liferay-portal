definition {

	macro _configurePage {
		if ("${sitePageType}" == "Embedded") {
			Page._addPageTypeEmbedded(pageTypeURL = "${pageTypeURL}");
		}
		else if ("${sitePageType}" == "Panel") {
			Page._addPageTypePanel(componentName = "${componentName}");
		}
		else if ("${sitePageType}" == "Widget Page") {
			var key_columnName = "${columnName}";

			Click(locator1 = "SitePagesEditPage#LAYOUT_CARD");
		}
		else if ("${sitePageType}" == "Content Page") {
			Select(
				locator1 = "SitePagesEditPage#LAYOUT_PAGE_TEMPLATE_SELECT",
				value1 = "${layoutPageTemplateName}");
		}
		else if ("${sitePageType}" == "Full Page Application") {
			Page._addPageTypeFullPageApplication(portlet = "${portlet}");
		}
	}

	macro checkPage {
		var key_pageName = "${pageName}";

		Check.checkNotVisible(locator1 = "SitePages#LIST_GROUP_ITEM_CHECKBOX");
	}

	macro configureChildPage {
		if (IsTextNotEqual(locator1 = "ControlMenu#HEADING", value1 = "Pages")) {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				portlet = "Pages");
		}

		PagesAdmin.gotoPageEllipsisMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}",
			parentPagesHierarchy = "${parentPagesHierarchy}");

		SitePages._configurePage(
			columnName = "${columnName}",
			componentName = "${componentName}",
			layoutPageTemplateName = "${layoutPageTemplateName}",
			pageTypeURL = "${pageTypeURL}",
			portlet = "${portlet}",
			sitePageType = "${sitePageType}");

		PortletEntry.save();
	}

	macro configurePage {
		if (IsTextNotEqual(locator1 = "ControlMenu#HEADING", value1 = "Pages")) {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				portlet = "Pages");
		}

		PagesAdmin.togglePrivacy(privacy = "${privacy}");

		PagesAdmin.gotoPageEllipsisMenuItem(
			menuItem = "Configure",
			pageName = "${pageName}");

		SitePages._configurePage(
			columnName = "${columnName}",
			componentName = "${componentName}",
			layoutPageTemplateName = "${layoutPageTemplateName}",
			pageTypeURL = "${pageTypeURL}",
			portlet = "${portlet}",
			sitePageType = "${sitePageType}");

		PortletEntry.save();
	}

	macro getFriendlyURL {
		var baseURL = "${baseURL}";

		if (contains("${baseURL}", "{baseURL}")) {
			var baseURL = PropsUtil.get("portal.url");
		}

		var key_friendlyURL = "";
		var friendlyURL = selenium.getElementValue("SitePages#FRIENDLY_URL");

		return "${baseURL}/web/guest${friendlyURL}";
	}

}