@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		Navigator.openURL();

		User.firstLoginUI();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Navigator.openURL();

		ACDXPSettings.disconnectDXPFromAnalyticsCloud();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Set custom range filter for known individuals"
	@priority = "5"
	test CanSetCustomRangeKnownIndividuals {
		Navigator.openURL();
		ACUtils.addSiteAndPage();
		ACUtils.createDMAndAddToPage();
		ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		for (var n : list "1,2,3,4") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM AC Title");
		}

		Pause(locator1 = "10000");

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "Liferay DXP");

		ACNavigation.goToIndividuals();
		ACIndividualsDashboard.goToKnownIndividualsTab();
		ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "Test Test");
		ACIndividualsDashboard.assertCustomRangeNotApplied(timeRange = "July 1, 2020 - July 13, 2020");
		ACTimeFilter.setCustomRange(
			endDay = "13",
			endMonth = "July",
			endYear = "2020",
			startDay = "1",
			startMonth = "July",
			startYear = "2020");
		ACIndividualsDashboard.assertIndividualsActivitiesTimeRange(timeRange = "July 1, 2020 - July 13, 2020");
	}

}