@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Display";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-117985. View the Web Content Template with XSS name on WCD."
	@priority = "4"
	@uitest
	test SelectWebContentBasedOnTemplateNameWithXSS {
		var templateName = '''<script>alert(123);</script>''';

		task ("Add a web content Template with a XSS name") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			NavItem.gotoTemplates();

			WebContentTemplates.addCP(
				structureName = "Basic Web Content",
				templateName = "${templateName}");
		}

		task ("View the alert not shown") {
			AssertAlertNotPresent();
		}

		task ("View the XSS is escaped") {
			var actualScript = '''<script>alert(123);</script>''';

			var escapedScript = '''&lt;script&gt;alert(123);&lt;/script&gt;''';

			LexiconCard.viewCardNotPresent(card = "${actualScript}");

			WebContentTemplates.viewCardsEntryCP(templateName = "${escapedScript}");
		}

		task ("Add a web content based on XSS Template") {
			NavItem.gotoWebContent();

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				structureName = "Basic Web Content",
				webContentTitle = "Web Content Title");

			WebContent.selectTemplateCP(
				structureName = "Basic Web Content",
				templateName = "${escapedScript}");

			PortletEntry.publish();
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Add a Web Content Display to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Web Content Display");
		}

		task ("Select the web content in Web Content Display") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			WebContentDisplayPortlet.selectWebContent(webContentTitle = "Web Content Title");
		}

		task ("View the alert not shown") {
			AssertAlertNotPresent();
		}
	}

}