@component-name = "portal-analytics-cloud"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8147 | Test Summary: Anonymous individuals are not counted towards usage"
	@priority = "5"
	test AnonymousIndividualsDoNotCountAsIndividualsForUsage {
		ACUtils.addSiteAndPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		var currentIndividuals = selenium.getText("ACUsage#USAGE_CURRENT_INDIVIDUALS");

		ACUtils.launchDXP();

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessions();

		ACUtils.launchAC();

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		AssertTextEquals(
			locator1 = "ACUsage#USAGE_CURRENT_INDIVIDUALS",
			value1 = "${currentIndividuals}");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8156 | Test Summary: Current AC plan level is shown in a card"
	@priority = "5"
	test CurrentACPlanLevelShownInCard {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Liferay DXP");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		ACSettings.assertPlanDetails(
			individualsAddOnsLimit = "5,000",
			individualsAddOnsPrice = "500 USD",
			individualsLimit = "100,000",
			pageViewsAddOnsLimit = "5,000,000",
			pageViewsAddOnsPrice = "250 USD",
			pageViewsLimit = "60,000,000",
			planName = "Enterprise",
			usersLimit = "Unlimited");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8157 | Test Summary: Current add-ons are displayed in a card"
	@priority = "5"
	test CurrentAddonsDisplayedInCard {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		ACSettings.assertAddonsDetails(
			addOnItem = "Individuals",
			annualPrice = "500 USD",
			limit = "5,000",
			time = "2X");

		ACSettings.assertAddonsDetails(
			addOnItem = "Page Views",
			annualPrice = "250 USD",
			limit = "5,000,000",
			time = "3X");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9180 | Test Summary: Individuals limit corresponds correctly with the plan and add-ons purchased."
	@priority = "3"
	test IndividualsCardShowCurrentPlanLimitAndAddOnInfo {
		task ("Sign in AC") {
			ACUtils.launchAC();
		}

		task ("Navigate to Workspace Settings") {
			ACNavigation.goToSettings();

			ACSettings.goToWorkspace();
		}

		task ("Navigate to the Usage") {
			ACSettings.goToUsage();
		}

		task ("View the individuals limit of current plan") {
			ACSettings.viewCurrentPlan(planName = "Enterprise");

			ACSettings.assertPlanDetails(
				individualsLimit = "100,000",
				planName = "Enterprise");
		}

		task ("View the individuals of purchased add-ons") {
			ACSettings.assertAddonsDetails(
				addOnItem = "Individuals",
				limit = "5,000",
				time = "2X");
		}

		task ("View the individuals limit of current plan and purchased add-ons on Individuals card") {
			ACSettings.assertCurrentPlanLimitAndAddOn(
				currentPlanLimitAndAddOn = "Enterprise Plan 100,000 + 5,000 Add-On (2x)",
				metricName = "Individuals");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8148 | Test Summary: Individuals usage update in real time"
	@priority = "5"
	test IndividualsUpdatesInRealTime {
		ACUtils.addSiteAndPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		var currentIndividuals = selenium.getText("ACUsage#USAGE_CURRENT_INDIVIDUALS");

		ACUtils.launchDXP();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessions();

		ACUtils.launchAC();

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		var newIdividuals = ${currentIndividuals} + 1;

		AssertTextEquals(
			locator1 = "ACUsage#USAGE_CURRENT_INDIVIDUALS",
			value1 = "${newIdividuals}");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-9182 | Test Summary: Page views limit corresponds correctly with the plan and add-ons purchased."
	@priority = "3"
	test PageViewsCardShowCurrentPlanLimitAndAddOnInfo {
		task ("Sign in AC") {
			ACUtils.launchAC();
		}

		task ("Navigate to Workspace Settings") {
			ACNavigation.goToSettings();

			ACSettings.goToWorkspace();
		}

		task ("Navigate to the Usage") {
			ACSettings.goToUsage();
		}

		task ("View the page views limit of current plan") {
			ACSettings.viewCurrentPlan(planName = "Enterprise");

			ACSettings.assertPlanDetails(
				pageViewsLimit = "60,000,000",
				planName = "Enterprise");
		}

		task ("View the page views of purchased add-ons") {
			ACSettings.assertAddonsDetails(
				addOnItem = "Page Views",
				limit = "5,000,000",
				time = "3X");
		}

		task ("View the page views limit of current plan and purchased add-ons on Page Views card") {
			ACSettings.assertCurrentPlanLimitAndAddOn(
				currentPlanLimitAndAddOn = "Enterprise Plan 60,000,000 + 5,000,000 Add-On (3x)",
				metricName = "Page Views");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8150 | Test Summary: Page views update in real time"
	@priority = "5"
	test PageViewsUpdateInRealTime {
		task ("Go to Usage, save the value of Page Views, remove the comma and add 3(correspond to the value of interaction with DXP)") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToSettings();

			ACSettings.goToUsage();

			var actualPageViews = selenium.getText("ACUsage#USAGE_CURRENT_PAGE_VIEWS");
			var replacePageViews = StringUtil.replace("${actualPageViews}",",","");
			var sumPageViews = ${replacePageViews} + 3;

			ACUtils.launchDXP();

			ACUtils.closeAllSessionsAndWait();
		}

		task ("Go to AC > Usage again and get the new value of Page Views") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			ACSettings.goToUsage();

			var expectedPageViews = selenium.getText("ACUsage#USAGE_CURRENT_PAGE_VIEWS");
		}

		task ("Remove the comma and compare the values") {
			var replacePageViews2 = StringUtil.replace("${expectedPageViews}",",","");

			TestUtils.assertEquals(
				actual = "${sumPageViews}",
				expected = "${replacePageViews2}");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8146 | Test Summary: Total number of individuals is shown"
	@priority = "5"
	test PlanLimitNumberOfIndividualsIsShown {
		task ("Go to Usage and assert that the plan number of individuals is '110,000'") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToSettings();

			ACSettings.goToUsage();

			AssertElementPresent(
				key_metricName = "Individuals",
				key_totalNumber = "110,000",
				locator1 = "ACUsage#USAGE_TOTAL_NUMBER_METRICS");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8149 | Test Summary: Total number of pages is shown"
	@priority = "5"
	test PlanLimitNumberOfPageViewsIsShown {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACSettings.goToUsage();

		AssertElementPresent(
			key_metricName = "Page Views",
			key_totalNumber = "75,000,000",
			locator1 = "ACUsage#USAGE_TOTAL_NUMBER_METRICS");
	}

}