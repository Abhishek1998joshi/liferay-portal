@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();
		}
	}

	@priority = "5"
	@refactorneeded
	test AddBlogsEntry {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property testray.component.names = "WYSIWYG";

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactorneeded
	test AddBlogsEntryContentNull {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addWithInvalidContent(
			entryInvalidContent = "",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsEntry.viewDefaultCP(entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactorneeded
	test AddBlogsEntryTitleEscapeCharacters {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = '''&amp; &lt; &gt; &quot; > <''');

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(entryTitle = '''&amp; &lt; &gt; &quot; > <''');

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = '''&amp; &lt; &gt; &quot; > <''');
	}

	@priority = "4"
	@refactorneeded
	test AddBlogsEntryTitleNull {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addWithInvalidTitle(
			entryContent = "Blogs Entry Content",
			entryInvalidTitle = "");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsEntry.viewDefaultCP(entryTitle = "");
	}

	@description = "This is a use case for LPS-70143."
	@priority = "4"
	@refactorneeded
	test AddBlogsEntryWithDMLink {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "Document_1.jpg",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		var dmDocument1URL = DMDocument.getDMLatestVersionURL(
			dmDocumentTitle = "Document_1.jpg",
			site = "Guest");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		var dmDocument2URL = DMDocument.getDMLatestVersionURL(
			dmDocumentTitle = "Document_2.jpg",
			site = "Guest");

		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.addEntryExternalLinkViaBrowseButton(
			imageFileName = "Document_1.jpg",
			navTab = "Documents and Media");

		BlogsEntry.viewEntryExternalURL(
			entryContent = "Blogs Entry Content",
			entryExternalURL = "${dmDocument1URL}",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.addEntryExternalLinkViaBrowseButton(
			entryContent = "Blogs Entry Content",
			imageFileName = "Document_2.jpg",
			navTab = "Documents and Media");

		BlogsEntry.viewEntryExternalURL(
			entryContent = "Blogs Entry Content",
			entryExternalURL = "${dmDocument2URL}",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	@refactorneeded
	test AddBlogWithFormatting {
		property testray.component.names = "Training,WYSIWYG";

		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		BlogsNavigator.gotoSelectFile();

		ItemSelector.uploadFile(
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		BlogsEntry.addEntryContent(
			entryContent = '''A World-Renowned Professor<br />It's no secret that Agricultural Science Department professor Dr. Wolfgang von Richter has built his entire career on solving the problem of sustainable living on other planets. For Dr. von Richter, the humble lima bean, which comes from the aptly-named phaseolus lunatus plant of the legume family, is the solution. For years, Dr. von Richter has cultivated variety after variety of lima bean. He's turned lima beans cobalt blue by adding the hardiness of a violet gene; he's grown lima beans the size of fists with his nutrient-rich, hyper-growth soil. But how realistic is his dream of getting lima beans to grow in the harsh, unpredictable, and, frankly, otherworldly conditions of different planets?''',
			entrySubtitle = "A conversation with Dr. Von Richter",
			entryTitle = "Is the Lima Bean Really the Answer to Our Life on Other Planets?");

		BlogsEntry.selectFormattingStyle(styleFormat = "Heading 2");

		Button.clickPublish();
	}

	@priority = "4"
	@refactordone
	test CanChangeCoverImage {
		for (var entryCount : list "1,2") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "Document_${entryCount}.jpg",
				groupName = "Guest",
				mimeType = "image/jpeg",
				sourceFileName = "Document_${entryCount}.jpg");
		}

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_3",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Documents and Media",
			uploadFileName = "Document_3.jpg");

		Button.clickPublish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_3");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.searchDMImages(imageFileName = "Document_1");

		SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

		var key_imageFileName = "Document_1.jpg";

		Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.publish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");
	}

	@description = "This checks that a blog entry can saved as a draft and then deleted."
	@priority = "4"
	@refactordone
	test CanDeleteDraft {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addDraft(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(
			entryStatus = "Draft",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		BlogsEntry.moveToRecycleBinDraftCP(
			assetType = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsEntry.viewDefaultCP(entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	@refactorneeded
	test DeleteBlogsEntries {
		property portal.acceptance = "true";

		JSONBlog.addEntry(
			entryContent = "Blogs Entry1 Content",
			entryTitle = "Blogs Entry1 Title");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry2 Content",
			entryTitle = "Blogs Entry2 Title");

		for (var entryCount : list "1,2") {
			BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

			BlogsNavigator.moveToRecycleBinCP(
				assetType = "Blogs Entry",
				entryTitle = "Blogs Entry${entryCount} Title");
		}

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		for (var entryCount : list "1,2") {
			BlogsEntry.viewNoCP(entryTitle = "Blogs Entry${entryCount} Title");
		}
	}

	@priority = "4"
	@refactorneeded
	test PublishBlogsEntryAutoDraft {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addDraftViaAutoSave(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		PortletEntry.publish();

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		AssertElementNotPresent(
			key_entryStatus = "Draft",
			key_entryTitle = "Blogs Entry Title",
			locator1 = "Blogs#ICON_VIEW_ENTRY_TITLE_2");

		AssertVisible(
			key_entryStatus = "Approved",
			key_entryTitle = "Blogs Entry Title",
			locator1 = "Blogs#ICON_VIEW_ENTRY_TITLE_2");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactorneeded
	test PublishBlogsEntryDraft {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addDraft(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.publishDraftCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactorneeded
	test SaveBlogsEntryDraftAuto {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addDraftViaAutoSave(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(
			entryStatus = "Draft",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title");
	}

	@priority = "4"
	@refactorneeded
	test SearchBlogsEntryContent {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Unique Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		BlogsEntry.searchCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Blogs Entry Content",
			entryTitle = "Unique Title");

		BlogsEntry.searchCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Blogs",
			entryTitle = "Unique Title");

		BlogsEntry.searchNoCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Blogs1 Entry1 Content1",
			entryTitle = "Unique Title");
	}

	@priority = "4"
	@refactorneeded
	test SearchBlogsEntryTitle {
		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Unique Title");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		BlogsEntry.searchCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Unique Title",
			entryTitle = "Unique Title");

		BlogsEntry.searchCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Title",
			entryTitle = "Unique Title");

		BlogsEntry.searchNoCP(
			entryContent = "Blogs Entry Content",
			entrySearchTerm = "Blogs1 Entry1 Title1",
			entryTitle = "Unique Title");
	}

	@priority = "3"
	@refactorneeded
	test SearchBlogsImagesViaItemSelector {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		Button.clickPublish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.searchBlogImages(imageFileName = "Document_1.jpg");
	}

	@priority = "3"
	@refactorneeded
	test SearchDMImagesViaItemSelector {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Documents and Media",
			uploadFileName = "Document_1.jpg");

		Button.clickPublish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.searchDMImages(imageFileName = "Document_1.jpg");
	}

	@priority = "3"
	@refactorneeded
	test ViewBlogsEntryDraftWithCoverImage {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		BlogsEntry.saveAsDraft();

		Click(locator1 = "Icon#BACK");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_entryTitle = "Blogs Entry Title";

		Blogs.viewEntryTitle(entryTitle = "Blogs Entry Title");

		AssertTextEquals(
			locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_STATUS",
			value1 = "Draft");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");
	}

	@description = "This test covers LPS-126756. It ensures that a blog entry can be added with a static gif."
	@priority = "5"
	@refactorneeded
	test ViewBlogsEntryWithStaticGif {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "static",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "static.gif");

		Button.clickPublish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "static");
	}

	@priority = "3"
	@refactorneeded
	test ViewCoverImageDetails {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		Button.clickPublish();

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.viewBlogImageDetails(
			imageFileName = "Document_1.jpg",
			imageFormat = "jpg",
			imageSize = "13 KB",
			imageStatus = "approved",
			lastModifiedBy = "Test Test",
			uploadFileName = "Document_1.jpg",
			versionNumber = "1.0");
	}

	@priority = "4"
	@refactorneeded
	test ViewErrorMessageForNullCustomAbstract {
		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		Panel.expandPanel(panel = "Configuration");

		Click(locator1 = "Radio#CUSTOM_ABSTRACT");

		AssertClick.assertTextClickAt(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		AssertTextEquals(
			locator1 = "BlogsEntry#TITLE_FIELD_HELPER",
			value1 = "This field is required.");

		BlogsEntry.addTitle(entryTitle = "Blogs Title");

		AssertClick.assertTextClickAt(
			locator1 = "Button#PUBLISH",
			value1 = "Publish");

		Alert.viewRequiredField();
	}

}