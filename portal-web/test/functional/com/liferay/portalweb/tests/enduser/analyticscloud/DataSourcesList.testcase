@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Automation ID: LRAC-8129 | Test Summary: Show data source lists"
	@ignore = "true"
	@priority = "5"
	test DataSourceListShowsAllDataSources {
		for (var n : list "1,2,3") {
			ACSettings.takeTokenFromAnalyticsCloud();

			ACUtils.launchDXP();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			var dataSource = StringUtil.replace("${propertyName}", " Combined Property", "");

			ACDXPSettings.disconnectDXPFromAnalyticsCloud();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToSettings();

			ACSettings.assertDataSourceName(dataSourceName = "${dataSource}");
		}
	}

}