@component-name = "portal-headless-frontend-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Headless Frontend Infrastructure";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

        task ("Given blog post is created") {
			HeadlessBlog.addBlogEntry(
				content = "Blogs Entry Content",
				groupName = "Guest",
				title = "Blogs Title",
                externalReferenceCode = "Erc");	
        }

	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

	}

	@description = "Creates a comment in a blog posting with a custom external reference code"
	@priority = "4"
	test canCreateCommentWithCustomExternalReferenceCode {
		property portal.acceptance = "true";
		
		task ("When with POST request I create a comment with a custom external reference code") {
			var response = HeadlessBlog.getAllBlogsPostingId();
			
			var putComment  = HeadlessBlog.postBlogsPostingComment(
				blogsPostingId = "${response}",
				CommentExternalReferenceCode = "ercComment",
				textComment = "CommentOne");
        }

		task ("Then I can see the custom external reference code in the body response") {
			var commentsFromBlogsPosting = HeadlessBlog.getBlogsPostingComment(blogsPostingId = "${response}");
			
			HeadlessBlog.assertCommentERCWithCorrectValue(
				expectedCommentERCValue = "ercComment",
				response = "${commentsFromBlogsPosting}");
		}
    }
}