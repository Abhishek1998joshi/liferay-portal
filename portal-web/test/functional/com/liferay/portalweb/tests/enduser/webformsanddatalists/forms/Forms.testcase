@component-name = "portal-web-forms-and-data-lists"
definition {
	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				panel = "Site Administration",
				portlet = "Forms"
			);

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test AddElementSetsWithTranslation {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Navigator.gotoNavItem(navItem = "Element Sets");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Element Set 1");

		Form.editDescription(formDescription = "Element Set Description");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field Required");

		FormFields.selectTextFieldLineOption(textFieldLineOption = "Multiple Lines");

		FormFields.enableSwitcher(fieldName = "required");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select Repeatable");

		for (var number : list "1,2,3") {
			FormFields.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		Form.gotoAdvancedTab();

		FormFields.enableSwitcher(fieldName = "repeatable");

		Form.closeSidebar();

		Form.saveElementSet();

		FormsAdminNavigator.gotoBack();

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Element Set 1");

		Form.addTranslation(localizedLanguage = "Chinese (China)");

		FormsAdminNavigator.gotoEditField(fieldName = "TextFieldRequired");

		FormFields.editText(fieldName = "label", fieldValue = "表格文本");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "SelectRepeatable");

		FormFields.editText(fieldName = "label", fieldValue = "表单选择");

		Form.closeSidebar();

		Form.saveElementSet();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.gotoAddElementSet(elementSetTitle = "Element Set 1");

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date Field");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "TextFieldRequired");

		var fieldName1 = FormFields.getFieldName();

		Form.closeSidebar();

		Form.addTranslation(localizedLanguage = "Chinese (China)");

		FormFields.viewTextLabel(fieldLabel = "表格文本", fieldName = "TextFieldRequired");

		FormFields.viewRequiredAsterisk();

		FormFields.viewSelectLabel(fieldLabel = "表单选择", fieldName = "SelectRepeatable");

		FormsAdminNavigator.gotoEditField(fieldName = "SelectRepeatable");

		Form.gotoAdvancedTab();

		FormFields.viewSwitcherChecked(fieldName = "repeatable");

		Form.closeSidebar();

		AssertNotVisible(locator1 = "Form#ADD_FIELD");

		Form.selectTranslation(localizedLanguage = "English (United States)");

		Form.gotoAddElementSet(elementSetTitle = "Element Set 1");

		FormsAdminNavigator.gotoEditField(fieldName = "TextFieldRequired");

		var fieldName2 = FormFields.getFieldName();

		Form.closeSidebar();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.viewTextLabel(
			fieldLabel = "Text Field Required",
			fieldName = "${fieldName1}"
		);

		FormFields.viewRequiredAsterisk();

		FormFields.viewSelectLabel(
			fieldLabel = "Select Repeatable",
			fieldName = "SelectRepeatable"
		);

		FormFields.viewTextLabel(
			fieldLabel = "Text Field Required",
			fieldName = "${fieldName2}"
		);

		FormPortlet.changeLocale(locale = "中文-中国");

		FormFields.viewTextLabel(fieldLabel = "表格文本", fieldName = "${fieldName1}");

		FormFields.viewRequiredAsterisk();

		FormFields.viewSelectLabel(fieldLabel = "表单选择", fieldName = "SelectRepeatable");

		FormFields.viewTextLabel(fieldLabel = "表格文本", fieldName = "${fieldName2}");

		FormFields.editTextMultiline(fieldName = "${fieldName1}", fieldValue = "文本输入中文");

		FormFields.editTextMultiline(fieldName = "${fieldName2}", fieldValue = "文本再次输入中文");

		FormPortlet.submitLocalizedSuccessfully(buttonName = "提交");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Navigator.gotoNavItem(navItem = "Element Sets");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Element Set 2");

		Form.gotoAddElementSet(elementSetTitle = "Element Set 1");

		Form.addTranslation(localizedLanguage = "Chinese (China)");

		FormFields.viewTextLabel(fieldLabel = "表格文本", fieldName = "TextFieldRequired");

		FormFields.viewRequiredAsterisk();

		FormFields.viewSelectLabel(fieldLabel = "表单选择", fieldName = "SelectRepeatable");

		FormsAdminNavigator.gotoEditField(fieldName = "SelectRepeatable");

		Form.gotoAdvancedTab();

		FormFields.viewSwitcherChecked(fieldName = "repeatable");

		Form.closeSidebar();

		Form.selectTranslation(localizedLanguage = "English (United States)");

		Form.gotoAddField(fieldType = "Text");

		Form.editFieldLabel(fieldValue = "Text Field New");

		Form.closeSidebar();

		Form.saveElementSet();
	}

	@priority = "5"
	test AddFormWithSpanishAsDefaultPortalLanguage {
		property test.name.skip.portal.instance = "Forms#AddFormWithSpanishAsDefaultPortalLanguage";

		PortalSettings.gotoPortalSettings();

		PortalSettings.configureCurrentLanguagesCP(
			defaultPortalLanguage = "Spanish (Spain)"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field On Spanish Portal");

		Form.closeSidebar();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(
			fieldLabel = "Text Field On Spanish Portal",
			fieldName = "TextFieldOnSpanishPortal"
		);

		FormFields.editText(
			fieldName = "TextFieldOnSpanishPortal",
			fieldValue = "Text Field Value"
		);

		FormPortlet.submitLocalizedSuccessfully(buttonName = "Enviar");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field On Spanish Portal",
			fieldValue = "Text Field Value"
		);

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field On Spanish Portal",
			fieldName = "TextFieldOnSpanishPortal",
			fieldValue = "Text Field Value"
		);
	}

	@description = "This is a use case for LPS-75116 and LPS-79101."
	@priority = "4"
	test ChangeFieldType {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Testing Title");

		FormFields.editHelpText(fieldHelpText = "Testing Help Text", fieldName = "tip");

		for (var number : list "1,2,3") {
			FormFields.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.enableSwitcher(fieldName = "required");

		Form.closeSidebar();

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "TestingTitle");

		FormFields.changeFieldType(selectOption = "Text Field");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		FormFields.changeFieldType(selectOption = "Select from List");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewDeletedSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		for (var number : list "1,2,3") {
			FormFields.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.changeFieldType(selectOption = "Single Selection");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.changeFieldType(selectOption = "Date");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		FormFields.changeFieldType(selectOption = "Single Selection");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewDeletedSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		for (var number : list "1,2,3") {
			FormFields.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.changeFieldType(selectOption = "Multiple Selection");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.changeFieldType(selectOption = "Grid");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		FormFields.changeFieldType(selectOption = "Numeric");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewRadioValue(fieldName = "dataType", fieldValue = "integer");

		FormFields.changeFieldType(selectOption = "Multiple Selection");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewDeletedSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		for (var number : list "1,2,3") {
			FormFields.editOptionsRow(
				optionName = "Select${number}",
				optionValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.changeFieldType(selectOption = "Select from List");

		Form.closeSidebar();

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "TestingTitle");

		FormFields.viewTextLabel(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle"
		);

		FormFields.viewFieldHelpText(
			fieldHelpText = "Testing Help Text",
			fieldName = "TestingTitle"
		);

		FormFields.viewRequiredAsterisk();

		for (var number : list "1,2,3") {
			FormFields.viewSelectOptionsRowFieldValue(
				fieldValue = "Select ${number}",
				rowNumber = "${number}"
			);
		}

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		Form.closeSidebar();

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.selectSelectOption(
			fieldName = "TestingTitle",
			selectOption = "Select 2"
		);

		FormFields.editText(fieldName = "TextField", fieldValue = "Test");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoEditField(fieldName = "TextField");

		FormFields.changeFieldType(selectOption = "Single Selection");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "TestingTitle");

		FormFields.changeFieldType(selectOption = "Date");

		Form.closeSidebar();

		Form.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewSelectEntry(
			fieldLabel = "Testing Title",
			fieldName = "TestingTitle",
			selectOption = "Select 2"
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Test"
		);
	}


	@description = "This is a use case for LPS-78697."
	@priority = "4"
	test EditTranslatedGridField {
		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.gotoAddField(fieldType = "Grid");

		Form.editFieldLabel(fieldValue = "Grid Field Translated");

		for (var optionNumber : list "1,2,3,4") {
			FormFields.editGridOptions(
				gridField = "row",
				optionValue = "Row ${optionNumber}",
				rowNumber = "${optionNumber}"
			);

			FormFields.editGridOptions(
				gridField = "column",
				optionValue = "Column ${optionNumber}",
				rowNumber = "${optionNumber}"
			);
		}

		Form.closeSidebar();

		for (var localeMap : list "Japanese (Japan):日本語,Portuguese (Brazil):Português") {
			var locale = StringUtil.extractFirst("${localeMap}", ":");
			var translated = StringUtil.extractLast("${localeMap}", ":");

			Form.addTranslation(localizedLanguage = "${locale}");

			FormsAdminNavigator.gotoEditField(fieldName = "GridFieldTranslated");

			for (var optionNumber : list "1,2,3,4") {
				FormFields.editGridOptions(
					gridField = "row",
					optionValue = "${translated} Row ${optionNumber}",
					rowNumber = "${optionNumber}"
				);

				FormFields.editGridOptions(
					gridField = "column",
					optionValue = "${translated} Column ${optionNumber}",
					rowNumber = "${optionNumber}"
				);
			}
		}

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "GridFieldTranslated");

		FormFields.deleteGridOptionsRow(gridField = "row", rowNumber = "2");

		Form.save();

		FormsAdminNavigator.gotoEditField(fieldName = "GridFieldTranslated");

		FormFields.moveGridOptionsRow(
			gridField = "row",
			rowNumberEnd = "1",
			rowNumberStart = "3"
		);

		FormFields.moveGridOptionsRow(
			gridField = "column",
			rowNumberEnd = "2",
			rowNumberStart = "4"
		);

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "GridFieldTranslated");

		FormFields.deleteGridOptionsRow(gridField = "column", rowNumber = "1");

		Form.closeSidebar();

		Form.save();

		for (var localeMap : list "Japanese (Japan):日本語,Portuguese (Brazil):Português") {
			var locale = StringUtil.extractFirst("${localeMap}", ":");
			var translated = StringUtil.extractLast("${localeMap}", ":");

			Form.selectTranslation(localizedLanguage = "${locale}");

			FormsAdminNavigator.gotoEditField(fieldName = "GridFieldTranslated");

			for (var optionNumber : list "1:4,2:1,3:3") {
				var fieldOptionNumber = StringUtil.extractLast("${optionNumber}", ":");
				var rowNumber = StringUtil.extractFirst("${optionNumber}", ":");

				FormFields.viewGridOptionsFieldValue(
					fieldValue = "${translated} Row ${fieldOptionNumber}",
					gridField = "row",
					rowNumber = "${rowNumber}"
				);
			}

			for (var optionNumber : list "1:4,2:2,3:3") {
				var fieldOptionNumber = StringUtil.extractLast("${optionNumber}", ":");
				var rowNumber = StringUtil.extractFirst("${optionNumber}", ":");

				FormFields.viewGridOptionsFieldValue(
					fieldValue = "${translated} Column ${fieldOptionNumber}",
					gridField = "column",
					rowNumber = "${rowNumber}"
				);
			}

			FormFields.viewGridOptionNotPresent(gridField = "row", rowNumber = "4");

			FormFields.viewGridOptionNotPresent(gridField = "column", rowNumber = "4");

			Form.closeSidebar();
		}
	}

	@description = "This is a use case for LPS-68381."
	@priority = "3"
	test ReorderFieldOptions {
		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.gotoAddField(fieldType = "Multiple Selection");

		for (var number : list "1,2,3,4") {
			FormFields.editOptionsRow(
				optionName = "Checkbox${number}",
				optionValue = "Checkbox ${number}",
				rowNumber = "${number}"
			);

			FormFields.viewOptionsRowFieldName(
				fieldName = "Checkbox${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.moveOptionsRow(rowNumberEnd = "1", rowNumberStart = "3");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 3", rowNumber = "1");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 1", rowNumber = "2");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 2", rowNumber = "3");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 4", rowNumber = "4");

		FormFields.deleteOptionsRow(rowNumber = "2");

		FormFields.moveOptionsRow(rowNumberEnd = "2", rowNumberStart = "3");

		if (IsTextNotEqual(locator1 = "FormFields#OPTIONS_OPTION_VALUE_FIELD", value1 = "Checkbox 4", key_rowNumber = "2")) {
			FormFields.moveOptionsRow(rowNumberEnd = "2", rowNumberStart = "3");
		}

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 3", rowNumber = "1");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 4", rowNumber = "2");

		FormFields.viewOptionsRowFieldValue(fieldValue = "Checkbox 2", rowNumber = "3");
	}


	@priority = "5"
	test SubmitFormAfterEditingFields {
		property portal.acceptance = "false";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Paragraph");

		Form.editFieldLabel(fieldValue = "Paragraph");

		FormFields.editParagraphBody(fieldValue = "Paragraph body text.");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Multiple Selection");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.editOptionsRow(
			optionName = "Checkbox1",
			optionValue = "Checkbox 1",
			rowNumber = "1"
		);

		Form.closeSidebar();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormFields.viewTextLabel(fieldLabel = "Text", fieldName = "Text");

		FormFields.viewSelectLabel(fieldLabel = "Select", fieldName = "Select");

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 1");

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 2");

		FormFields.viewRadioLabel(fieldLabel = "Radio", fieldName = "Radio");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 1");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 2");

		FormFields.viewDateLabel(fieldLabel = "Date", fieldName = "Date");

		FormFields.viewCheckboxLabel(fieldLabel = "Checkbox", fieldName = "Checkbox");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Created Form Name"
		);

		FormsAdminNavigator.gotoEditField(fieldName = "Paragraph");

		Form.editFieldLabel(fieldName = "Paragraph", fieldValue = "New Paragraph");

		FormFields.editParagraphBody(fieldValue = "New Paragraph body text.");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "Text");

		Form.editFieldLabel(fieldName = "Text", fieldValue = "New Text");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "Select");

		Form.editFieldLabel(fieldName = "Select", fieldValue = "New Select");

		FormFields.editOptionsRow(optionValue = "New Select 1");

		FormFields.editOptionsRow(optionValue = "New Select 2", rowNumber = "2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "Radio");

		Form.editFieldLabel(fieldName = "Radio", fieldValue = "New Radio");

		FormFields.editOptionsRow(optionValue = "New Option 1");

		FormFields.editOptionsRow(optionValue = "New Option 2", rowNumber = "2");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "Date");

		Form.editFieldLabel(fieldName = "Date", fieldValue = "New Date");

		Form.closeSidebar();

		FormsAdminNavigator.gotoEditField(fieldName = "Checkbox");

		Form.editFieldLabel(fieldName = "Checkbox", fieldValue = "New Checkbox");

		Form.closeSidebar();

		Form.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldName = "Paragraph",
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormFields.editText(fieldName = "Text", fieldValue = "Text");

		FormFields.selectSelectOption(
			fieldName = "Select",
			selectOption = "New Select 1"
		);

		FormFields.selectSelectOption(
			fieldName = "Select",
			selectOption = "New Select 2"
		);

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "New Option 1");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "New Option 2");

		FormFields.editDate(fieldName = "Date", fieldValue = "05/02/2016");

		FormFields.selectCheckboxOption(
			checkboxOption = "Checkbox 1",
			fieldName = "Checkbox"
		);

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldName = "Paragraph",
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "New Text",
			fieldName = "Text",
			fieldValue = "Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "New Select",
			fieldName = "Select",
			selectOption = "New Select 2"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "New Radio",
			fieldName = "Radio",
			fieldValue = "Option 2"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "New Date",
			fieldName = "Date",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "New Checkbox",
			fieldName = "Checkbox"
		);

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LAR.exportPortlet(larFileName = "FormsExport.lar");

		Pause(locator1 = "5000");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Site Page Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LAR.importPortlet(larFileName = "FormsExport.lar", siteName = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldName = "Paragraph",
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "New Text",
			fieldName = "Text",
			fieldValue = "Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "New Select",
			fieldName = "Select",
			selectOption = "New Select 2"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "New Radio",
			fieldName = "Radio",
			fieldValue = "Option2"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "New Date",
			fieldName = "Date",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "New Checkbox",
			fieldName = "Checkbox"
		);
	}



	@description = "This is a use case for LPS-64798."
	@priority = "5"
	test SubmitFormWithAllFieldTypesAndThreePages {
		property portal.acceptance = "false";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.editPageTitle(formPageName = "Page 1");

		Form.gotoAddField(fieldType = "Paragraph");

		Form.editFieldLabel(fieldValue = "Paragraph");

		FormFields.editParagraphBody(fieldValue = "Paragraph body text.");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "SingleLineText");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "MultilineText");

		FormFields.selectTextFieldLineOption(textFieldLineOption = "Multiple Lines");

		FormFields.enableSwitcher(fieldName = "required");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Multiple Selection");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.editOptionsRow(
			optionName = "Checkbox1",
			optionValue = "Checkbox 1",
			rowNumber = "1"
		);

		FormFields.editOptionsRow(
			optionName = "Checkbox2",
			optionValue = "Checkbox 2",
			rowNumber = "2"
		);

		Form.closeSidebar();

		Form.addPage();

		Form.editPageTitle(formPageName = "Page 2");

		Form.gotoAddField(fieldType = "Grid");

		Form.editFieldLabel(fieldValue = "Grid Field Survey");

		for (var optionNumber : list "1,2,3") {
			FormFields.editGridOptions(
				gridField = "row",
				optionValue = "Option ${optionNumber}",
				rowNumber = "${optionNumber}"
			);
		}

		for (var optionNumber : list "1,2,3") {
			FormFields.editGridOptions(
				gridField = "column",
				optionValue = "Category ${optionNumber}",
				rowNumber = "${optionNumber}"
			);
		}

		Form.closeSidebar();

		Form.addPage();

		Form.editPageTitle(formPageName = "Page 3");

		Form.gotoAddField(fieldType = "Upload");

		Form.editFieldLabel(fieldValue = "Upload Field");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Numeric");

		Form.editFieldLabel(fieldValue = "Value");

		Form.closeSidebar();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormFields.editText(
			fieldName = "SingleLineText",
			fieldValue = "Single Line Text"
		);

		FormFields.editTextMultiline(
			fieldName = "MultilineText",
			fieldValue = "Multiline Text"
		);

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 1");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 1");

		FormFields.editDate(fieldName = "Date", fieldValue = "05/02/2016");

		FormFields.selectCheckboxOption(
			checkboxOption = "Checkbox 1",
			fieldName = "Checkbox"
		);

		FormPortlet.nextPage(formPageCurrent = "Page 1", formPageNext = "Page 2");

		for (var optionNumber : list "1,2,3") {
			FormFields.selectGridRadioOption(
				categoryColumnName = "Category${optionNumber}",
				optionRowName = "Option${optionNumber}"
			);
		}

		FormPortlet.nextPage(formPageCurrent = "Page 2", formPageNext = "Page 3");

		ItemSelector.gotoItemSelectorViaSelectButton();

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_1.jpg"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Status", fieldValue = "APPROVED");

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "SingleLineText",
			fieldName = "SingleLineText",
			fieldValue = "Single Line Text"
		);

		FormsAdmin.viewMultilineTextEntry(
			fieldLabel = "MultilineText",
			fieldName = "MultilineText",
			fieldValue = "Multiline Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "Select",
			fieldName = "Select",
			selectOption = "Select 1"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "Radio",
			fieldName = "Radio",
			fieldValue = "Option 1"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "Date",
			fieldName = "Date",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(fieldLabel = "Checkbox", fieldName = "Checkbox");

		FormPortlet.nextPage(formPageCurrent = "Page 1", formPageNext = "Page 2");

		FormFields.viewTextLabel(
			fieldLabel = "Grid Field Survey",
			fieldName = "GridFieldSurvey"
		);

		FormPortlet.nextPage(formPageCurrent = "Page 2", formPageNext = "Page 3");

		FormsAdmin.viewUploadFile(
			fieldLabel = "Upload Field",
			fieldName = "UploadField",
			uploadFileName = "Document_1.jpg"
		);

		FormFields.viewTextField(fieldLabel = "Value", fieldName = "Value");
	}


	@description = "This is a use case for LPS-64305."
	@priority = "4"
	test ViewDefaultFieldNamesWithPunctuationCharacters {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoAddForm();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		FormFields.editText(
			fieldName = "label",
			fieldValue = ",-+!@#$%^*()=_.?/;:{}[]\|"
		);

		FormFields.viewFieldName(fieldName = "text");

		FormFields.editFieldName(fieldValue = ",-+!@#$%^*()=_.?/;:{}[]\|");

		Form.closeSidebar();

		Form.gotoAddField(fieldType = "Text Field");

		FormFields.editText(fieldName = "label", fieldValue = "Jump, She exclaimed!");

		FormFields.editFieldName(fieldValue = "Jump, She exclaimed!");

		Form.closeSidebar();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.addPublicPage(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextField(
			fieldLabel = ",-+!@#$%^*()=_.?/;:{}[]\|",
			fieldName = "text"
		);

		FormFields.viewTextField(
			fieldLabel = "Jump, She exclaimed!",
			fieldName = "JumpSheexclaimed"
		);

		FormFields.editText(fieldName = "text", fieldValue = "1,2,3.");

		FormFields.editText(
			fieldName = "JumpSheexclaimed",
			fieldValue = ",-+!@#$%^*()=_.?/;:{}[]\|"
		);

		FormPortlet.submitSuccessfully();
	}
}