@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Activate local live staging with page versioning enabled") {
			Staging.openStagingAdmin(siteURLKey = "test-site-name");

			Staging.activateStagingCP(
				pageVersioningEnabled = "true",
				siteName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-125755. The Site Pages Variation is enabled on content page in view mode when enable page versioning."
	@priority = "5"
	test PublishContentPage {
		property portal.acceptance = "true";

		task ("Add a public content page") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

			ContentPages.addPage(pageName = "Public Content Page Name");
		}

		task ("Add a Heading fragment to page") {
			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");

			PageEditor.clickPublish();
		}

		task ("Navigate to the public content page in the staging site") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Public Content Page Name",
				siteName = "Test Site Name Staging");
		}

		task ("Assert the Heading fragment is shown") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Heading Example");
		}

		task ("Assert Live item is not shown on navbar") {
			AssertElementNotPresent(locator1 = "Staging#LIVE_BUTTON");
		}

		task ("Assert the Site Page Variation is shown in staging bar") {
			AssertVisible(
				key_stagingVariationLabel = "Site Pages Variation",
				locator1 = "Staging#STAGING_VARIATION_LABEL");
		}

		task ("Assert the Main Variation is selected in Site Pages Variation field") {
			Staging.viewSitePagesVariationPG(sitePagesVariationName = "Main Variation");
		}

		task ("Assert the workflow status is Approved") {
			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "Approved");
		}

		task ("Switch Ready for Publish Process to Yes") {
			Staging.markAsReadyForPublication();
		}

		task ("Assert the workflow status is Ready for Publish Process") {
			Pause(locator1 = "3000");

			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "Ready for Publish Process");
		}

		task ("Publish to Live") {
			Staging.gotoPublishToLive();

			Staging.publishToLive();
		}

		task ("Assert the workflow status is In Live") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Public Content Page Name",
				siteName = "Test Site Name Staging");

			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "In Live");
		}

		task ("Navigate to the public content page in the live site") {
			Click(locator1 = "Staging#LIVE_BUTTON");
		}

		task ("Assert the Heading fragment is shown") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Heading Example");
		}

		task ("Add a private content page") {
			SitePages.openPagesAdmin(siteURLKey = "test-site-name-staging");

			ContentPages.addPrivatePage(pageName = "Private Content Page Name");
		}

		task ("Add a Button fragment to page") {
			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Button");

			PageEditor.clickPublish();
		}

		task ("Navigate to the private content page in the staging site") {
			Navigator.openWithAppendToBaseURL(urlAppend = "group/test-site-name-staging/private-content-page-name");
		}

		task ("Assert the Button fragment is shown") {
			AssertTextEquals(
				key_fragmentName = "button",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Go Somewhere");
		}

		task ("Assert Live item is not shown on navbar") {
			AssertElementNotPresent(locator1 = "Staging#LIVE_BUTTON");
		}

		task ("Assert the Site Page Variation is shown in staging bar") {
			AssertVisible(
				key_stagingVariationLabel = "Site Pages Variation",
				locator1 = "Staging#STAGING_VARIATION_LABEL");
		}

		task ("Assert the Main Variation is selected in Site Pages Variation field") {
			Staging.viewSitePagesVariationPG(sitePagesVariationName = "Main Variation");
		}

		task ("Assert the workflow status is Approved") {
			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "Approved");
		}

		task ("Switch Ready for Publish Process to Yes") {
			Staging.markAsReadyForPublication();
		}

		task ("Assert the workflow status is Ready for Publish Process") {
			Pause(locator1 = "3000");

			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "Ready for Publish Process");
		}

		task ("Publish to Live") {
			Staging.gotoPublishToLive();

			Staging.publishToLive();
		}

		task ("Assert the workflow status is In Live") {
			Navigator.openWithAppendToBaseURL(urlAppend = "group/test-site-name-staging/private-content-page-name");

			AssertTextEquals(
				locator1 = "Staging#WORKFLOW_STATUS",
				value1 = "In Live");
		}

		task ("Navigate to the private content page in the live site") {
			Click(locator1 = "Staging#LIVE_BUTTON");
		}

		task ("Assert the Button fragment is shown") {
			AssertTextEquals(
				key_fragmentName = "button",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Go Somewhere");
		}
	}

}