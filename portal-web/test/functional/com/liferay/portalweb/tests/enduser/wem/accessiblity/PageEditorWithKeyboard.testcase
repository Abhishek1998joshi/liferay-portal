@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-165776. The page creator could add elements into the Container via keyboard."
	@priority = "5"
	test AddElementsIntoContainer {
		task ("Given a page creator has a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("When the page creator adds a Container to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragmentViaKeyboard(
				collectionName = "Layout Elements",
				fragmentName = "Container");
		}

		task ("Then the page creator could add elements into Container via keyboard") {
			PageEditor.addFragmentViaKeyboard(
				collectionName = "Basic Components",
				fragmentName = "Button",
				upCount = "1");

			AssertElementPresent(
				key_elementHeader = "//div[@aria-label='Button']",
				key_elementType = "Container",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");

			PageEditor.addWidgetViaKeyboard(
				categoryName = "Content Management",
				upCount = "1",
				widgetName = "Web Content Display");

			AssertElementPresent(
				key_elementHeader = "//div[@aria-label='Web Content Display']",
				key_elementType = "Container",
				key_position = "1",
				locator1 = "PageEditor#CONTAINER_CONTAINER_NESTED_ELEMENT");
		}
	}

	@description = "This is a test for LPS-165776. The page creator could add elements into the Grid via keyboard."
	@priority = "5"
	test AddElementsIntoGrid {
		task ("Given a page creator has a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("When the page creator adds a Grid to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragmentViaKeyboard(
				collectionName = "Layout Elements",
				fragmentName = "Grid");
		}

		task ("Then the page creator could add elements into Grid via keyboard") {
			PageEditor.addFragmentViaKeyboard(
				collectionName = "Basic Components",
				fragmentName = "Heading",
				upCount = "1");

			AssertElementPresent(
				key_columnNumber = "3",
				key_elementHeader = "//div[@aria-label='Heading']",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");

			PageEditor.addWidgetViaKeyboard(
				categoryName = "Content Management",
				upCount = "4",
				widgetName = "Asset Publisher");

			AssertElementPresent(
				key_columnNumber = "1",
				key_elementHeader = "//div[@aria-label='Asset Publisher']",
				key_position = "1",
				locator1 = "PageEditor#GRID_COLUMN_NESTED_ELEMENT");

			PageEditor.addFragmentViaKeyboard(
				collectionName = "Basic Components",
				fragmentName = "Button",
				upCount = "6");

			PageEditor.viewFragmentOrder(
				fragmentName = "Button",
				position = "1");

			PageEditor.viewFragmentOrder(
				fragmentName = "Grid",
				position = "2");
		}
	}

	@description = "This is a test for LPS-165776. The page creator could add fragments to page via keyboard."
	@priority = "5"
	test AddFragmentsToPage {
		task ("Given a page creator has a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("When the page creator accesses to the page editor") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("Then the page creator could add fragments to page via keyboard") {
			PageEditor.addFragmentViaKeyboard(
				collectionName = "Basic Components",
				fragmentName = "Heading");

			PageEditor.viewFragment(fragmentName = "Heading");

			PageEditor.addFragmentViaKeyboard(
				collectionName = "Basic Components",
				fragmentName = "Button");

			PageEditor.viewFragment(fragmentName = "Button");
		}
	}

	@description = "This is a test for LPS-165776. The page creator could add widgets to page via keyboard."
	@priority = "5"
	test AddWidgetsToPage {
		task ("Given a page creator has a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				type = "content");
		}

		task ("When the page creator accesses to the page editor") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");
		}

		task ("Then the page creator could add fragments to page via keyboard") {
			PageEditor.addWidgetViaKeyboard(
				categoryName = "Collaboration",
				widgetName = "Blogs");

			PageEditor.viewFragment(fragmentName = "Blogs");

			PageEditor.addWidgetViaKeyboard(
				categoryName = "Content Management",
				widgetName = "Asset Publisher");

			PageEditor.viewFragment(fragmentName = "Asset Publisher");
		}
	}

}