@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

		task ("Add a new site with a public widget page") {
			ACUtils.addSiteAndPage();
		}

		task ("Connect the DXP to AC") {
			ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Sync the Contact Data") {
			ACDXPSettings.syncNewContactData();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8805 | Test Summary: Check pageDepthReached triggers ([depth] = 25) and check its properties (see reference document in comments)"
	@priority = "4"
	test CheckPageDepthReachedTo25 {
		property proxy.server.enabled = "true";

		task ("Add a Blogs widget to page") {
			ACUtils.addWidgetToPage(
				layoutName = "AC Page",
				widgetName = "Blogs");
		}

		task ("Add 10 blogs entries with long content") {
			var n = "0";

			while ("${n}" != "10") {
				var n = ${n} + 1;

				JSONBlog.addEntry(
					entryContent = '''When Dorothy Butler Gilliam arrived at a wealthy Washington woman's 100th birthday party the doorman told her she couldn't enter via the front door. "The maid's entrance is around the back," he explained. "I am not a maid, I am a reporter for the Washington Post," she replied. Dorothy was the first African American woman to report for the newspaper. She started there in 1961, and went on to work as an editor and columnist over the next three decades, witnessing seismic changes in US society, and in the media.''',
					entryTitle = "Blogs Entry Title ${n}",
					groupName = "Site Name");
			}
		}

		task ("Get site assigned property name") {
			var propertyName = ACDXPSettings.getAssignedPropertyName(siteName = "Site Name");
		}

		task ("Get the Property ID in AC") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			var expectedChannelId = ACSettings.getPropertyId(propertyName = "${propertyName}");
		}

		task ("Get the DXP Instance ID in AC") {
			var dataSourceName = StringUtil.extractFirst("${propertyName}", "Combined");
			var dataSourceName = StringUtil.trim("${dataSourceName}");

			var expectedDataSourceId = ACSettings.getDXPInstanceId(dataSourceName = "${dataSourceName}");
		}

		task ("Sign in as Test Test") {
			ACUtils.launchDXP();
		}

		task ("Navigate to the site page") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");
		}

		task ("Start Har recording") {
			ProxyUtil.startHarRecording("pageDepthReached");
		}

		task ("Scroll down to view the fourth blogs entry") {
			ScrollWebElementIntoView(
				key_entryTitle = "Blogs Entry Title 7",
				locator1 = "BlogsEntry#TITLE");
		}

		task ("Wait for sending requests") {
			Pause(locator1 = "5000");
		}

		task ("View the page of pageDepthReached event") {
			ACUtils.assertEventPropertyValue(
				applicationId = "Page",
				eventId = "pageDepthReached",
				property = "depth",
				value = "25");
		}

		task ("View the request common properties value") {
			ACUtils.assertRequestCommonPropertiesValue(
				expectedChannelId = "${expectedChannelId}",
				expectedDataSourceId = "${expectedDataSourceId}");
		}
	}

}