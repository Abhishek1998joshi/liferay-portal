@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "32";
	property portal.release = "false";
	property portal.upstream = "true";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8595 | Test Summary: Delete a criteria"
	@ignore = "true"
	@priority = "3"
	test CanDeleteCriteria {

		// TODO LRAC-8595 CanDeleteCriteria pending implementation

	}

	@description = "Delete a dynamic segment"
	@priority = "5"
	test CanDeleteDynamicSegment {
		ACUtils.createBlogsAndAddToPage();

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		Navigator.gotoSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		BlogsNavigator.gotoPG(entryTitle = "Blogs AC Title");

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSegments();

		ACSegments.createDynamicSegment();

		ACSegments.nameSegment(segmentName = "Dynamic Segment Test");

		ACSegments.addSegmentField(segmentField = "Viewed Blog");

		ACSegments.selectDocument(
			documentTitle = "Blogs AC Title",
			indexField = "1");

		ACSegments.saveSegment();

		ACNavigation.goToSegments();

		ACSegments.viewSegmentName(searchTerm = "Dynamic Segment Test");

		ACSegments.deleteSegment(searchTerm = "Dynamic Segment Test");

		ACSegments.viewDeletedSegmentName(searchTerm = "Dynamic Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8597 | Test Summary: Delete a Segment via the Segment List"
	@ignore = "true"
	@priority = "4"
	test CanDeleteSegmentViaSegmentList {

		// TODO LRAC-8597 CanDeleteSegmentViaSegmentList pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8138 | Test Summary: Delete a static segment"
	@priority = "5"
	test CanDeleteStaticSegment {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");

		JSONUser.addUser(
			userEmailAddress = "ac@liferay.com",
			userFirstName = "ac",
			userLastName = "ac",
			userScreenName = "ac");

		ACDXPSettings.syncNewContactData();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ac@liferay.com",
			userLoginFullName = "ac ac");

		Navigator.gotoSitePage(
			pageName = "AC Page",
			siteName = "Site Name");

		ACUtils.closeAllSessions();

		Pause(locator1 = "30000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSegments();

		ACSegments.createStaticSegment();

		ACSegments.nameSegment(segmentName = "Static Segment Test");

		ACSegments.addStaticMember(tableMember = "ac ac");

		ACSegments.saveSegment();

		AssertTextEquals(
			locator1 = "ACSegments#SEGMENT_LABEL",
			value1 = "STATIC SEGMENT");

		ACNavigation.goToSegments();

		ACSegments.viewSegmentName(searchTerm = "Static Segment Test");

		ACSegments.deleteSegment(searchTerm = "Static Segment Test");

		ACSegments.viewDeletedSegmentName(searchTerm = "Static Segment Test");
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8592 | Test Summary: Deleting a custom field that is used by a segment should reset the data"
	@ignore = "true"
	@priority = "4"
	test DeleteCustomFieldUsedSegmentResetData {

		// TODO LRAC-8592 DeleteCustomFieldUsedSegmentResetData pending implementation

	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8594 | Test Summary: Deleting a data source causes individuals to be removed from segment"
	@ignore = "true"
	@priority = "4"
	test DeleteDataSourceIndividualsRemovedSegmet {

		// TODO LRAC-8594 DeleteDataSourceIndividualsRemovedSegmet pending implementation

	}

}