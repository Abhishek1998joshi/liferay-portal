@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that a translation can be added"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeCreated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133516 CanBeCreated pending implementation

	}

	@description = "Verify that multiple translations can be added"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeCreatedInMultipleLanguages {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133517 CanBeCreatedInMultipleLanguages pending implementation

	}

	@description = "Verify that only one translation is supported for each language"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeCreatedOnlyOncePerLanguage {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133514 CanBeCreatedOnlyOncePerLanguage pending implementation

	}

	@description = "Verify that a translation can be deactivated"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133519 CanBeDeleted pending implementation

	}

	@description = "Verify that a translation can be edited"
	@priority = "5"
	test CanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Text");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Text",
			label = "Text ES");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form1");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "Spanish (Spain)");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Text ES");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Text ES",
			label = "Text ES Edit");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form1");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "Spanish (Spain)");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Text ES Edit");
	}

	@description = "Verify that a translation can be previewed"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBePreviewed {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133520 CanBePreviewed pending implementation

	}

	@description = "Verify that a translation can be published"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBePublished {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133521 CanBePublished pending implementation

	}

	@description = "Verify that a translated Form can be submitted"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmitted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133522 CanBeSubmitted pending implementation

	}

	@description = "Verify that a Color field's Label and Help Text can be translated"
	@priority = "5"
	test ColorFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Color");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Test Help Text");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Color ES");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Color");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Color",
			fieldValue = "Test Help Text");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Color ES");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Color ES",
			fieldValue = "Texto de Ayuda");
	}

	@description = "Verify that a Date field's Label and Help Text can be translated"
	@priority = "5"
	test DateFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Date");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Test Help Text");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Fecha");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Date");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Date",
			fieldValue = "Test Help Text");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Fecha");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Fecha",
			fieldValue = "Texto de Ayuda");
	}

	@description = "Verify that Forms submitted in different languages show the appropriate country flags in View Entries"
	@ignore = "Test Stub"
	@priority = "5"
	test EntriesDisplayTheCorrectLanguageFlag {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133523 EntriesDisplayTheCorrectLanguageFlag pending implementation

	}

	@description = "Verify that a field that is added in a translation is also added to the default language"
	@ignore = "Test Stub"
	@priority = "5"
	test FieldsAddedToTranslationAreAddedToDefaultLanguage {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133524 FieldsAddedToTranslationAreAddedToDefaultLanguage pending implementation

	}

	@description = "Verify that if a field is deleted on the default language, it is also deleted on the translation"
	@ignore = "Test Stub"
	@priority = "5"
	test FieldsDeletedInATranslationAreDeletedInTheDefaultLanguage {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133525 FieldsDeletedInATranslationAreDeletedInTheDefaultLanguage pending implementation

	}

	@description = "Verify that a Grid field's Label, Help Text and Options can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test GridFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133504 GridFieldCanBeTranslated pending implementation

	}

	@description = "Verify that an Image field's Label and Help Text can be translated"
	@priority = "5"
	test ImageFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Image");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Help Text Test");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Imagen");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormFields.viewTextLabel(fieldLabel = "Image");

		FormFields.viewFieldHelpText(
			fieldHelpText = "Help Text Test",
			fieldName = "Image");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormFields.viewTextLabel(fieldLabel = "Imagen");

		FormFields.viewFieldHelpText(
			fieldHelpText = "Texto de Ayuda",
			fieldName = "Image");
	}

	@description = "Verify that the properties of a field remain the same when adding a translation"
	@ignore = "Test Stub"
	@priority = "5"
	test MaintainPropertiesFromDefaultLanguage {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133526 MaintainPropertiesFromDefaultLanguage pending implementation

	}

	@description = "Verify that a Multiple Selection field's Label, Help Text and Options can be translated"
	@priority = "5"
	test MultipleSelectionFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Multiple Selection",
			formPageNumber = "0");

		FormViewBuilder.editText(
			fieldName = "Help Text",
			fieldValue = "Help Text Test");

		FormFields.editOptionsRow(
			optionName = "Option1",
			optionValue = "Option One",
			rowNumber = "1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option Two",
			rowNumber = "2");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Selección Múltiple");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		FormFields.editOptionsRow(
			optionName = "Option1",
			optionValue = "Opción Uno",
			rowNumber = "1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Opción Dos",
			rowNumber = "2");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Multiple Selection");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Multiple Selection",
			fieldValue = "Help Text Test");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Option One",
			fieldName = "Multiple Selection");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Option Two",
			fieldName = "Multiple Selection");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Selección Múltiple");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Selección Múltiple",
			fieldValue = "Texto de Ayuda");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Opción Uno",
			fieldName = "Selección Múltiple");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Opción Dos",
			fieldName = "Selección Múltiple");
	}

	@description = "Verify that a Numeric field's Label, Placeholder Text and Help Text can be translated"
	@priority = "5"
	test NumericFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Numeric");

		FormViewBuilder.setPlaceholder(fieldValue = "Test Placeholder Text");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Test Help Text");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Numérica");

		FormViewBuilder.setPlaceholder(fieldValue = "Texto del Marcador");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Numeric");

		Form.viewFormPlaceholderText(fieldPlaceholderText = "Test Placeholder Text");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Numeric",
			fieldValue = "Test Help Text");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Numérica");

		Form.viewFormPlaceholderText(fieldPlaceholderText = "Texto del Marcador");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Numérica",
			fieldValue = "Texto de Ayuda");
	}

	@description = "Verify that a Paragraph field's Label and Body Text can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test ParagraphFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133479 ParagraphFieldCanBeTranslated pending implementation

	}

	@description = "Verify that a Rich Text field's Label, Help Text and Predefined Value can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test RichTextFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133509 RichTextFieldCanBeTranslated pending implementation

	}

	@description = "Verify that a Select From List field's Label, Help Text and Options can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test SelectFromListFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133501 SelectFromListFieldCanBeTranslated pending implementation

	}

	@description = "Verify that a Separator field's Label and Help Text can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test SeparatorFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133513 SeparatorFieldCanBeTranslated pending implementation

	}

	@description = "Verify that a Single Selection field's Label, Help Text and Options can be translated"
	@priority = "5"
	test SingleSelectionFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Single Selection");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Test Help Text");

		FormFields.editOptionsRow(
			optionName = "Option1",
			optionValue = "Option One");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option Two",
			rowNumber = "2");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Selección Única");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		FormFields.editOptionsRow(
			optionName = "Option1",
			optionValue = "Opción Uno");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Opción Dos",
			rowNumber = "2");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Single Selection");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Single Selection",
			fieldValue = "Test Help Text");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Option One",
			fieldName = "Single Selection");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Option Two",
			fieldName = "Single Selection");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Selección Única");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Selección Única",
			fieldValue = "Texto de Ayuda");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Opción Uno",
			fieldName = "Selección Única");

		FormViewBuilder.validateFormMultipleSelectionField(
			fieldLabel = "Opción Dos",
			fieldName = "Selección Única");
	}

	@description = "Verify that a Text field's Autocomplete Options can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test TextFieldAutocompleteOptionsCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133497 TextFieldAutocompleteOptionsCanBeTranslated pending implementation

	}

	@description = "Verify that a Text field's Label, Placeholder Text and Help Text can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test TextFieldBasicPropertiesCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133481 TextFieldBasicPropertiesCanBeTranslated pending implementation

	}

	@description = "Verify that a Text field's Predefined Value can be translated"
	@ignore = "Test Stub"
	@priority = "5"
	test TextFieldPredefinedValueCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133494 TextFieldPredefinedValueCanBeTranslated pending implementation

	}

	@description = "Verify that an Upload field's Label and Help Text can be translated"
	@priority = "5"
	test UploadFieldCanBeTranslated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Upload");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Test Help Text");

		Form.addTranslation(localizedLanguage = "Spanish (Spain)");

		Form.editFieldLabelMetal(fieldValue = "Cargar");

		FormViewBuilder.setFieldHelpText(fieldLabel = "Texto de Ayuda");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.viewTranslationLanguage(symbolName = "en-US");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Upload");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Upload",
			fieldValue = "Test Help Text");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

		FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "español-España");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Cargar");

		FormViewBuilder.assertHelpTextPresent(
			fieldName = "Color ES",
			fieldValue = "Texto de Ayuda");
	}

}