@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a use case for LPS-111274. The light blue frame is shown when hover on unmapped editable field of selected fragments but the dark blue frame is shown when click on unmapped editable field of selected fragments."
	@priority = "5"
	test ClickUnmappedEditableFieldAndMouseOver {
		property portal.acceptance = "true";

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.clickEditableField(
			contributed = "true",
			fragmentName = "Heading",
			id = "element-text");

		Pause(locator1 = "1000");

		AssertCssValue(
			id = "element-text",
			key_fragmentName = "Heading",
			locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD",
			locator2 = "boxShadow",
			value1 = "rgb(11, 95, 255) 0px 0px 0px 2px inset");

		Click(locator1 = "PageEditor#CONTENT_PAGE_DISABLED_HEADER");

		Click.clickNoWaitForVisible(
			key_fragmentName = "Heading",
			locator1 = "Fragment#FRAGMENT_HEADER");

		MouseOver.mouseOverNotVisible(
			id = "element-text",
			key_fragmentName = "Heading",
			locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD");

		Pause(locator1 = "1000");

		AssertCssValue(
			id = "element-text",
			key_fragmentName = "Heading",
			locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD",
			locator2 = "boxShadow",
			value1 = "rgb(128, 172, 255) 0px 0px 0px 2px inset");
	}

	@description = "This is a use case for LPS-116989. Can resize the item configuration panel."
	@priority = "4"
	test ResizeConfigurationPanelAndCheckRestore {
		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Button");

		PageEditor.resizeConfigurationPanel(
			fragmentName = "Button",
			position = "0,-100");

		PageEditor.gotoTab(tabName = "Fragments and Widgets");

		PageEditor.gotoTab(tabName = "Selection");

		AssertElementPresent(locator1 = "PageEditor#CONFIGURATION_PANEL_HANDLE");

		AssertElementNotPresent(locator1 = "PageEditor#CONFIGURATION_PANEL_RESIZE");
	}

	@description = "This is a test for LPS-100121. Given a fragment with an editable image when the page author selects an image specifying a URL in the item selector then the URL is shown in selector input."
	@priority = "4"
	test ViewImageFromURLInImageFragment {
		task ("Add an Image fragment to page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Image");
		}

		task ("Select an image from URL") {
			PageEditor.editFragmentImage(
				fragmentName = "Image",
				id = "image-square",
				imageSourceURL = "https://raw.githubusercontent.com/liferay/liferay-portal/master/portal-web/test/functional/com/liferay/portalweb/dependencies/Document_1.jpg");
		}

		task ("Assert the selected image is shown in Image fragment") {
			PageEditor.viewFragmentEditableImage(
				id = "image-square",
				imageDescription = "",
				imageFileName = "Document_1.jpg");
		}

		task ("Assert the URL is shown in selector input") {
			AssertVisible(
				key_contentName = "https://raw.githubusercontent.com/liferay/liferay-portal/master/portal-web/test/functional/com/liferay/portalweb/dependencies/Document_1.jpg",
				locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT");

			PageEditor.clickPublish();
		}

		task ("View the selected image in view mode") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Content Page Name",
				siteName = "Test Site Name");

			PageEditor.viewFragmentEditableImage(
				id = "image-square",
				imageDescription = "",
				imageFileName = "Document_1.jpg");
		}
	}

}