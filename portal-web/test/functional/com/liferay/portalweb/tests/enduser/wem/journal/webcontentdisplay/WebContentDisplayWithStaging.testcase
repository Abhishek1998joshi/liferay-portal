@component-name = "portal-wcd"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Display";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}

		task ("Add a Web Content Display widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Web Content Display");
		}

		task ("Activate local live staging") {
			JSONStaging.enableLocalStaging(
				branchingPrivate = "false",
				branchingPublic = "false",
				groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "4"
	test StagingPublishExpiredWebContentViaWCD {
		property testray.component.names = "Staging,Web Content Administration";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Staging Test Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Staging Test Page",
			widgetName = "Web Content Display");

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Test Site Name",
			title = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		IFrame.closeFrame();

		WebContentDisplayPortlet.viewContent(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Staging.openStagingAdmin(siteUrlKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		Staging.viewStagingLocalLivePG();

		WebContentDisplayPortlet.viewContent(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		WebContent.expireSpecificVersionCP(webContentTitle = "WC WebContent Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		Staging.viewStagingLocalLivePG();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewMessage(expiredWebContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title");
	}

	@description = "This is a use case for LPS-77769."
	@priority = "5"
	test StagingPublishWCWithImageFieldEdit {
		property portal.acceptance = "true";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Staging Test Page");

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		Staging.openStagingAdmin(siteUrlKey = "test-site-name");

		Staging.activateStagingCP(siteName = "Test Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		Staging.viewStagingLocalLivePG();

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Image",
			fieldName = "Image");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Image",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			navTab = "Web Content Images",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentImage = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name (Staging)",
			layoutName = "Staging Test Page",
			site = "false",
			widgetName = "Web Content Display");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		IFrame.closeFrame();

		WebContentDisplayPortlet.viewContent(
			imageFileName = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		WebContentDisplayPortlet.viewContent(
			imageFileName = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteUrlKey = "test-site-name-staging");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		Type(
			key_fieldFieldLabel = "Image",
			locator1 = "WCEditWebContent#IMAGE_DESCRIPTION",
			value1 = "Web Content Image Description");

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Staging Test Page",
			siteName = "Test Site Name");

		AssertHTMLSourceTextPresent(value1 = "Web Content Image Description");

		AssertConsoleTextNotPresent(value1 = "DuplicateFileEntryException");
	}

	@description = "This is a use case for LPS-101289."
	@priority = "4"
	test ViewCommentAfterEditingViaStage {
		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Staging Test Page");

		Staging.openStagingAdmin(siteUrlKey = "site-name");

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		PagesAdmin.openPagesAdmin(siteUrlKey = "site-name-staging");

		PagesAdmin.addPublicPage(pageName = "Web Content Page");

		PagesAdmin.configurePage(
			columnName = "1 Column",
			pageName = "Web Content Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoStagedSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

		WebContentDisplayPortlet.configureSetupPG(
			enableViewCountIncrement = "true",
			metadataNameList = "Comments");

		WebContentDisplayPortlet.saveConfiguration();

		AssertTextEquals.assertPartialText(
			key_portletName = "Web Content Display",
			locator1 = "Portlet#BODY",
			value1 = "Comments are unavailable in staged sites.");

		Navigator.gotoStagedSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		WebContentDisplayPortlet.viewContent(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Comments.addPG(entryComment = "WC WebContent Content Comment");

		Comments.viewPG(
			commentCount = "1",
			entryComment = "WC WebContent Content Comment",
			userFullName = "Test Test (You)");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContent.moveToRecycleBinViaDeleteIconCP();

		Navigator.gotoStagedSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		WebContent.viewTitle(webContentTitle = "WC WebContent Title Edit");

		Navigator.gotoStagedSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(
			pageName = "Web Content Page",
			siteName = "Site Name");

		Comments.viewPG(
			commentCount = "1",
			entryComment = "WC WebContent Content Comment",
			userFullName = "Test Test (You)");
	}

}