@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Publications",
			panel = "Applications",
			portlet = "Settings");

		Publications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ApplicationsMenu.gotoPortlet(
				category = "Publications",
				panel = "Applications",
				portlet = "Settings");

			Publications.disablePublications();
		}
	}

	@priority = "4"
	test ConflictingPublicationsNeedManualResolution {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Publications.createNewPublication(publicationsName = "Publication 1 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text 1 Edited",
			fieldName = "Text");

		PortletEntry.publish();

		Publications.createNewPublication(publicationsName = "Publication 2 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Record Text");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text 2 Edited",
			fieldName = "Text");

		PortletEntry.publish();

		Publications.gotoPublish(publicationsName = "Publication 2 Name");

		Publications.publishPublication(publicationsName = "Publication 2 Name");

		Publications.selectPublication(publicationsName = "Publication 1 Name");

		Publications.gotoPublish(publicationsName = "Publication 1 Name");

		Publications.discardPublications(
			conflictingPublications = "true",
			entryTitle = "Dynamic Data Lists Record",
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsTitle = "Dynamic Data Lists Record");

		Publications.gotoPublish(publicationsName = "Publication 1 Name");

		Publications.publishPublication(publicationsName = "Publication 1 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Record Text 2 Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "4"
	test PublishPublicationWithDeletedListAndRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.deleteCP(
			ddlListName = "List Name",
			ddlRecordFieldData = "Text Field");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.deleteCP(ddlListName = "List Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.deleteCP(ddlDataDefinitionName = "Data Definition");

		Publications.gotoReviewPublications(publicationsName = "Publication Name");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Deleted",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Asset",
			publicationsSite = "Guest",
			publicationsTitle = "New Data Definition for List: List Name",
			publicationsType = "Deleted",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsSite = "Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			publicationsType = "Deleted",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Deleted",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsDescription = "Test Test deleted a Dynamic Data Lists Record in Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			showAllItems = "true");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		LexiconEntry.viewNoEntry(rowEntry = "List Name");
	}

	@priority = "3"
	test PublishPublicationWithDispalyTemplate {
		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLTemplate.addDisplayTemplateTemplateViaDDLDisplayPG(
			ddlDisplayTemplateLanguage = "FreeMarker (.ftl)",
			ddlDisplayTemplateName = "Display Template Name",
			ddlDisplayTemplateScript = "Text");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "List Name");

		DDLTemplate.selectDisplayTemplateViaDDLDisplayPG(ddlDisplayTemplateName = "Display Template Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		AssertTextPresent(
			locator1 = "//div[@class='portlet-body']",
			value1 = "Text");

		Publications.gotoReviewPublications();

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Template",
			publicationsSite = "Guest",
			publicationsTitle = "Display Template Name",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		AssertTextPresent(
			locator1 = "//div[@class='portlet-body']",
			value1 = "Text");
	}

	@priority = "4"
	test PublishPublicationWithEditedListAndRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Field",
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.publish();

		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Text");

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.editCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name",
			ddlRecordFieldData = "Text Field");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text Edited",
			fieldName = "Text");

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "03/30/2021",
			fieldFieldLabel = "Date",
			fieldName = "Date");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.editCP(
			ddlListDescriptionEdit = "List Description Edit",
			ddlListName = "List Name",
			ddlListNameEdit = "List Name Edit");

		Publications.gotoReviewPublications(publicationsName = "Publication Name");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Modified",
			publicationsUser = "Test Test");

		// Workaround LPS-129885

		/*PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Asset",
			publicationsSite = "Guest",
			publicationsTitle = "New Data Definition for List: List Name",
			publicationsType = "Modified",
			publicationsUser = "Test Test",
			showAllItems = "true");*/

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsSite = "Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			publicationsType = "Modified",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Modified",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsDescription = "Test Test modified a Dynamic Data Lists Record in Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			showAllItems = "true");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name Edit");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Record Text Edited",
			field = "Text",
			fieldFieldLabel = "Text");
	}

	@priority = "4"
	test PublishPublicationWithNewListAndRecord {
		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.png",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		PortletEntry.publish();

		Publications.gotoReviewPublications(
			gotoManagePublications = "true",
			publicationsName = "Publication Name");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Asset",
			publicationsOrder = "2",
			publicationsSite = "Guest",
			publicationsTitle = "New Data Definition for List: List Name",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsSite = "Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsDescription = "Test Test added a Dynamic Data Lists Record in Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			showAllItems = "true");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Document_1.png",
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media");
	}

}