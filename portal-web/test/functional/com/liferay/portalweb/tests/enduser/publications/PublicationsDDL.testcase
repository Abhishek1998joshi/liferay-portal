@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Publications",
			panel = "Applications",
			portlet = "Settings");

		Publications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ApplicationsMenu.gotoPortlet(
				category = "Publications",
				panel = "Applications",
				portlet = "Settings");

			Publications.disablePublications();
		}
	}

	@priority = "4"
	test PublishPublicationWithNewListAndRecord {
		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.png",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia");

		PortletEntry.publish();

		Publications.gotoReviewPublications(
			gotoManagePublications = "true",
			publicationsName = "Publication Name");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Asset",
			publicationsOrder = "2",
			publicationsSite = "Guest",
			publicationsTitle = "New Data Definition for List: List Name",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsSite = "Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "Data Definition",
			publicationsType = "Added",
			publicationsUser = "Test Test",
			showAllItems = "true");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Dynamic Data Lists Record",
			publicationsDescription = "Test Test added a Dynamic Data Lists Record in Guest",
			publicationsTitle = "Dynamic Data Lists Record",
			showAllItems = "true");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Dynamic Data Lists");

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Document_1.png",
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media");
	}

}