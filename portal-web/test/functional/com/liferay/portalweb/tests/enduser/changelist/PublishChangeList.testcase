@component-name = "portal-change-list"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Change List";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Content",
			panel = "Applications",
			portlet = "Settings");

		ChangeList.enableChangeList();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Settings");

			ChangeList.disableChangeList();
		}
	}

	@priority = "5"
	test ConflictingChangesAutomaticallyResolved {
		property test.name.skip.portal.instance = "PublishChangeList#ConflictingChangesAutomaticallyResolved";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		ChangeList.createNewPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		ChangeList.createNewPublication(publicationName = "Publication 2 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content 2 Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title 2 Edit");

		ChangeList.prepareToPublish(publicationName = "Publication 2 Name");

		ChangeList.publishPublication(publicationName = "Publication 2 Name");

		ChangeList.selectPublication(publicationName = "Publication Name");

		ChangeList.prepareToPublish(
			gotoManagePublications = "true",
			publicationName = "Publication Name");

		// Workaround LPS-115599

		/*AssertElementNotPresent(locator1 = "ChangeList#NEEDS_MANUAL_RESOLUTION_TABLE");

		AssertElementNotPresent(
			key_warningMessage = "The conflict cannot be automatically resolved.",
			locator1 = "Message#WARNING_SPECIFIC");

		ChangeList.publishPublication(publicationName = "Publication Name");*/
	}

	@priority = "4"
	test ConflictingChangesNeedsManualResolution {
		property test.name.skip.portal.instance = "PublishChangeList#ConflictingChangesNeedsManualResolution";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		ChangeList.createNewPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContent.deleteCP(
			siteURLKey = "Guest",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		ChangeList.createNewPublication(publicationName = "Publication 2 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content 2 Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title 2 Edit");

		ChangeList.selectPublication(publicationName = "Publication Name");

		ChangeList.prepareToPublish(publicationName = "Publication Name");

		ChangeList.publishPublication(publicationName = "Publication Name");

		ChangeList.selectPublication(publicationName = "Publication 2 Name");

		ChangeList.prepareToPublish(publicationName = "Publication 2 Name");

		AssertElementPresent(locator1 = "ChangeList#NEEDS_MANUAL_RESOLUTION_TABLE");

		AssertElementPresent(
			key_warningMessage = "Modification conflicts with a deletion.",
			locator1 = "Message#WARNING_SPECIFIC");

		AssertVisible(locator1 = "ChangeList#DISABLED_PUBLISH_BUTTON");
	}

	@priority = "5"
	test PublishAndRevertPublication {
		property test.name.skip.portal.instance = "PublishChangeList#PublishAndRevertPublication";

		ChangeList.createNewPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		ChangeList.prepareToPublish(publicationName = "Publication Name");

		ChangeList.publishPublication(publicationName = "Publication Name");

		ChangeList.viewPublishedPublicationDetails(
			publicationName = "Publication Name",
			publicationPublishedBy = "Test Test");

		AssertTextPresent(
			key_publicationName = "Production",
			locator1 = "ChangeList#CHANGE_LIST_INDICATOR_TITLE",
			value1 = "Production");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		AssertElementPresent(
			key_webContentTitle = "Web Content Title",
			locator1 = "WC#ENTRY_LIST_TITLE");

		ApplicationsMenu.gotoPortlet(
			category = "Content",
			panel = "Applications",
			portlet = "Manage Publications");

		Navigator.gotoNavTab(navTab = "History");

		ChangeList.revertPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No web content was found.");
	}

	@priority = "5"
	test PublishParallelPublications {
		property test.name.skip.portal.instance = "PublishChangeList#PublishParallelPublications";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name");

		ChangeList.createNewPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 1 Content",
			webContentTitle = "WC WebContent 1 Title");

		PortletEntry.publish();

		ChangeList.createNewPublication(publicationName = "Publication 2 Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 2 Content",
			webContentTitle = "WC WebContent 2 Title");

		PortletEntry.publish();

		ChangeList.prepareToPublish(publicationName = "Publication 2 Name");

		ChangeList.publishPublication(publicationName = "Publication 2 Name");

		ChangeList.selectPublication(publicationName = "Publication Name");

		ChangeList.prepareToPublish(publicationName = "Publication Name");

		ChangeList.publishPublication(publicationName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		AssertElementPresent(
			key_webContentTitle = "WC WebContent 1 Title",
			locator1 = "WC#ENTRY_LIST_TITLE");

		AssertElementPresent(
			key_webContentTitle = "WC WebContent 2 Title",
			locator1 = "WC#ENTRY_LIST_TITLE");
	}

	@priority = "5"
	test SearchPublishedPublications {
		property test.name.skip.portal.instance = "PublishChangeList#SearchPublishedPublications";

		ChangeList.createNewPublication(publicationName = "Apple");

		ChangeList.createNewPublication(publicationName = "Banana");

		ChangeList.createNewPublication(publicationName = "Cherry");

		ApplicationsMenu.gotoPortlet(
			category = "Content",
			panel = "Applications",
			portlet = "Manage Publications");

		Navigator.gotoNavTab(navTab = "Ongoing");

		for (var publicationName : list "Apple,Banana,Cherry") {
			ChangeList.search(publicationName = "${publicationName}");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Cherry");

		ChangeList.prepareToPublish(publicationName = "Cherry");

		ChangeList.publishPublication(publicationName = "Cherry");

		ChangeList.selectPublication(publicationName = "Banana");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Banana");

		ChangeList.prepareToPublish(publicationName = "Banana");

		ChangeList.publishPublication(publicationName = "Banana");

		ChangeList.selectPublication(publicationName = "Apple");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Apple");

		ChangeList.prepareToPublish(publicationName = "Apple");

		ChangeList.publishPublication(publicationName = "Apple");

		Navigator.gotoNavTab(navTab = "History");

		for (var publicationName : list "Apple,Banana,Cherry") {
			ChangeList.search(publicationName = "${publicationName}");
		}
	}

}