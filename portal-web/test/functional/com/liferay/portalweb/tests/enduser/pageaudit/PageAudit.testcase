@component-name = "portal-page-audit"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Page Audit";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		task ("Create content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		PageAudit.setAPIViaSystemSettings(apiKey = " ");

		JSONGroup.deleteGroupByName(groupName = "Test Site Name");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-119066: Given the Page Audit Panel
	When the audit is launched (the API is called)
	Then a progress bar shows and moves forward while retrieving the data until they can be shown"

	@priority = "3"
	@uitest
	test AssertProgressBar {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#AssertProgressBar";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(URL = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Set Google PageSpeed API") {
			PageAudit.setAPIViaSystemSettings(apiKey = "AIzaSyAq-oKsvIhlYHdk1UXCFy63h74ECIgbgbE");
		}

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

		task ("Open Page Audit panel and assert the progress bar") {
			PageAudit.openPanelAfterConfiguration(pageName = "Content Page");

			AssertElementPresent(locator1 = "PageAudit#PROGRESS_BAR");
		}
	}

	@description = "Given the Page Audit panel
	When the API key is set but it is not valid
	Then the Page Speed API will show a 'Show details' link, that will display the info details of the error, provided by the API."

	@priority = "3"
	test CheckErrorDetailsDisplayedInvalidApiKey {
		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();

			Refresh();
		}

		task ("Set Google PageSpeed API") {
			PageAudit.setAPIViaSystemSettings(apiKey = "invalidAPI");
		}

		task ("Open Page Audit panel and assert 'Show details' link") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.openPanelAfterConfiguration(pageName = "Content Page");

			WaitForElementPresent(
				errorTitle = "The API key is invalid.",
				locator1 = "PageAudit#ERROR_WARNING_TITLE");

			Button.click(button = "Show Details");

			AssertElementPresent(
				errorMessage = "API key not valid. Please pass a valid API key.",
				locator1 = "PageAudit#ERROR_WARNING_MESSAGE");
		}
	}

	@description = "Given the Page Audit panel in a private page
	Then the reload button won't be visible."

	@priority = "3"
	test CheckNotVisibleReloadbButtonInPrivatePage {
		task ("Create a Private Page") {
			JSONLayout.addPrivateLayout(
				groupName = "Test Site Name",
				layoutName = "Private Page Name");
		}

		task ("Go to Private Page") {
			Navigator.gotoPrivateSitePage(
				pageName = "Private Page Name",
				siteName = "Test Site Name");
		}

		task ("Open Page Audit tab and Assert reload button id not present") {
			PageAudit.openPanelBeforeConfiguration();

			IsElementPresent(locator1 = "PageAudit#ERROR_WARNING_BOX");

			IsElementNotPresent(locator1 = "PageAudit#RELAUNCH_PAGE_AUDIT_BUTTON");
		}
	}

	@priority = "4"
	@uitest
	test NavigateToSecondLevel {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#NavigateToSecondLevel";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(URL = "https://liferay-tango.github.io/liferay-portal/page-audit-test");
		}

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Set Google PageSpeed API") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.setAPIViaSiteSettings(apiKey = "AIzaSyAq-oKsvIhlYHdk1UXCFy63h74ECIgbgbE");
		}

		task ("Open Page Audit panel and navigate to the second level of an issue") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.openPanelAfterConfiguration(pageName = "Content Page");

			PageAudit.goToDetailView(failingCheckName = "Low Contrast Ratio");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_CHECK_TITLE",
				value1 = "Low Contrast Ratio");

			AssertTextPresent(
				locator1 = "PageAudit#PANEL_TITLE",
				value1 = "DESCRIPTION");

			AssertTextPresent(
				locator1 = "PageAudit#PANEL_TITLE",
				value1 = "TIPS");

			AssertElementPresent(
				badgeValue = "1",
				locator1 = "PageAudit#BADGE_NUMBER");

			AssertTextPresent(
				locator1 = "PageAudit#FAILING_ELEMENT_NAME",
				value1 = "color-contrast");
		}
	}

	@description = "LPS-135681 Given the Page Audit panel in its initial state (no API Key configured)
	When the user clicks on the Configure button
	Then the user navigates to Site settings > Pages > Google PageSpeed Insights tab"

	@priority = "4"
	test NavigateToSiteSettingsWhenApiKeyNotConfigured {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#NavigateToSiteSettingsWhenApiKeyNotConfigured";

		task ("Open Page Audit panel") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Site settings > Pages throught the 'Configure' button in panel and Assert page") {
			PageAudit.connectToGooglePageAudit();

			AssertElementPresent(
				key_breadcrumbName = "Site Settings",
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY_LINK");

			AssertTextPresent(
				locator1 = "Breadcrumb#BREADCRUMB_ENTRY_ACTIVE_ENTRY",
				value1 = "Pages");

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}
	}

	@description = "LPS-119068: When the user, after s/he has clicked on the Connect with Page Speed (button) and being led to Site Settings > Pages > Google PageSpeed, clicks on Back button, s/he is led to the page view again"
	@priority = "3"
	test PageAuditBackButton {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditBackButton";

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Add Content Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Google PageSpeed throught the button in panel") {
			PageAudit.connectToGooglePageAudit();

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}

		task ("Go back to the panel throught the back button") {
			PageAudit.backToPageBackButton();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}
	}

	@description = "LPS-119068: When the user, after s/he has clicked on the Connect with Page Speed (button) and being led to Site Settings > Pages > Google PageSpeed, clicks on Cancel button, s/he is led to the page view again"
	@priority = "3"
	test PageAuditCancelButton {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditCancelButton";

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Add Content Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Google PageSpeed throught the button in panel") {
			PageAudit.connectToGooglePageAudit();

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}

		task ("Go back to the panel throught the cancel button") {
			PageAudit.backToPageCancelButton();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a content page, the issue icon for displaying the page audit panel shows"
	@priority = "5"
	test PageAuditContentPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditContentPage";

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Add Content Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Google PageSpeed throught the button in panel") {
			PageAudit.connectToGooglePageAudit();

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is off, the issue icon to display the page audit panel in the content pages doesn't show"
	@priority = "3"
	test PageAuditContentPageDisabled {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditContentPageDisabled";

		task ("Disable Google PageSpeed") {
			PageAudit.disableGooglePageSpeed();
		}

		task ("Add Content Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");
		}

		task ("Go to the Content Page and assert the Page Audit panel is not shown") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a display page, the issue icon for displaying the page audit panel shows"
	@priority = "5"
	test PageAuditDisplayPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditDisplayPage";

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Add Display Page and mark it as default") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				subType = "Basic Web Content");

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Display Page Name");

			Button.clickPublish();

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.markDisplayPageAsDefault(displayPageName = "Display Page Name");
		}

		task ("Add Web Content and check it in its display page") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Test Site Name",
				title = "WC Title");

			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");

			LexiconTable.clickTableEntryColumnLink(
				columnName = "title",
				tableEntry = "");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Google PageSpeed throught the button in panel") {
			PageAudit.connectToGooglePageAudit();

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is off, the issue icon to display the page audit panel in the display pages doesn't show"
	@priority = "3"
	test PageAuditDisplayPageDisabled {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditDisplayPageDisabled";

		task ("Disable Google PageSpeed") {
			PageAudit.disableGooglePageSpeed();
		}

		task ("Add Display Page and mark it as default") {
			JSONLayoutpagetemplate.addDisplayPageTemplateEntry(
				contentType = "Web Content Article",
				displayPageTemplateEntryName = "Display Page Name",
				groupName = "Test Site Name",
				subType = "Basic Web Content");

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.gotoDisplayPage(displayPageName = "Display Page Name");

			Button.clickPublish();

			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");

			DisplayPageTemplatesAdmin.markDisplayPageAsDefault(displayPageName = "Display Page Name");
		}

		task ("Add Web Content and check it in its display page") {
			JSONWebcontent.addWebContent(
				content = "WC Content",
				groupName = "Test Site Name",
				title = "WC Title");

			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");

			LexiconTable.clickTableEntryColumnLink(
				columnName = "title",
				tableEntry = "");
		}

		task ("Assert the Page Audit panel is not shown") {
			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is on and a user with permissions to view page visits the view mode of a widget page, the issue icon for displaying the page audit panel shows"
	@priority = "5"
	test PageAuditWidgetPage {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditWidgetPage";

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Add Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Widget Page");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/widget-page");
		}

		task ("Open Page Audit panel") {
			PageAudit.openPanelBeforeConfiguration();

			AssertTextPresent(
				locator1 = "PageAudit#CHECK_ISSUES_TEXT",
				value1 = "Check issues that impact on your page's accessibility and SEO.");
		}

		task ("Go to Google PageSpeed throught the button in panel") {
			PageAudit.connectToGooglePageAudit();

			AssertTextPresent(
				locator1 = "PageAudit#GOOGLE_PAGESPEED_TITLE",
				value1 = "Google PageSpeed Insights");
		}
	}

	@description = "LPS-119068: When the Enable Page Audit check in System Settings is off, the issue icon to display the page audit panel in the widget pages doesn't show"
	@priority = "3"
	test PageAuditWidgetPageDisabled {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageAuditWidgetPageDisabled";

		task ("Disable Google PageSpeed") {
			PageAudit.disableGooglePageSpeed();
		}

		task ("Add Widget Page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Widget Page");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/widget-page");
		}

		task ("Assert the Page Audit panel is not shown") {
			AssertElementNotPresent(locator1 = "PageAudit#PAGE_AUDIT_BUTTON");
		}
	}

	@priority = "3"
	@uitest
	test PageWithNoIssues {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "PageAudit#PageWithNoIssues";

		task ("Set a custom page as canonical URL to have data already loaded") {
			PageAudit.setSEOcanonicalURL(URL = "https://liferay-tango.github.io/liferay-portal/page-audit-test-no-issues");
		}

		task ("Enable Google PageSpeed") {
			PageAudit.enableGooglePageSpeed();
		}

		task ("Set Google PageSpeed API") {
			PageAudit.setAPIViaSystemSettings(apiKey = "AIzaSyAq-oKsvIhlYHdk1UXCFy63h74ECIgbgbE");
		}

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

		task ("Open Page Audit panel and assert there are no issues") {
			PageAudit.openPanelAfterConfiguration(pageName = "Content Page");

			AssertElementPresent(locator1 = "PageAudit#SUCCESS_IMAGE");

			AssertTextPresent(
				locator1 = "PageAudit#NO_ISSUES_MESSAGE",
				value1 = "Your page has no issues.");
		}
	}

}