@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONPublications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Publications.disablePublications();
		}
	}

	@description = "Assert we can publish the publication with blog with cover image."
	@priority = "4"
	test PublishBlogsEntryWithCoverImage {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		Button.clickPublish();

		PublicationsNavigator.gotoReviewChanges();

		PublicationsChanges.viewChanges(
			changeCategory = "Blogs Entry",
			changeSite = "Guest",
			changeTitle = "Blogs Entry Title",
			changeType = "Added",
			changeUser = "Test Test",
			showAllItems = "true");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.searchBlogImages(imageFileName = "Document_1.jpg");
	}

}