@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Display Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-110247. The user can create a display page template for Category and mark it as default."
	@priority = "5"
	test AddDisplayPageTemplateAndMarkItAsDefault {
		task ("Navigate to Display Page Template admin") {
			DisplayPageTemplatesAdmin.openDisplayPagesAdmin(siteURLKey = "test-site-name");
		}

		task ("Add a display page template for Category") {
			DisplayPageTemplatesAdmin.addDisplayPage(
				contentType = "Category",
				displayPageName = "Display Page Name");
		}

		task ("Assert the display page template name is shown in control menu") {
			ControlMenu.viewHeaderTitle(headerTitle = "Display Page Name");
		}

		task ("Add a Heading fragment to display page template") {
			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");
		}

		task ("Mapping Name field to Heading") {
			PageEditorMapping.mapEditableTextToField(
				field = "Name",
				fragmentName = "Heading",
				id = "element-text");

			PageEditor.clickPublish();
		}

		task ("Mark the display page template as default") {
			DisplayPageTemplatesAdmin.markDisplayPageAsDefault(displayPageName = "Display Page Name");
		}
	}

}