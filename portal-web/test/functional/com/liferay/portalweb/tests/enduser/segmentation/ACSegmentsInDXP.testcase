@component-name = "portal-segmentation"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Segmentation";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		task ("Create content page") {
			JSONGroup.addGroup(groupName = "Test Site Name");

			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Content Page",
				type = "content");
		}

		task ("Conect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Test Site Name");
		}

		task ("Navigate to Page and Blog") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}

		task ("Close all sessions and wait") {
			ACUtils.closeAllSessionsAndWait();
		}

		task ("Launch AC and Switch Property") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Go to Segments and add a new segment") {
			ACNavigation.goToSegments();

			ACSegments.createStaticSegment();

			ACSegments.nameSegment(segmentName = "Static Segment Test");

			ACSegments.addStaticMember(tableMember = "Test Test");

			ACSegments.saveSegment();
		}

		task ("Go back to DXP") {
			Navigator.openURL();

			User.loginPG(
				password = "test",
				userEmailAddress = "test@liferay.com");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "LPS-96574 Given I have edit, delete and permission permissions for segments
	and I have connected my DXP instance with AC
	when I create an Individual Segment in AC and it shows in the DXP Segments administration
	then I don't see the edit action"
	@ignore = "true"
	@priority = "3"
	test CheckNotEditableSegmentFromACAtDXP {

		// TODO LPS-96574 CheckNotEditableSegmentFromACAtDXP pending implementation

	}

	@description = "LPS-111465 When a default virtual instance/company is not synced to AC, none of the segments created on AC for other virtual instances are listed in People > Segments"
	@ignore = "true"
	@priority = "5"
	test DefaultInstanceNotSynchronizedWithAC {

		// TODO LPS-111464 DefaultInstanceNotSynchronizedWithAC pending implementation

	}

	@description = "LPS-111465 When a non-default virtual instance/company is synced to AC, all the segments created on AC with more than one member are listed in People > Segments"
	@ignore = "true"
	@priority = "5"
	test NonDefaultInstanceSynchronizedOnAC {

		// TODO LPS-111464 NonDefaultInstanceSynchronizedOnAC pending implementation

	}

	@description = "LPS-96574 Given I have edit, delete and permission permissions for segments
	and I have connected my DXP instance with AC
	when I create an Individual Segment in AC and it shows in the DXP Segments administration
	and I delete the segment
	Then in the next sync time, the segment will appear again"
	@ignore = "true"
	@priority = "4"
	test PersistSegmentFromACAtDXP {

		// TODO LPS-96574 PersistSegmentFromACAtDXP pending implementation

	}

	@description = "LPS-94938 Validate if the user is redirected to the segment page details when he tries to see the detail of the imported segment from Analytics Cloud into DXP	"
	@priority = "5"
	test RedirectToSegmentPageAC {
		property portal.acceptance = "true";

		task ("Update Segments Analytics Cloud in System Settings") {
			Segmentation.updateACSegmentSystemSettings();
		}

		task ("Go to segmentats page and click at segment crieted in AC") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			ProductMenu.gotoPortlet(
				category = "People",
				portlet = "Segments");

			Click(
				key_tableEntry = "Static Segment Test",
				locator1 = "LexiconTable#TABLE_ENTRY_TITLE_LINK");
		}

		task ("Go and Log into AC and assert the segment page is open") {
			Navigator.selectSpecificWindow(windowTitle = "Analytics Cloud");

			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");

			ACUtils.assertPageTitle(pageTitle = "Static Segment Test");
		}
	}

	@description = "LPS-94938 Validate if the user is redirected to the not found Analytics Cloud page, when he tries to see the detail of the imported segment from Analytics Cloud into DXP, one time that the segment does not exist in Analytics Cloud anymore"
	@priority = "4"
	test RedirectToSegmentPageErrorAC {
		property portal.acceptance = "true";

		task ("Get site assigned property name") {
			var propertyName = ACDXPSettings.getAssignedPropertyName(siteName = "Test Site Name");
		}

		task ("Update Segments Analytics Cloud in System Settings") {
			Segmentation.updateACSegmentSystemSettings();
		}

		task ("Go to segmentats page and at segment created in AC") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			ProductMenu.gotoPortlet(
				category = "People",
				portlet = "Segments");

			AssertElementPresent(
				key_tableEntry = "Static Segment Test",
				locator1 = "LexiconTable#TABLE_ENTRY_TITLE_LINK");
		}

		task ("Go to AC and delete segment that was created") {
			ACUtils.closeAllSessions();

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToSegments();

			ACSegments.deleteSegment(searchTerm = "Static Segment Test");

			ACSegments.viewDeletedSegmentName(searchTerm = "Static Segment Test");
		}

		task ("Go back to DXP and update Segments Analytics Cloud") {
			Navigator.openURL();

			User.loginPG(
				password = "test",
				userEmailAddress = "test@liferay.com");

			Segmentation.updateACSegmentSystemSettings();
		}

		task ("Go to segmentats page and click at segment created in AC") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			ProductMenu.gotoPortlet(
				category = "People",
				portlet = "Segments");

			Click(
				key_tableEntry = "Static Segment Test",
				locator1 = "LexiconTable#TABLE_ENTRY_TITLE_LINK");
		}

		task ("Go and Log into AC and assert the ERROR page is open") {
			Navigator.selectSpecificWindow(windowTitle = "Analytics Cloud");

			AnalyticsCloud.loginAnalyticsCloud(
				emailAddress = "test@liferay.com",
				password = "test");

			AssertTextPresent(
				locator1 = "//body",
				value1 = "The page you are looking for does not exist.");
		}
	}

	@description = "LPS-94940 Validate if, The migrated AC segment, it appears in Liferay DXP Segments administration without an edit/delete actions"
	@ignore = "true"
	@priority = "4"
	test SegmentsWithoutEditingAndDeletingFromTheSite {

		// TODO LPS-94940 SegmentsWithoutEditingAndDeletingFromTheSite pending implementation

	}

	@description = "LPS-94938 Validate if the user have the text unlinked when he tries to see the detail of the imported segment from Analytics Cloud into DXP, one time that the connection with Analytics Cloud does not exist anymore"
	@priority = "4"
	test ShoudNotRedirectToSegmentPageAC {
		property portal.acceptance = "true";

		task ("Update Segments Analytics Cloud in System Settings") {
			Segmentation.updateACSegmentSystemSettings();
		}

		task ("Disconnect AC") {
			ACUtils.tearDownDXP();
		}

		task ("Go to segments admin and Assert is not possible to click on the segment previously created ") {
			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");

			ProductMenu.gotoPortlet(
				category = "People",
				portlet = "Segments");

			AssertElementNotPresent(
				key_segmentName = "Static Segment Test",
				locator1 = "Segmentation#CLICKABLE_SEGMENT_NAME");
		}

		task ("Conect DXP to AC and navigate to Page") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Test Site Name");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/content-page");
		}
	}

}