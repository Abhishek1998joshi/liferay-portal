@component-name = "portal-collaboration"
definition {

	property app.server.bundles.size = "1";
	property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
	property databases.size = "1";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Staging DM Page");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Documents and Media");

		DMDocument.enableActionsMenuOnPortlet();

		Staging.remoteStagingSetUp(
			remotePort = "9080",
			remoteStaging = "true",
			siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			JSONGroup.deleteGroupByName(groupName = "Remote Site");

			User.logoutPG();
		}
	}

	@description = "This ensures that the document using custom document type can be deleted and republished."
	@priority = "5"
	test DeleteDocumentWithCustomType {
		property test.name.skip.portal.instance = "RemoteStagingDM#DeleteDocumentWithCustomType";

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			navTab = "Documents and Media",
			textField = "Text");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMDocument.viewDefaultCP();
	}

	@description = "This ensures that the document using custom document type can be edited and republished."
	@priority = "5"
	test EditDocumentWithCustomType {
		property test.name.skip.portal.instance = "RemoteStagingDM#EditDocumentWithCustomType";

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Image,Text",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentFileName = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name",
			previewImage = "Document_1.jpg");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.editCP(
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentFileEdit = "Document_2.jpg",
			dmDocumentFileNameEdit = "Image_2.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title Edit");

		DMDocument.viewCP(
			dmDocumentDescription = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title Edit",
			dmDocumentType = "DM Document Type Name",
			previewImage = "Image_2.jpg");
	}

	@description = "This ensures that the custom document type being used by document can be edited and republished."
	@priority = "5"
	test PublishEditsToDocumentType {
		property test.name.skip.portal.instance = "RemoteStagingDM#PublishEditsToDocumentType";

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Image",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentFileName = "Image_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			imageField = "Document_1.jpg",
			navTab = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name",
			previewImage = "Image_1.jpg");

		DMDocument.viewDocumentTypePG(imageName = "Document_1.jpg");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldNameEdit = "Photo",
			dmDocumentTypeName = "DM Document Type Name",
			dmDocumentTypeNameEdit = "DM Document Type Name Edit",
			fieldFieldLabel = "Image",
			fieldFieldLabelEdit = "Photo");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.editCP(
			dmDocumentTitle = "DM Document Title",
			fieldFieldLabel = "Photo",
			imageFieldEdit = "Document_2.jpg",
			navTab = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name Edit",
			previewImage = "Image_1.jpg");

		DMDocument.viewDocumentTypePG(
			fieldFieldLabel = "Photo",
			imageName = "Document_2.jpg");
	}

	@description = "This ensures that the document using custom document type and custom metadataset can be edited and republished."
	@priority = "5"
	test PublishEditsToDocumentUsingCustomTypeAndSet {
		property test.name.skip.portal.instance = "RemoteStagingDM#PublishEditsToDocumentUsingCustomTypeAndSet";

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoMetadataSets();

		DMMetadataSet.addTitle(metadataSetName = "Document Metadata Set Name");

		DataEngine.addField(
			fieldFieldLabel = "Image",
			fieldName = "Image");

		DDLDataDefinition.save();

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMNavigator.gotoDocumentType();

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "DM Document Type Name");

		DMDocumentType.gotoTab(tabName = "Builder");

		DMDocumentType.gotoTab(tabName = "Additional Metadata Fields");

		DMDocumentType.selectPGMetadataSet(key_metadataSetName = "Document Metadata Set Name");

		DDLDataDefinition.save();

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentFileName = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name",
			previewImage = "Document_1.jpg");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentType();

		DMDocumentType.viewCP(dmDocumentTypeName = "DM Document Type Name");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.editCP(
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentFileEdit = "Document_2.jpg",
			dmDocumentFileNameEdit = "Image_2.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(
			baseURL = "http://localhost:9080",
			siteURLKey = "remote-site");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title Edit");

		DMDocument.viewCP(
			dmDocumentDescription = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title Edit",
			dmDocumentType = "DM Document Type Name",
			previewImage = "Image_2.jpg");
	}

	@description = "This ensures that the custom metadataset used in custom document type can be edited and republished."
	@ignore = "true"
	@priority = "5"
	test PublishEditsToMetadataSet {

		// TODO LPS-127173 PublishEditsToMetadataSet pending implementation
	}

	@description = "This is a use case for LPS-89175."
	@priority = "3"
	test StagingRemoteLiveDeleteDocumentWithWebContentField {
		property test.name.skip.portal.instance = "RemoteStagingDM#StagingRemoteLiveDeleteDocumentWithWebContentField";

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Web Content",
			dmDocumentTypeName = "DM Document Type Name");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		DMDocument.addDocumentTypePG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			webcontentField = "WC WebContent Title");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Web Content");

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC WebContent Title");

		Navigator.gotoSitePage(
			pageName = "Staging DM Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		Pause(locator1 = "5000");

		AssertConsoleTextNotPresent(value1 = "RuntimeException");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Staging DM Page",
			siteName = "Remote Site");

		DMDocument.viewPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "DM Document Type Name");
	}

	@description = "This ensures that the document info is displayed correctly after publishing and republishing."
	@ignore = "true"
	@priority = "5"
	test ViewRepublishedDocumentInfo {

		// TODO LPS-127173 ViewRepublishedDocumentInfo pending implementation
	}

	@description = "This ensures that the image can be deleted and republished in web content."
	@ignore = "true"
	@priority = "4"
	test ViewWebContentWithDeletedImage {

		// TODO LPS-127173 ViewWebContentWithDeletedImage pending implementation
	}

	@description = "This ensures that the image can be edited and republished in web content."
	@ignore = "true"
	@priority = "4"
	test ViewWebContentWithRepublishedImage {

		// TODO LPS-127173 ViewWebContentWithRepublishedImage pending implementation
	}

}