@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMDocumentType.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that the user can delete fields within a document type ."
	@priority = "3"
	test DeleteFields {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text,Date,Image,Upload,Web Content",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoAddDocumentTypeCP(dmDocumentTypeName = "DM Document Type Name");

		for (var fieldFieldLabel : list "Text,Date,Image,Upload,Web Content") {
			AssertElementPresent(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
		}

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.deleteFields(
			dmDocumentTypeName = "DM Document Type Name",
			fieldFieldLabel = "Text,Date,Image,Upload,Web Content");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoAddDocumentTypeCP(dmDocumentTypeName = "DM Document Type Name");

		for (var fieldFieldLabel : list "Text,Date,Image,Upload,Web Content") {
			AssertElementNotPresent(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");
		}
	}

	@description = "This ensures that the user can create a document using edited image field inside document type."
	@priority = "4"
	test ViewDocumentwithEditedImageField {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Image",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			imageField = "Document_1.jpg",
			navTab = "Documents and Media");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldNameEdit = "Photo",
			dmDocumentTypeFieldRequiredEdit = "Photo",
			dmDocumentTypeName = "DM Document Type Name",
			dmDocumentTypeNameEdit = "DM Document Type Name Edit",
			fieldFieldLabel = "Image",
			fieldFieldLabelEdit = "Photo");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		AssertElementPresent(
			key_fieldFieldLabel = "Photo",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertElementPresent(
			key_fieldFieldLabel = "Photo",
			locator1 = "Icon#ASTERISK_DATE_FIELD");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title 2",
			dmDocumentTypeName = "DM Document Type Name Edit",
			fieldFieldLabel = "Photo",
			imageDescription = "Photo Description",
			imageField = "Document_2.jpg",
			navTab = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title 2");

		DMDocument.viewDocumentTypePG(imageName = "Document_2.jpg");
	}

	@description = "This ensures that the user can create a document using edited text field inside document type."
	@priority = "4"
	test ViewDocumentwithEditedTextField {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			textField = "DM Document Text");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewDocumentTypePG(textContent = "DM Document Text");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldNameEdit = "Company",
			dmDocumentTypeFieldRequiredEdit = "Company",
			dmDocumentTypeName = "DM Document Type Name",
			dmDocumentTypeNameEdit = "DM Document Type Name Edit",
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Company");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		AssertElementPresent(
			key_fieldFieldLabel = "Company",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertElementPresent(
			key_fieldFieldLabel = "Company",
			locator1 = "Icon#ASTERISK_DATE_FIELD");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "DM Document Title 2",
			dmDocumentTypeName = "DM Document Type Name Edit",
			fieldFieldLabel = "Company",
			textField = "Liferay");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title 2");

		DMDocument.viewDocumentTypePG(
			textContent = "Liferay",
			textFieldLabel = "Company");
	}

	@description = "This ensures that the user can create a document using edited upload field inside document type."
	@priority = "4"
	test ViewDocumentwithEditedUploadField {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "Document_1.doc",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Upload",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			documentsAndMediaField = "Document_1.doc",
			fieldFieldLabel = "Upload",
			navTab = "Documents and Media");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeFieldNameEdit = "Resume",
			dmDocumentTypeFieldRequiredEdit = "Resume",
			dmDocumentTypeName = "DM Document Type Name",
			dmDocumentTypeNameEdit = "DM Document Type Name Edit",
			fieldFieldLabel = "Upload",
			fieldFieldLabelEdit = "Resume");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		AssertElementPresent(
			key_fieldFieldLabel = "Resume",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertElementPresent(
			key_fieldFieldLabel = "Resume",
			locator1 = "Icon#ASTERISK_DATE_FIELD");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title 2",
			dmDocumentTypeName = "DM Document Type Name Edit",
			documentsAndMediaField = "Document_1.doc",
			fieldFieldLabel = "Resume",
			navTab = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title 2");

		DMDocument.viewDocumentTypePG(
			uploadFieldLabel = "Resume",
			uploadFile = "Document_1.doc");
	}

}