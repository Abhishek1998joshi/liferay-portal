@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a content page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Content Page Name",
				type = "content");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-110707. Can resize the width of device viewport when edit content page."
	@priority = "5"
	test ResizeDeviceViewport {
		property portal.acceptance = "true";

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		Click.clickNoMouseOver(
			key_deviceType = "Desktop",
			locator1 = "PageEditor#DEVICE_TYPE");

		AssertElementNotPresent(locator1 = "PageEditor#VIEWPORT_HANDLE");

		Click.clickNoMouseOver(
			key_deviceType = "Tablet",
			locator1 = "PageEditor#DEVICE_TYPE");

		AssertVisible(locator1 = "PageEditor#VIEWPORT_HANDLE");

		DragAndDrop.DragAndDropObject(
			locator1 = "PageEditor#VIEWPORT_HANDLE",
			position = "200,0");

		AssertElementPresent(
			key_style = "992px",
			locator1 = "PageEditor#VIEWPORT_RESIZER");

		Click(
			key_deviceType = "Portrait Phone",
			locator1 = "PageEditor#DEVICE_TYPE");

		AssertVisible(locator1 = "PageEditor#VIEWPORT_HANDLE");

		DragAndDrop.DragAndDropObject(
			locator1 = "PageEditor#VIEWPORT_HANDLE",
			position = "200,0");

		AssertElementPresent(
			key_style = "576px",
			locator1 = "PageEditor#VIEWPORT_RESIZER");
	}


}