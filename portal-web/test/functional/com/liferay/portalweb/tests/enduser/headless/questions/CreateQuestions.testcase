@component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		SitePages.openPagesAdmin(siteURLKey = "guest");

		ContentPages.addPage(pageName = "Questions Page");

		PageEditor.addWidget(portletName = "Questions");

		PageEditor.clickPublish();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}
		}
	}

	@description = "Validate if the user can create a question category"
	@priority = "5"
	test AddQuestionCategory {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Message Boards");

		Questions.createSomethingInMessageBoards(
			displayStyleOption = "Question",
			menuItem = "Category",
			nameField = "question AddQuestionCategory");

		Navigator.gotoPage(pageName = "Questions Page");

		Questions.gotoCategory(categoryName = "question AddQuestionCategory");

		AssertElementPresent(
			key_emptyInfo = "This topic is empty.",
			locator1 = "Questions#EMPTY_STATE_MESSAGE");
	}

}