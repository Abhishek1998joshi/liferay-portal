@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONPublications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ApplicationsMenu.gotoPortlet(
				category = "Publications",
				panel = "Applications",
				portlet = "Settings");

			Publications.disablePublications();
		}
	}

	@priority = "4"
	test AddCalendarEventPublication {
		JSONPublications.addPublication(publicationName = "Publication Name");

		JSONPublications.selectPublication(publicationName = "Publication Name");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Calendar Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Site Name",
			layoutName = "Calendar Page",
			layoutTemplate = "1 Column");

		Navigator.openSitePage(
			pageName = "Calendar Page",
			siteName = "Site Name");

		Portlet.addPG(portletName = "Calendar");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.addRegularInCustomSite(
			eventTitle = "Publication Calendar Event Title",
			pageName = "Calendar Page",
			siteName = "Site Name");

		Navigator.openSitePage(
			pageName = "Calendar Page",
			siteName = "Site Name");

		CalendarEvent.view(eventTitle = "Publication Calendar Event Title");

		Publications.gotoReviewChanges(publicationName = "Publication Name");

		PublicationsChanges.viewChangesViaChangesStyle(
			changeCategory = "Calendar",
			changeSite = "Site Name",
			changeTitle = "Site Name",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChangesViaChangesStyle(
			changeCategory = "Calendar Event",
			changeSite = "Site Name",
			changeTitle = "Publication Calendar Event Title",
			changeType = "Added",
			changeUser = "Test Test");

		PublicationsChanges.viewChangesViaChangesStyle(
			changeCategory = "Calendar Resource",
			changeSite = "Site Name",
			changeTitle = "Site Name",
			changeType = "Added",
			changeUser = "Test Test");

		JSONPublications.publishPublication(publicationName = "Publication Name");

		Publications.viewPublicationPublished(publicationName = "Publication Name");

		Navigator.openSitePage(
			pageName = "Calendar Page",
			siteName = "Site Name");

		CalendarEvent.view(eventTitle = "Publication Calendar Event Title");
	}

}