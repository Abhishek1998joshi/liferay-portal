@component-name = "portal-database-upgrade-framework"
definition {

	property data.archive.type = "data-archive-portal";
	property database.types = "mariadb,mysql,postgresql";
	property portal.release = "true";
	property portal.upstream = "true";
	property portal.version = "7.3.0";
	property testray.main.component.name = "Database Upgrade Framework";

	setUp {
		TestCase.setUpPortalInstance();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-158742. Given custom log4j is added to portal and log context is enabled. Then log lines will be marked with custom context name."
	@priority = "3"
	test LogOutputReturnsMarkedOnStartupWithLogContextAndCustomLog4j {
		property custom.properties = "upgrade.log.context.enabled=true${line.separator}upgrade.log.context.name=ExampleText${line.separator}upgrade.database.auto.run=true";
		property log.context.enabled = "true";

		Log.viewLogFileContentPresent(logContent = "ExampleText=ExampleText");
	}

	@description = "LPS-158742. Given custom log4j is not added to portal and log context is not enabled. Then log lines will not be marked."
	@priority = "3"
	test LogOutputReturnsUnmarkedOnStartupWithoutLogContextAndCustomLog4j {
		property custom.properties = "upgrade.database.auto.run=true";

		Log.viewLogFileContentNotPresent(logContent = "upgradeLog=upgradeLog");
	}

	@description = "LPS-158742. Given custom log4j is not added to portal and log context is enabled. Then log lines will not be marked."
	@priority = "4"
	test LogOutputReturnsUnmarkedOnStartupWithoutCustomLog4j {
		property custom.properties = "upgrade.log.context.enabled=true${line.separator}upgrade.database.auto.run=true";

		Log.viewLogFileContentNotPresent(logContent = "upgradeLog=upgradeLog");
	}

}