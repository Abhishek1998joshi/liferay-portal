@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Password Policies";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			JSONUser.tearDownNonAdminUsers();

			Role.tearDownCP();

			PasswordPolicies.deleteCP(passwordPolicyName = "Password Policy Name");
		}
	}

	@description = "This test adds a regular role with Assign Members permission for Password Policy. It asserts user assigned to this role can successfully assign members to an existing password policy."
	@priority = "4"
	test userCanAssignMembers {
		JSONUser.addUser(
			userEmailAddress = "userea3@liferay.com",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userScreenName = "usersn3");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea3@liferay.com");

		JSONRole.addRegularRole(
			roleKey = "Password Policy Role Name",
			roleTitle = "Password Policy Role Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_USER",
			resourceName = "90",
			roleTitle = "Password Policy Role Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_password_policies_admin_web_portlet_PasswordPoliciesAdminPortlet",
			roleTitle = "Password Policy Role Name");

		for (var resourceActionIndex : list "ASSIGN_MEMBERS,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com.liferay.portal.kernel.model.PasswordPolicy",
				roleTitle = "Password Policy Role Name",
				roleType = "regular");
		}

		JSONRole.assignRoleToUser(
			roleTitle = "Password Policy Role Name",
			userEmailAddress = "userea3@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Password Policies");

		PasswordPolicies.addCP(passwordPolicyName = "Password Policy Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea3@liferay.com",
			userLoginFullName = "userfn3 userln3");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "newuser@liferay.com",
			userFirstName = "new",
			userLastName = "user",
			userScreenName = "newuser");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Password Policies");

		PasswordPolicies.assignMembers(
			assigneeName = "new user",
			assigneeType = "Users",
			passwordPolicyName = "Password Policy Name");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "test test");

		ApplicationsMenu.gotoPortlet(
			category = "Security",
			panel = "Control Panel",
			portlet = "Password Policies");

		PasswordPolicies.viewAssignees(
			assigneeName = "new user",
			assigneeType = "Users",
			passwordPolicyName = "Password Policy Name");
	}

}