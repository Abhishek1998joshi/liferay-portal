@component-name = "portal-database-partitioning"
definition {

	property database.partition.enabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Database Partitioning";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		PortalInstances.tearDownCP();
	}

	@priority = "4"
	test AddMultipleCompanies {
		property custom.properties = "database.partition.schema.name.prefix=testPartition";
		property database.types = "mysql";
		property test.name.skip.portal.instance = "DatabasePartitioning#AddMultipleCompanies";

		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.able.com",
			virtualHost = "www.able.com",
			webId = "www.able.com");

		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.baker.com",
			virtualHost = "www.baker.com",
			webId = "www.baker.com");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.baker.com:8080",
			userEmailAddress = "test@www.baker.com");

		Navigator.openSpecificURL(url = "http://www.baker.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		SQL.assertDatabaseCount(
			databaseFilter = "testPartition%",
			databaseSubstring = "testPartition",
			expectedCount = "2");

		DBPartition.validateSchemas(schemaNamePrefix = "testPartition");
	}

	@priority = "5"
	test AddNewCompany {
		property custom.properties = "database.partition.schema.name.prefix=testPartition";
		property database.types = "mysql";
		property portal.acceptance = "true";
		property test.assert.warning.exceptions = "true";
		property test.name.skip.portal.instance = "DatabasePartitioning#AddNewCompany";

		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.able.com",
			virtualHost = "www.able.com",
			webId = "www.able.com");

		SignOut.signOut();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		SQL.assertDatabaseCount(
			databaseFilter = "testPartition%",
			databaseSubstring = "testPartition",
			expectedCount = "1");
	}

	@priority = "4"
	test AddNewCompanyWithCluster {
		property app.server.bundles.size = "1";
		property cluster.enabled = "true";
		property custom.properties = "database.partition.schema.name.prefix=testPartition";
		property database.types = "mysql";
		property minimum.slave.ram = "24";
		property test.name.skip.portal.instance = "DatabasePartitioning#AddNewCompanyWithCluster";

		Clustering.viewClusterStatusInConsole();

		Page.assertNodePortPG(nodePort = "8080");

		User.logoutPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		Page.assertNodePortPG(nodePort = "9080");

		User.logoutPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		PortalInstances.openVirtualInstancesAdmin();

		PortalInstances.addCP(
			mailDomain = "www.able.com",
			virtualHost = "www.able.com",
			webId = "www.able.com");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:9080",
			userEmailAddress = "test@www.able.com");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		SQL.assertDatabaseCount(
			databaseFilter = "testPartition%",
			databaseSubstring = "testPartition",
			expectedCount = "1");
	}

	@priority = "5"
	test RestartPortal {
		property custom.properties = "database.partition.schema.name.prefix=testPartition";
		property database.types = "mysql";
		property test.assert.warning.exceptions = "true";
		property test.name.skip.portal.instance = "DatabasePartitioning#RestartPortal";

		HeadlessPortalInstanceAPI.addPortalInstance(
			domain = "www.able.com",
			portalInstanceId = "www.able.com",
			virtualHost = "www.able.com");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://www.able.com:8080",
			userEmailAddress = "test@www.able.com");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		Portlet.shutdownServer();

		Portlet.startServer(keepOSGiState = "true");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");
	}

	@priority = "4"
	test ScheduleWebContentChangesWithDBPartitioningActivatedAcrossVariousCompanies {
		property database.types = "mysql";
		property custom.properties = "database.partition.enabled=true";
		property test.name.skip.portal.instance = "DatabasePartitioning#ScheduleWebContentChangesWithDBPartitioningActivatedAcrossVariousCompaniess";

		task ("Edit Check Interval") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "System Settings");
			
			SystemSettings.gotoConfiguration(
				configurationCategory = "Web Content",
				configurationName = "Web Content",
				configurationScope = "Virtual Instance Scope");
			
			Type(
				key_text = "Check Interval",
				locator1 = "TextInput#ANY",
				value1 = "1");

			SystemSettings.saveConfiguration();

		}

		task ("Add a new Company") {
			PortalInstances.openVirtualInstancesAdmin();

			PortalInstances.addCP(
				mailDomain = "www.able.com",
				virtualHost = "www.able.com",
				webId = "www.able.com");

			SignOut.signOut();

			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@www.able.com");
		}

		task ("Add a WebContent article on new Company") {
			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Web Content");

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "WC WebContent Title");

			var displayDateDay = DateUtil.getCurrentDate();
			var displayMonth = DateUtil.getCurrentMonth();
			var displayDateYear = DateUtil.getCurrentYear();
			var displayDate = "${displayMonth}/${displayDateDay}/${displayDateYear}";

			var displayDateHour = selenium.getAttribute("//input[contains(@id,'displayDateHour')]@value");
			var displayDateAMPM = selenium.getAttribute("//input[contains(@id,'displayDateAmPm')]@value");
			var displayDateAMPM = StringUtil.replace("${displayDateAMPM}", "0", "AM");
			var displayDateAMPM = StringUtil.replace("${displayDateAMPM}", "1", "PM");
			var displayDateMinute = selenium.getAttribute("//input[contains(@id,'displayDateMinute')]@value");
			var displayDateMinuteFuture = ${displayDateMinute} + 14;
			var displayTime = "${displayDateHour}:${displayDateMinuteFuture} ${displayDateAMPM}";

			WebContent.editDisplayDate(
				displayDate = "${displayDate}",
				displayTime = "${displayTime}");

			PortletEntry.publish();

			PermissionsInline.gotoWCArticle(webContentTitle = "WC WebContent Title");

			PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
				addOrRemoveViewPermission = "Remove",
				roleList = "guest");

			IFrame.closeFrame();
		}

		task ("Add a page and WebContent display select a WebContent article") {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				portlet = "Pages");

			SitePages.addPublicPage(pageName = "Web Content Display Page");

			Navigator.gotoPage(
				baseURL = "www.able.com:8080",
				pageName = "Web Content Display Page");

			Portlet.addPG(portletName = "Web Content Display");

			WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

			IFrame.closeFrame();
		}

		task ("View the warning message shown in Web Content Display") {
			AssertTextEquals.assertPartialText(
				key_warningMessage = "WC WebContent Title is scheduled and will be displayed",
				locator1 = "Message#WARNING_SPECIFIC",
				value1 = "WC WebContent Title is scheduled and will be displayed");
		}

		task ("Add a WebContent article on default Company") {
			SignOut.signOut();

			User.firstLoginPG();		

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Web Content");

			WebContentNavigator.gotoAddCP();

			WebContent.addCP(
				webContentContent = "WC WebContent Content",
				webContentTitle = "WC WebContent Title");

			var displayDateDay = DateUtil.getCurrentDate();
			var displayMonth = DateUtil.getCurrentMonth();
			var displayDateYear = DateUtil.getCurrentYear();
			var displayDate = "${displayMonth}/${displayDateDay}/${displayDateYear}";

			var displayDateHour = selenium.getAttribute("//input[contains(@id,'displayDateHour')]@value");
			var displayDateAMPM = selenium.getAttribute("//input[contains(@id,'displayDateAmPm')]@value");
			var displayDateAMPM = StringUtil.replace("${displayDateAMPM}", "0", "AM");
			var displayDateAMPM = StringUtil.replace("${displayDateAMPM}", "1", "PM");
			var displayDateMinute = selenium.getAttribute("//input[contains(@id,'displayDateMinute')]@value");
			var displayDateMinuteFuture = ${displayDateMinute} + 6;
			var displayTime = "${displayDateHour}:${displayDateMinuteFuture} ${displayDateAMPM}";

			WebContent.editDisplayDate(
				displayDate = "${displayDate}",
				displayTime = "${displayTime}");

			PortletEntry.publish();

			PermissionsInline.gotoWCArticle(webContentTitle = "WC WebContent Title");

			PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
				addOrRemoveViewPermission = "Remove",
				roleList = "Guest");

			IFrame.closeFrame();
		}

		task ("Add a page and WebContent display select a WebContent article") {
			ProductMenu.gotoPortlet(
				category = "Site Builder",
				portlet = "Pages");

			SitePages.addPublicPage(pageName = "Web Content Display Page");

			Navigator.gotoPage(pageName = "Web Content Display Page");

			Portlet.addPG(portletName = "Web Content Display");

			WebContentDisplayPortlet.selectWebContent(webContentTitle = "WC WebContent Title");

			IFrame.closeFrame();
		}

		task ("View the warning message shown in Web Content Display") {
			AssertTextEquals.assertPartialText(
				key_warningMessage = "WC WebContent Title is scheduled and will be displayed",
				locator1 = "Message#WARNING_SPECIFIC",
				value1 = "WC WebContent Title is scheduled and will be displayed");
		}

		task ("View WebContent Article Publish on default Company") {
			Pause(locator1 = "180000");

			Refresh();

			WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
		}

		task ("New Company publish it's WebContent Article") {
			SignOut.signOut();

			Navigator.gotoPage(
				baseURL = "www.able.com:8080",
				pageName = "Web Content Display Page");

			AssertTextEquals.assertPartialText(
				key_warningMessage = "WC WebContent Title is scheduled and will be displayed",
				locator1 = "Message#WARNING_SPECIFIC",
				value1 = "WC WebContent Title is scheduled and will be displayed");

			Pause(locator1 = "120000");

			Refresh();
			
			WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
		}

		task ("WebContent Article not repulish on default Company") {
			SignOut.signOut();

			User.firstLoginPG();

			Navigator.gotoPage(pageName = "Web Content Display Page");

			WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
		}
	}

}