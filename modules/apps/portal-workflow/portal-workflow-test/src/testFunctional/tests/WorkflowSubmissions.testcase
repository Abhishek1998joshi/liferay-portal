@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		//else {
		//	Workflow.tearDownPortalWorkflow();

		//	Workflow.tearDownWorkflowDefinitions();

		//	BlogsEntry.tearDownCP();
		//}

	}

	@description = "Verify can filter by completed tasks"
	@priority = "3"
	test CanFilterByCompletedTasks {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry 1");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to My Roles");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		Click(locator1 = "AppBuilder#SEARCH_FILTER_AND_ORDER_MENU");

		Click(
			key_selectOption = "Completed",
			locator1 = "WorkflowSubmissionsTask#DROPDOWN_MENU_OPTION");

		AssertElementPresent(
			key_workflowAssetTitle = "Blogs Entry 1",
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		AssertElementNotPresent(
			key_workflowAssetTitle = "Blogs Entry 2",
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		Click(locator1 = "AppBuilder#SEARCH_FILTER_AND_ORDER_MENU");

		Click(
			key_selectOption = "Completed",
			locator1 = "WorkflowSubmissionsTask#DROPDOWN_MENU_OPTION");

		AssertElementPresent(
			key_workflowAssetTitle = "Blogs Entry 1",
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");

		AssertElementNotPresent(
			key_workflowAssetTitle = "Blogs Entry 2",
			locator1 = "MyWorkflowTasks#TABLE_GENERIC_ASSET_TITLE");
	}

	@description = "Verify can filter by pending tasks"
	@ignore = "Test Stub"
	@priority = "3"
	test CanFilterByPendingTasks {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 2");

		Workflow.completeWorkflowBlogInstance(key_workflowInstanceTitle = "Blogs Entry Title 1");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Pending");

		AssertElementPresent(
			key_taskName = "Blogs Entry Title 2",
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");

		AssertElementNotPresent(
			key_taskName = "Blogs Entry Title 1",
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Pending");

		AssertElementPresent(
			key_taskName = "Blogs Entry Title 2",
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");

		AssertElementNotPresent(
			key_taskName = "Blogs Entry Title 1",
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");
	}

	@description = "Verify if the Clear option cleans the search results"
	@ignore = "Test Stub"
	@priority = "3"
	test ClearOptionCleanSearchResults {

		// TODO LRQA-68565 ClearOptionCleanSearchResults pending implementation

	}

	@description = "Verify if the table is organized by Asset Title, Asset Type, Status, Definition, Last Activity Date and End Date columns"
	@priority = "4"
	test ColumnsAreDisplayed {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		AssertTextEquals(
			key_index = "1",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Asset Title");

		AssertTextEquals(
			key_index = "2",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Asset Type");

		AssertTextEquals(
			key_index = "3",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Status");

		AssertTextEquals(
			key_index = "4",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Definition");

		AssertTextEquals(
			key_index = "5",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Last Activity Date");

		AssertTextEquals(
			key_index = "6",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "End Date");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		AssertTextEquals(
			key_index = "1",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Asset Title");

		AssertTextEquals(
			key_index = "2",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Asset Type");

		AssertTextEquals(
			key_index = "3",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Status");

		AssertTextEquals(
			key_index = "4",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Definition");

		AssertTextEquals(
			key_index = "5",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "Last Activity Date");

		AssertTextEquals(
			key_index = "6",
			locator1 = "WorkflowSubmissions#HEADER_INDEX",
			value1 = "End Date");
	}

	@description = "Verify the kebab menu is not displayed when task is completed"
	@ignore = "Test Stub"
	@priority = "4"
	test CompletedTaskCannnotBeWithdrawn {

		// TODO LRQA-68561 CompletedTaskCannnotBeWithdrawn pending implementation

	}

	@description = "Verify the kebab menu is not displayed on details page when task is completed"
	@priority = "4"
	test CompletedTaskCannnotBeWithdrawnThroughDetailsPage {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Workflow.completeWorkflowBlogInstance(key_workflowInstanceTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		Click(
			key_taskName = "Blogs Entry Title",
			locator1 = "WorkflowSubmissions#SUBMISSIONS_TASK_NAME");

		AssertElementNotPresent(locator1 = "WorkflowSubmissions#SUBMISSIONS_DETAILS_PAGE_ELLIPSIS");
	}

	@description = "Verify that clicking on the task name takes you to a details page"
	@priority = "4"
	test DetailsPageIsDisplayeed {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry",
			entryTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		Click(
			key_title = "Blogs Entry Title",
			locator1 = "WorkflowSubmissions#TASK_NAME_COLUMN");

		AssertElementPresent(
			key_header = "Single Approver: Blogs Entry Title",
			locator1 = "WorkflowSubmissions#DETAIL_PAGE_HEADER");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		Click(
			key_title = "Blogs Entry Title",
			locator1 = "WorkflowSubmissions#TASK_NAME_COLUMN");

		AssertElementPresent(
			key_header = "Single Approver: Blogs Entry Title",
			locator1 = "WorkflowSubmissions#DETAIL_PAGE_HEADER");
	}

	@description = "Verify if when the task is pending, the "End Date" field is blank"
	@ignore = "Test Stub"
	@priority = "3"
	test EndDateIsBlankWhenTaskPending {

		// TODO LRQA-68556 EndDateIsBlankWhenTaskPending pending implementation

	}

	@description = "Verify if when the task is approved, the "End Date" field is filled"
	@priority = "3"
	test EndDateIsFilledWhenTaskCompleted {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content 1",
			entryTitle = "Blogs Entry 1");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		AssertElementPresent(
			key_submissionName = "Blogs Entry 1",
			locator1 = "WorkflowSubmissions#SUBMISSION_END_DATE");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		AssertElementPresent(
			key_submissionName = "Blogs Entry 1",
			locator1 = "WorkflowSubmissions#SUBMISSION_END_DATE");
	}

	@description = "Verify that when having 5 tasks on the screen, a pagination bar is displayed"
	@ignore = "Test Stub"
	@priority = "3"
	test PaginationBarIsDisplayed {

		// TODO LRQA-68558 PaginationBarIsDisplayed pending implementation

	}

	@description = "Verify that a task can be withdrawn"
	@ignore = "Test Stub"
	@priority = "4"
	test TaskCanBeWithdrawn {

		// TODO LRQA-68559 TaskCanBeWithdrawn pending implementation

	}

	@description = "Verify that a task can be withdrawn through details page"
	@ignore = "Test Stub"
	@priority = "4"
	test TaskCanBeWithdrawnThroughDetailsPage {

		// TODO LRQA-68560 TaskCanBeWithdrawnThroughDetailsPage pending implementation

	}

	@description = "Verify that the task changes to approved"
	@priority = "4"
	test TaskIsApprovedOnTheTable {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content 1",
			entryTitle = "Blogs Entry 1");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		AssertTextEquals(
			key_submissionName = "Blogs Entry 1",
			locator1 = "WorkflowSubmissions#SUBMISSION_BY_STATUS",
			value1 = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		AssertTextEquals(
			key_submissionName = "Blogs Entry 1",
			locator1 = "WorkflowSubmissions#SUBMISSION_BY_STATUS",
			value1 = "Approved");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		AssertTextEquals(
			key_submissionName = "Blogs Entry 1",
			locator1 = "WorkflowSubmissions#SUBMISSION_BY_STATUS",
			value1 = "Approved");
	}

	@description = "Verify that the task is displayed on table"
	@priority = "5"
	test TaskIsDisplayedOnTable {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Workflow",
			site = "${siteName}");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		AssertElementPresent(
			key_workflowDefinitionTitle = "Blogs Entry Title",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		Workflow.viewMySubmissions(
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowTask = "Review");
	}

	@description = "Verify if the tasks are grouped into pending and completed"
	@priority = "3"
	test TasksAreGroupedByPendingAndCompleted {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title 1",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Submissions");

		WorkflowSubmissions.viewSubmissionStatus(
			submissionStatus = "Completed",
			submissionTitle = "Blogs Entry Title 1");

		WorkflowSubmissions.viewSubmissionStatus(
			submissionStatus = "Pending",
			submissionTitle = "Blogs Entry Title 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		WorkflowSubmissions.viewSubmissionStatus(
			submissionStatus = "Completed",
			submissionTitle = "Blogs Entry Title 1");

		WorkflowSubmissions.viewSubmissionStatus(
			submissionStatus = "Pending",
			submissionTitle = "Blogs Entry Title 2");
	}

	@description = "Verify if clicking the arrow changes the order of the table (asc - desc)"
	@priority = "3"
	test ViewAscDescSequenceSubmissions {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 1");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");

		Click(locator1 = "ManagementBar#ORDER_ICON_GENERIC");

		AssertElementPresent(
			key_order = "2",
			key_title = "Blogs Entry Title 2",
			locator1 = "WorkflowSubmissionsTask#TABLE_ORDER_SUBMISSIONS");

		AssertElementPresent(
			key_order = "3",
			key_title = "Blogs Entry Title 1",
			locator1 = "WorkflowSubmissionsTask#TABLE_ORDER_SUBMISSIONS");

		Click(locator1 = "ManagementBar#ORDER_ICON_GENERIC");

		AssertElementPresent(
			key_order = "3",
			key_title = "Blogs Entry Title 2",
			locator1 = "WorkflowSubmissionsTask#TABLE_ORDER_SUBMISSIONS");

		AssertElementPresent(
			key_order = "2",
			key_title = "Blogs Entry Title 1",
			locator1 = "WorkflowSubmissionsTask#TABLE_ORDER_SUBMISSIONS");
	}

	@description = "Verify that the message 'There are no publication requested by me.' when there is no task"
	@ignore = "Test Stub"
	@priority = "2"
	test ViewNoPublicationRequestedByMeMessage {

		// TODO LRQA-68549 ViewNoPublicationRequestedByMeMessage pending implementation

	}

	@description = "Verify that the message 'There are no publication requests.' when there is no task"
	@ignore = "Test Stub"
	@priority = "2"
	test ViewNoPublicationRequestsMessage {

		// TODO LRQA-68548 ViewNoPublicationRequestsMessage pending implementation

	}

}