@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		else {
			BlogsEntry.tearDownCP();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownWorkflowDefinitions();
		}
	}

	@description = "Verify that the user can select Duplicate option in the kebab menu for a Not Published process"
	@ignore = "Test Stub"
	@priority = "4"
	test CanDuplicateNonPublishedProcess {

		// TODO LRQA-68247 CanDuplicateNonPublishedProcess pending implementation

	}

	@description = "Verify that the user can select Duplicate option in the kebab menu for a particular row"
	@priority = "4"
	test CanDuplicateProcess {
		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		AssertElementPresent(
			key_workflowInstanceName = "Copy of Single Approver",
			locator1 = "AssetWorkflow#DETAILS_WORKFLOW_TITLE");
	}

	@description = "Verify that, when duplicating a process, the user is able to edit its title"
	@ignore = "Test Stub"
	@priority = "4"
	test CanEditTitleOfDuplicatedProcess {

		// TODO LRQA-68244 CanEditTitleOfDuplicatedProcess pending implementation

	}

	@description = "Verify that the user is able to filter by Not Published processes"
	@ignore = "Test Stub"
	@priority = "3"
	test CanFilterByNonPublishedProcesses {

		// TODO LRQA-68233 CanFilterByNonPublishedProcesses pending implementation

	}

	@description = "Verify that the user is able to filter by Published processes"
	@priority = "3"
	test CanFilterByPublishedProcesses {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.duplicateSingleApproverWorkflow(workflowName = "Copy of Single Approver");

		Navigator.gotoBack();

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Copy of Single Approver");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");

		MenuItem.click(menuItem = "Published");

		AssertElementPresent(
			key_workflowDefinitionTitle = "Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED");

		AssertElementNotPresent(
			key_workflowDefinitionTitle = "Copy of Single Approver",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE_PUBLISHED");
	}

	@description = "Verify that the user can not delete a published process"
	@ignore = "Test Stub"
	@priority = "5"
	test CanNotDeletePublishedProcess {

		// TODO LRQA-68231 CanNotDeletePublishedProcess pending implementation

	}

	@description = "Verify that the user is not able to search by Workflow description"
	@priority = "3"
	test CanNotSearchByDescription {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		ProcessBuilderListView.searchForWorkflow(workflowName = "workflow content");

		ProcessBuilderListView.validateIfSearchItem(
			numberResults = "0",
			workflowName = "workflow content");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No workflow definitions are defined.");
	}

	@description = "Verify that the user can not unpublish a Workflow in use and system displays an error message"
	@priority = "5"
	test CanNotUnpublishWorkflowInUse {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		AssertElementPresent(
			locator1 = "Message#ERROR",
			value1 = "Workflow in use. Remove its assignment to this asset: Blogs Entry.");

		Workflow.viewDefinitionPublished(workflowDefinitionTitle = "Single Approver");
	}

	@description = "Verify that the user is able to order by Last Modified"
	@ignore = "Test Stub"
	@priority = "2"
	test CanOrderByLastModified {

		// TODO LRQA-68236 CanOrderByLastModified pending implementation

	}

	@description = "Verify that the user is able to order by Title"
	@ignore = "Test Stub"
	@priority = "3"
	test CanOrderByTitle {

		// TODO LRQA-68235 CanOrderByTitle pending implementation

	}

	@description = "Verify that the user is able to reverse sort direction"
	@ignore = "Test Stub"
	@priority = "2"
	test CanReverseSortDirection {

		// TODO LRQA-68237 CanReverseSortDirection pending implementation

	}

	@description = "Verify that the user is able to search by Workflow title"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSearchByTitle {

		// TODO LRQA-68224 CanSearchByTitle pending implementation

	}

	@description = "Verify that search can be done using non-ASCII character"
	@priority = "4"
	test CanSearchNonAsciiChar {
		Workflow.duplicateSingleApproverWorkflow(workflowName = "単一承認者");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		ProcessBuilderListView.searchForWorkflow(workflowName = "単一");

		AssertTextEquals(
			key_rowNumber = "2",
			locator1 = "ProcessBuilderListView#PROCESS_NAME_TABLE_ROW",
			value1 = "単一承認者");
	}

	@description = "Verify that the user can select Edit option in the kebab menu for a particular row"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSelectEditOption {

		// TODO LRQA-68240 CanSelectEditOption pending implementation

	}

	@description = "Verify that the user can select Edit option in the kebab menu for a Not Published process"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSelectEditOptionForNonPublishedProcess {

		// TODO LRQA-68246 CanSelectEditOptionForNonPublishedProcess pending implementation

	}

	@description = "Verify that the user can select Permissions option in the kebab menu for a particular row"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSelectPermissionsOption {

		// TODO LRQA-68242 CanSelectPermissionsOption pending implementation

	}

	@description = "Verify that the user can select Permissions option in the kebab menu for a Not Published process"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSelectPermissionsOptionForNonPublishedProcess {

		// TODO LRQA-68248 CanSelectPermissionsOptionForNonPublishedProcess pending implementation

	}

	@description = "Verify that the user can select View option in the kebab menu for a particular row"
	@ignore = "Test Stub"
	@priority = "4"
	test CanSelectViewOption {

		// TODO LRQA-68239 CanSelectViewOption pending implementation

	}

	@description = "Verify that a duplicated definition can be Unpublished"
	@ignore = "Test Stub"
	@priority = "3"
	test CanUnpublishDuplicatedDefinition {

		// TODO LRQA-68249 CanUnpublishDuplicatedDefinition pending implementation

	}

	@description = "Verify that the user can select View option in the kebab menu for a Not Published process"
	@ignore = "Test Stub"
	@priority = "3"
	test CanViewNonPublishedProcess {

		// TODO LRQA-68245 CanViewNonPublishedProcess pending implementation

	}

	@description = "Verify that the Clear option cleans the search results"
	@ignore = "Test Stub"
	@priority = "3"
	test ClearSearchResults {

		// TODO LRQA-68229 ClearSearchResults pending implementation

	}

	@description = "Verify that the correct columns are displayed: Title, Description, Last Modified"
	@ignore = "Test Stub"
	@priority = "5"
	test DisplaysColumnsTitleDescriptionLastModified {

		// TODO LRQA-68230 DisplaysColumnsTitleDescriptionLastModified pending implementation

	}

	@description = "Verify that Not Published processes are displayed on table"
	@priority = "4"
	test DisplaysNonPublishedProcessesOnTable {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.unpublishWorkflowDefinition(workflowDefinitionTitle = "Single Approver");

		AssertTextEquals(
			key_workflowDefinitionTitle = "Not Published",
			locator1 = "WorkflowDefinition#DEFINITION_TABLE_TITLE",
			value1 = "Not Published");

		WorkflowMetrics.assertWorkflowProcessPresent(workflowProcessName = "Single Approver");
	}

	@description = "Verify that hovering the + button will display the text New Workflow"
	@ignore = "Test Stub"
	@priority = "2"
	test DisplaysText {

		// TODO LRQA-68227 DisplaysText pending implementation

	}

	@description = "Verify that the pagination component is displayed when the table has 5 items or more"
	@ignore = "Test Stub"
	@priority = "3"
	test PaginationComponentIsDisplayed {

		// TODO LRQA-68238 PaginationComponentIsDisplayed pending implementation

	}

	@description = "Verify that the users are able to click on the + button and be directed to the New Workflow page"
	@priority = "5"
	test RedirectToNewWorkflowPage {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Click(locator1 = "Button#PLUS");

		AssertElementPresent(
			key_pageName = "New Workflow",
			locator1 = "ProcessBuilderListView#PROCESS_BUILDER_HEADER_TITLE");
	}

	@description = "Verify that, in the error message when you try to unpublish a workflow in use, there is a link to the configuration tab"
	@ignore = "Test Stub"
	@priority = "3"
	test UserIsDirectedToConfigurationTab {

		// TODO LRQA-68264 UserIsDirectedToConfigurationTab pending implementation

	}

}