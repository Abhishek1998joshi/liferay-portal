@component-name = "portal-collaboration"
definition {

	property osgi.module.configuration.file.names = "com.liferay.translation.web.internal.configuration.FFLayoutExperienceSelectorConfiguration.config";
	property osgi.module.configurations = "enabled=B&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Translations Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that an imported content page translation can be approved through the workflow."
	@priority = "5"
	test CanApproveImportedTranslation {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "TranslationContentPage",
			type = "content");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		ContentPagesNavigator.openEditContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Heading");

		PageEditor.clickPublish();

		SitePages.openPagesAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(pageName = "TranslationContentPage");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateContentPageFile(
			contentPageTranslation = "true",
			encoding = "false",
			fragmentContent = "Heading",
			fragmentContentTranslation = "Titulo",
			pageName = "TranslationContentPage",
			pageNameTranslation = "TranslatedContentPage",
			translationFileName = "TranslationContentPage-en_US-es_ES",
			translationZipFileName = "TranslationContentPage-en_US.zip");

		SitePages.openPagesAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			contentPageTranslation = "true",
			fileName = "TranslationContentPage-en_US-es_ES.xlf",
			pageName = "TranslationContentPage");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Pending",
			title = "Translation of TranslationContentPage to es-ES");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of TranslationContentPage to es-ES");

		ContentPagesNavigator.openEditContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		PageEditor.changeLocale(
			currentLocale = "en-US",
			locale = "es-ES");

		PageEditor.viewFragmentEditableText(
			editableText = "Titulo",
			fragmentName = "Heading",
			id = "element-text");

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		ContentPages.viewFragmentText(
			fragmentName = "heading",
			id = "element-text",
			text = "Heading");

		Navigator.ensureLocaleURL(locale = "es");

		Page.viewCurrentPage(pageName = "TranslatedContentPage");

		ContentPages.viewFragmentText(
			fragmentName = "heading",
			id = "element-text",
			text = "Titulo");
	}

	@description = "This ensures that a button on a content page can be translated and published properly."
	@priority = "5"
	test CanPublishTranslatedHeadingAfterReview {
		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.clickPublish();

		Workflow.openWorkflowAdmin(siteURLKey = "test-site-name");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		WaitForPageLoad();

		ContentPagesNavigator.goToTranslation(pageName = "Test Content Page Name");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "ja-JP");

		Translations.translateFragmentField(
			fieldName = "element-text",
			fragmentText = "これは見出しです");

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.changeLocale(
			currentLocale = "en-US",
			locale = "ja-JP");

		PageEditor.viewFragmentEditableText(
			editableText = "Heading Example",
			fragmentName = "Heading",
			id = "element-text");

		ContentPagesNavigator.openViewContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Translation of Test Content Page Name to ja-JP",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Translation of Test Content Page Name to ja-JP",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			locale = "ja",
			pageName = "Test Content Page Name",
			siteName = "Test Site Name");

		ContentPages.viewFragmentText(
			fragmentName = "heading",
			id = "element-text",
			text = "これは見出しです");
	}

	@description = "This ensures that an imported translation can be resubmitted after being rejected."
	@priority = "5"
	test CanResubmitRejectedImportedTranslation {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "TranslationContentPage",
			type = "content");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		ContentPagesNavigator.openEditContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Heading");

		PageEditor.clickPublish();

		SitePages.openPagesAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(pageName = "TranslationContentPage");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateContentPageFile(
			contentPageTranslation = "true",
			encoding = "false",
			fragmentContent = "Heading",
			fragmentContentTranslation = "Titulo",
			pageName = "TranslationContentPage",
			pageNameTranslation = "TranslatedContentPage",
			translationFileName = "TranslationContentPage-en_US-es_ES",
			translationZipFileName = "TranslationContentPage-en_US.zip");

		SitePages.openPagesAdmin(siteURLKey = "guest");

		Translations.importTranslation(
			contentPageTranslation = "true",
			fileName = "TranslationContentPage-en_US-es_ES.xlf",
			pageName = "TranslationContentPage");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Pending",
			title = "Translation of TranslationContentPage to es-ES");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "TranslationContentPage",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of TranslationContentPage to es-ES");

		ContentPagesNavigator.openEditContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		PageEditor.clickPublish();

		ContentPagesNavigator.openViewContentPage(
			pageName = "TranslationContentPage",
			siteName = "Guest");

		ContentPages.viewFragmentText(
			fragmentName = "heading",
			id = "element-text",
			text = "Heading");

		Navigator.ensureLocaleURL(locale = "es");

		Page.viewCurrentPage(pageName = "TranslatedContentPage");

		ContentPages.viewFragmentText(
			fragmentName = "heading",
			id = "element-text",
			text = "Titulo");
	}

	@description = "This ensures that a translation with a new experience can be resubmitted after being rejected."
	@priority = "5"
	test CanResubmitRejectedTranslationWithExperience {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Content Page Name",
			type = "content");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		JSONSegmentsentry.addSegment(
			fieldName = "Email Address",
			groupName = "Guest",
			operator = "contains",
			segmentName = "Segment Email Address",
			text = "test@liferay.com");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		PageEditor.addExperience(
			experienceName = "Segment Email Experience",
			segmentName = "Segment Email Address");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.clickPublish();

		SitePages.openPagesAdmin(siteURLKey = "guest");

		WaitForPageLoad();

		ContentPagesNavigator.goToTranslation(pageName = "Test Content Page Name");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.translateFragmentField(
			experienceName = "Segment Email Experience",
			fieldName = "element-text",
			fragmentText = "esta es la nueva experiencia");

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		ContentPagesNavigator.openViewContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Pending",
			title = "Translation");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "guest");

		PageEditor.changeExperience(newExperience = "Segment Email Experience");

		PageEditor.prioritizeExperience(experienceName = "Segment Email Experience");

		PageEditor.changeLocale(
			currentLocale = "en-US",
			locale = "es-ES");

		PageEditor.viewFragmentEditableText(
			editableText = "esta es la nueva experiencia",
			fragmentName = "Heading",
			id = "element-text");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "es/web/guest/test-content-page-name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "esta es la nueva experiencia");
	}

	@description = "This ensures that a heading on a content page with a new experience can be translated and published properly after reviewing."
	@priority = "5"
	test CanTranslateHeadingWithExperienceAfterReviewing {
		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Test Content Page Name",
			type = "content");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		JSONSegmentsentry.addSegment(
			fieldName = "Email Address",
			groupName = "Guest",
			operator = "contains",
			segmentName = "Segment Email Address",
			text = "test@liferay.com");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		PageEditor.addExperience(
			experienceName = "Segment Email Experience",
			segmentName = "Segment Email Address");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.clickPublish();

		SitePages.openPagesAdmin(siteURLKey = "guest");

		WaitForPageLoad();

		ContentPagesNavigator.goToTranslation(pageName = "Test Content Page Name");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.translateFragmentField(
			experienceName = "Segment Email Experience",
			fieldName = "element-text",
			fragmentText = "esta es la nueva experiencia");

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		PageEditor.changeExperience(newExperience = "Segment Email Experience");

		PageEditor.changeLocale(
			currentLocale = "en-US",
			locale = "es-ES");

		PageEditor.viewFragmentEditableText(
			editableText = "Heading Example",
			fragmentName = "Heading",
			id = "element-text");

		ContentPagesNavigator.openViewContentPage(
			pageName = "Test Content Page Name",
			siteName = "Guest");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Translation",
			workflowAssetType = "Translation",
			workflowTask = "Review");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Test Content Page Name",
			siteName = "guest");

		PageEditor.changeExperience(newExperience = "Segment Email Experience");

		PageEditor.prioritizeExperience(experienceName = "Segment Email Experience");

		PageEditor.changeLocale(
			currentLocale = "en-US",
			locale = "es-ES");

		PageEditor.viewFragmentEditableText(
			editableText = "esta es la nueva experiencia",
			fragmentName = "Heading",
			id = "element-text");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "es/web/guest/test-content-page-name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "esta es la nueva experiencia");
	}

}