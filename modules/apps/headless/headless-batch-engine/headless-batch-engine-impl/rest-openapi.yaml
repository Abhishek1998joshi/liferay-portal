components:
    schemas:
        ImportTask:
            properties:
                className:
                    example: com.liferay.headless.delivery.dto.v1_0.BlogPosting
                    type: string
                endTime:
                    example: 1569261245
                    format: int64
                    minimum: 0
                    type: integer
                errorMessage:
                    example: File import failed
                    type: string
                executeStatus:
                    enum: [COMPLETED, FAILED, INITIAL, STARTED]
                    example: INITIALIZED
                    type: string
                id:
                    example: 30130
                    format: int64
                    minimum: 0
                    type: integer
                operation:
                    enum: [CREATE, DELETE, UPDATE]
                    example: CREATE
                    type: string
                startTime:
                    example: 1569261245
                    format: int64
                    minimum: 0
                    type: integer
                version:
                    example: v1.0
                    type: string
            type: object
info:
    description: ""
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Headless Batch Engine"
    version: v1.0
openapi: 3.0.1
paths:
    /import-task/{className}/{version}:
        delete:
            operationId: deleteImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]
        post:
            operationId: postImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]
        put:
            operationId: putImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]
    /import-task/{importTaskId}/:
        get:
            operationId: getImportTask
            parameters:
                - in: path
                  name: importTaskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ImportTask"
            tags: ["ImportTask"]