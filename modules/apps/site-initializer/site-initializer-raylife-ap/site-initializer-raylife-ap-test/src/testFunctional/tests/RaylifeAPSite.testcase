@component-name = "portal-solutions"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Raylife AP";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		RaylifeAP.createRaylifeAPSite();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		RaylifeAP.tearDownCP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "Verify if Raylife AP can be created"
	@ignore = "Test Stub"
	@priority = "5"
	test CanRaylifeAPCreated {

		// TODO LPS-154296 - Verify if Raylife AP can be created

	}

	@description = "Verify if when Raylife AP is created, the Raylife Applications will be created for it as well"
	@ignore = "Test Stub"
	@priority = "5"
	test RaylifeApplicationsForRaylifeAPIsCreated {

		// TODO LPS-154296 - Verify if when Raylife AP is created, the Raylife Applications will be created for it as well

	}

	@description = "Verify if when Raylife AP is created, the Raylife Policies will be created for it as well"
	@ignore = "Test Stub"
	@priority = "5"
	test RaylifePoliciesForRaylifeAPIsCreated {

		// TODO LPS-154296 - Verify if when Raylife AP is created, the Raylife Policies will be created for it as well

	}

}