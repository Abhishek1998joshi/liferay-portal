@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	setUp {
		task ("Login and create a Testray Site") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			Testray.createTestraySite(siteName = "Testray 2");

			Refresh();
		}

		task ("Go to Testray, Create Project and change pagination") {
			ApplicationsMenu.gotoSite(site = "Testray 2");

			Testray.createProjectTestray(
				description = "Projects_1 Description",
				key_name = "Projects_1 Project");

			Testray.changePagination(
				numberItems = "20",
				valuePagination = "150");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Testray.deleteAllProjects();

		Testray.tearDownCP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This is a test for LPS-156997 - Verify if as an Administrator I should be able to add and delete a Component that has a Team"
	@priority = "5"
	test AdminCanAddAndDeleteComponentWithTeam {
		task ("Given that the user adds a new Team") {
			TestrayContextMenu.clickContextMenuProjects(name = "Projects_1 Project");

			TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Manage Teams");

			Testray.addNewTeam(teamName = "Components_1 Team");

			Testray.assertItemName(key_name = "Components_1 Team");
		}

		task ("When the user goes to add a new component and selects the team") {
			TestrayManage.closeModalInOptions();

			TestrayContextMenu.clickContextMenuProjects(name = "Projects_1 Project");

			TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Manage Components");

			Testray.addNewComponent(
				componentName = "Components_1 Project",
				teamName = "Components_1 Team");
		}

		task ("Then the component and team should appear on the list") {
			Testray.assertItemName(key_name = "Components_1 Project");

			Testray.assertItemName(key_name = "Components_1 Team");
		}

		task ("And when a component is deleted") {
			Testray.deleteComponent(itemName = "Components_1 Project");
		}

		task ("Then the component should not appear on the list") {
			Testray.assertItemNotPresent(itemName = "Components_1 Project");
		}

	}

	@description = "This is a test for LPS-156982 - Verify if as an Administrator I am able to add Components"
	@ignore = "Test Stub"
	@priority = "5"
	test AdminCanAddComponent {

		// TODO LPS-156982 AdminCanAddComponent pending implementation

	}

	@description = "This is a test for LPS-156987 - Verify if as an Administrator I am able to add Components with a Team"
	@ignore = "Test Stub"
	@priority = "5"
	test AdminCanAddComponentTeam {

		// TODO LPS-156987 AdminCanAddComponentTeam pending implementation

	}

	@description = "This is a test for LPS-156989 - Verify if as an Administrator I am able to edit Components while connecting a Team"
	@ignore = "Test Stub"
	@priority = "5"
	test AdminCanDeleteComponent {

		// TODO LPS-156989 AdminCanDeleteComponentpending implementation

	}

	@description = "This is a test for LPS-156994 - Verify if as an Administrator I am able to edit Components and change the assigned Team"
	@ignore = "Test Stub"
	@priority = "4"
	test AdminCanEditChangeComponent {

		// TODO LPS-156994 AdminCanEditChangeComponent pending implementation

	}

	@description = "This is a test for LPS-156988 - Verify that as an Administrator I am able to edit Components while connecting a Team"
	@ignore = "Test Stub"
	@priority = "5"
	test AdminCanEditComponent {

		// TODO LPS-156988 AdminCanEditComponent pending implementation

	}

	@description = "This is a test for LPS-156992 - Verify if as an Administrator I am able to edit Components while connecting a Team"
	@ignore = "Test Stub"
	@priority = "3"
	test AdminCanEditConnectComponent {

		// TODO LPS-156992 AdminCanEditConnectComponent pending implementation

	}

	@description = "This is a test for LPS-156995 - Verify if as an Administrator when I search for a Component the system should return that component"
	@ignore = "Test Stub"
	@priority = "4"
	test AdminCanSearchComponent {

		// TODO LPS-156995 AdminCanSearchComponent pending implementation

	}

	@description = "This is a test for LPS-156996 - Verify if as an Administrator when I search for a Component that does not exist the system should not return that component"
	@ignore = "Test Stub"
	@priority = "4"
	test AdminCanSearchComponentNonExistent {

		// TODO LPS-156996 AdminCanSearchComponentNonExistent pending implementation

	}

}