{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarLayoutBackgroundImagePanel}

/**
 * FloatingToolbarLayoutBackgroundImagePanel
 */
{template .render}
	{@param item: [
		config: [
			backgroundImage: string
		]
	]}
	{@param? _handleClearButtonClick: any}
	{@param? _handleImageSourceTypeSelect: any}
	{@param? _handleSelectButtonClick: any}
	{@param? _imageSourceTypeIds: [
		content: string,
		selection: string
	]}
	{@param? _imageSourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? _selectedImageSourceTypeId: string}

	<div class="floating-toolbar-layout-background-image-panel p-3">
		{call .imageSourceTypeSelect}
			{param handleImageSourceTypeSelect: $_handleImageSourceTypeSelect /}
			{param imageSourceTypes: $_imageSourceTypes /}
			{param selectedImageSourceTypeId: $_selectedImageSourceTypeId /}
		{/call}

		{if $_selectedImageSourceTypeId == $_imageSourceTypeIds.selection}
			{call .manualImageSelect}
				{param handleClearButtonClick: $_handleClearButtonClick /}
				{param handleSelectButtonClick: $_handleSelectButtonClick /}
				{param item: $item /}
			{/call}
		{/if}
	</div>
{/template}

/**
 * Source select
 */
{template .imageSourceTypeSelect}
	{@param? handleImageSourceTypeSelect: any}
	{@param? imageSourceTypes: ?}
	{@param? selectedImageSourceTypeId: string}

	<div class="form-group">
		<label for="floatingToolbarLayoutBackgroundImagePanelImageSourceTypeSelect">
			{msg desc=""}image-source{/msg}
		</label>

		<select
			class="form-control form-control-sm"
			data-onchange="{$handleImageSourceTypeSelect}"
			id="floatingToolbarLayoutBackgroundImagePanelImageSourceTypeSelect"
		>
			{foreach $imageSourceType in $imageSourceTypes}
				{call .selectOption}
					{param optionId: $imageSourceType.id /}
					{param optionLabel: $imageSourceType.label /}
					{param key: $imageSourceType.id /}
					{param selectedId: $selectedImageSourceTypeId /}
				{/call}
			{/foreach}
		</select>
	</div>
{/template}

/**
 * Manual Image Select
 */
{template .manualImageSelect}
	{@param? handleClearButtonClick: any}
	{@param? handleSelectButtonClick: any}
	{@param item: [
		config: [
			backgroundImage: string
		]
	]}

	<div class="form-group">
		<label for="floatingToolbarLayoutBackgroundImagePanelOption">
			{msg desc=""}background-image{/msg}
		</label>

		{let $inputPlaceholder kind="text"}
			{msg desc=""}none{/msg}
		{/let}

		{let $inputValue kind="text"}
			{if $item.config and $item.config.backgroundImage}
				{$item.config.backgroundImage}
			{/if}
		{/let}

		<input
			class="form-control form-control-sm"
			id="floatingToolbarLayoutBackgroundImagePanelOption"
			placeholder="{$inputPlaceholder}"
			readonly
			title="{$inputValue}"
			type="text"
			value="{$inputValue}"
		>
	</div>

	<div class="btn-group">
		<div class="btn-group-item">
			<button
				class="btn btn-secondary btn-sm"
				data-onclick="{$handleSelectButtonClick}"
				type="button"
			>
				{msg desc=""}select{/msg}
			</button>
		</div>

		<div class="btn-group-item">
			{let $clearButtonAttributes kind="attributes"}
				class="btn btn-secondary btn-sm"
				data-onclick="{$handleClearButtonClick}"
				type="button"

				{if (not $item.config) or (not $item.config.backgroundImage)}
					disabled
				{/if}
			{/let}

			<button {$clearButtonAttributes}>
				{msg desc=""}clear{/msg}
			</button>
		</div>
	</div>
{/template}

/**
 * Select option
 */
{template .selectOption}
	{@param optionId: string}
	{@param optionLabel: string}
	{@param? selectedId: string}

	{let $optionAttributes kind="attributes"}
		value="{$optionId}"

		{if $optionId == $selectedId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$optionLabel}
	</option>
{/template}