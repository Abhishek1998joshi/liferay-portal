definition {

	macro viewDayTableIsDisplayed {
		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_DAY");
	}

	macro viewWeekTableIsDisplayed {
		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_WEEK");
	}

	macro viewMonthTableIsDisplayed {
		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_MONTH");
	}
	macro viewAgendaTableIsDisplayed {
		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_AGENDA");
	}

	macro viewMiniCalendarSideBar {
		AssertElementPresent(locator1 = "CalendarPage#MINI_CALENDAR_SIDEBAR");
	}

	macro viewMonthCurrentMiniCalendar {
		AssertTextEquals(
			locator1 = "CalendarPage#CURRENT_MONTH_MINI_CALENDAR",
			value1 = "${monthCurrent}");
	}
	
	macro viewCurrentDayForCalendarDay {
        CalendarNavigator.gotoView(viewType = "Day");
	}
	
	macro viewCurrentDayForCalendarAgenda {
		CalendarNavigator.gotoView(viewType = "Agenda");

		CalendarNavigator.gotoToday();

		AssertElementPresent(locator1 = "CalendarPage#VIEW_AGENDA_CURRENT_DAY");
	}

	macro viewCurrentDayForCalendarDay {
		CalendarNavigator.gotoView(viewType = "Day");

		CalendarNavigator.gotoToday();

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_DAY_CURRENT_DAY");
	}

	macro viewCurrentDayForCalendarMonth {
		CalendarNavigator.gotoView(viewType = "Month");

		CalendarNavigator.gotoToday();

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_MONTH_CURRENT_DAY");
	}

	macro viewCurrentDayForCalendarWeek {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarNavigator.gotoToday();

		AssertElementPresent(locator1 = "Calendar#SCHEDULER_VIEW_WEEK_CURRENT_DAY");
	}
	var siteName = "Liferay";

	macro clickCaretLeftIcon {
		Click(locator1 = "CalendarPage#CARET_LEFT_ICON");
	}

	macro viewLeftSideBar {
		AssertElementPresent(locator1 = "CalendarPage#LEFT_SIDE_BAR");
	}

	macro viewLeftSideBarHide {
		AssertElementPresent(locator1 = "CalendarPage#LEFT_SIDE_BAR_HIDE");
	}

}