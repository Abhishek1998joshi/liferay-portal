@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "4"
	test CheckDefaultWebContentTitleOnWebContentList {
		property portal.acceptance = "false";

		// TODO LPS-122317 CheckDefaultWebContentTitleOnWebContentList pending implementation

	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckDuplicatedRepeatableStructureOnWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text",
			fieldHelp = "Text Field Help Text");

		DataEngine.editFieldRepeatable(fieldFieldLabel = "Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Texto",
			fieldHelp = "Texto de ajuda do campo de texto");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(webContentTitle = "Web Content Title");

		DataEngine.addRepeatableField(fieldName = "Text");

		Type(
			index = "1",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a Text field");

		Type(
			index = "2",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a duplicated Text field");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(webContentTitle = "Título do conteúdo da web");

		Type(
			index = "1",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto");

		Type(
			index = "2",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto duplicado");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Web Content Title");

		AssertTextEquals.assertValue(
			index = "1",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a Text field");

		AssertTextEquals.assertValue(
			index = "2",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a duplicated Text field");

		for (var n : list "1,2") {
			AssertTextEquals(
				key_fieldFieldLabel = "Text",
				key_index = "${n}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT_ANY",
				value1 = "Text Field Help Text");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		AssertTextEquals.assertValue(
			index = "1",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto");

		AssertTextEquals.assertValue(
			index = "2",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto duplicado");

		for (var n : list "1,2") {
			AssertTextEquals(
				key_fieldFieldLabel = "Texto",
				key_index = "${n}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT_ANY",
				value1 = "Texto de ajuda do campo de texto");
		}
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "4"
	test CheckLanguageSelector {
		property portal.acceptance = "false";

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Test Content",
			webContentTitle = "Test Title");

		PortletEntry.viewLocale(locale = "en-US");

		PortletEntry.changeLocale(locale = "pt-BR");

		PortletEntry.viewLocale(locale = "pt-BR");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckLocalizationOfWebContentUponLanguageChange {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentText = "Este é um campo de texto",
			webContentTitle = "Título do conteúdo da web");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.addWithStructureCP(
			webContentText = "Este es un campo de texto",
			webContentTitle = "Título de contenido web");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Este é um campo de texto");

		PortletEntry.changeLocale(locale = "es-ES");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título de contenido web");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Este es un campo de texto");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckStructureTranslationsOnWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description Test",
			structureName = "Structure Name Test");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Structure Name Test");

		WebContent.addWithStructureCP(
			webContentText = "Test",
			webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "4"
	test DefaultTitleIsDisplayedUponLocaleChange {
		property portal.acceptance = "false";

		// TODO LPS-122317 DefaultTitleIsDisplayedUponLocaleChange pending implementation
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test DefaultTitlePersistsAfterTranslatingForAnotherLocale {
		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addCP(webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		AssertAttributeValue(
			attribute1 = "value",
			locator1 = "TextInput#TITLE",
			value1 = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertAttributeValue(
			attribute1 = "value",
			locator1 = "TextInput#TITLE",
			value1 = "测试");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "4"
	test DefaultTitlePersistsUponFirstlyTranslatingForAnotherLocale {
		property portal.acceptance = "false";

		// TODO LPS-122317 DefaultTitlePersistsUponFirstlyTranslatingForAnotherLocale pending implementation
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test DefaultValuesDisplayedForNonTranslatedWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentText = "Este é um campo de texto",
			webContentTextFieldLabel = "Texto",
			webContentTitle = "Título do conteúdo da web");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Web Content Title");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "This is a Text field");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "5"
	test TranslateWebContentWithAllFields {
		property portal.acceptance = "false";

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addFields(fieldNameList = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Separator,Link to Page");

		WebContentStructures.addLocalization(
			locale = "zh-CN",
			localization1Name = "网页内容结构");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Text",
			label = "文本框");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Select from List",
			label = "下拉列表");

		DataEngine.addFieldOption(
			index = "1",
			optionValue = "选择 2");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Single Selection",
			label = "单选列表框");

		DataEngine.addFieldOption(
			index = "1",
			optionValue = "选择 3");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Multiple Selection",
			label = "复选列表框");

		DataEngine.addFieldOption(
			index = "1",
			optionValue = "选择 1");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Grid",
			label = "网格");

		var index = "1";

		for (var optionValue : list "R1,R2") {
			DataEngine.addFieldOption(
				index = "${index}",
				optionFieldLabel = "Rows",
				optionValue = "行 ${index}");

			DataEngine.editFieldReferenceOfFieldOption(
				fieldReferenceOfFieldOption = "${optionValue}",
				index = "${index}",
				optionFieldLabel = "Rows");

			var index = ${index} + 1;
		}

		var index = "1";

		for (var optionValue : list "C1,C2") {
			DataEngine.addFieldOption(
				index = "${index}",
				optionFieldLabel = "Columns",
				optionValue = "列 ${index}");

			DataEngine.editFieldReferenceOfFieldOption(
				fieldReferenceOfFieldOption = "${optionValue}",
				index = "${index}",
				optionFieldLabel = "Rows");

			var index = ${index} + 1;
		}

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Date",
			label = "日期");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Numeric",
			label = "数字");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Image",
			label = "图片");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Rich Text",
			label = "多格式文本框");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Upload",
			label = "文件");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Color",
			label = "颜色");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Web Content",
			label = "网页");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Geolocation",
			label = "地理位置");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Separator",
			label = "分割线");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Link to Page",
			label = "网页链接");

		Button.clickSave();

		Alert.viewSuccessMessage();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Link to Page",
			templateName = "WC Template Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Site Page");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Webcontent Content",
			webContentTitle = "WC Title");

		PortletEntry.publish();

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			column = "1",
			navTab = "Web Content Images",
			row = "1",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentColor = "FF0D0D",
			webContentDate = "10/10/2020",
			webContentGrid = "true",
			webContentImage = "Document_3.png",
			webContentLinkToPage = "Site Page",
			webContentMultipleSelection = "Option 1",
			webContentNumeric = "9",
			webContentRichText = "This is a Rich Text field",
			webContentSelectFromList = "Option 2",
			webContentSingleSelection = "Option 3",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title",
			webContentUpload = "Document_1.jpg",
			webContentWebContent = "WC Title");

		PortletEntry.publish();

		WebContentAdmin.gotoEntry(entry = "Web Content Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addTranslateWithStructureCP(
			column = "1",
			navTab = "Web Content Images",
			row = "1",
			webContentColor = "FF0D0D",
			webContentDate = "10/10/2020",
			webContentGrid = "true",
			webContentImage = "Document_3.png",
			webContentLinkToPage = "Site Page",
			webContentMultipleSelection = "选择 1",
			webContentNumeric = "9",
			webContentRichText = "这是多格式文本框",
			webContentSelectFromList = "选择 2",
			webContentSingleSelection = "选择 3",
			webContentText = "这是文本框",
			webContentTitle = "中文网页题目",
			webContentUpload = "Document_1.jpg",
			webContentWebContent = "WC Title");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentAdmin.gotoEntry(entry = "Web Content Title3");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "中文网页题目");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本框",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "这是文本框");

		AssertElementPresent(
			key_field = "选择 2",
			key_fieldFieldLabel = "下拉列表",
			locator1 = "WCEditWebContent#SELECT_FIELD_VALUE");

		AssertElementPresent(
			key_fieldFieldLabel = "单选列表框",
			key_optionValue = "选择 3",
			locator1 = "WCEditWebContent#SELECTION_OPTION");

		AssertElementPresent(
			key_fieldFieldLabel = "网格",
			locator1 = "WCEditWebContent#GRID_OPTION_1");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "日期",
			locator1 = "WCEditWebContent#DATE_INPUT",
			value1 = "2020/10/10");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "数字",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "9");

		AssertTextEquals(
			key_fieldFieldLabel = "图片",
			locator1 = "WCEditWebContent#SELECT_BUTTON_1",
			value1 = "Document_3.png");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "这是多格式文本框");

		AssertTextEquals(
			key_fieldFieldLabel = "文件",
			locator1 = "WCEditWebContent#SELECT_BUTTON_2",
			value1 = "Document_1.jpg");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "颜色",
			locator1 = "WCEditWebContent#SELECT_BUTTON_2",
			value1 = "FF0D0D");

		AssertTextEquals(
			key_fieldFieldLabel = "网页",
			locator1 = "WCEditWebContent#SELECT_BUTTON_3",
			value1 = "WC Title");

		AssertElementPresent(
			key_fieldFieldLabel = "地理位置",
			locator1 = "WCEditWebContent#ANY_INPUT_LABEL");

		AssertElementPresent(
			key_fieldFieldLabel = "分割线",
			locator1 = "WCEditWebContent#ANY_INPUT_LABEL");

		AssertTextEquals(
			key_fieldFieldLabel = "网页链接",
			locator1 = "WCEditWebContent#SELECT_BUTTON_3",
			value1 = "Public Pages > Site Page");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@ignore = "true"
	@priority = "5"
	test TranslationDoesNotChangeAnother {
		property portal.acceptance = "false";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Test Content",
			webContentTitle = "Test Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addCP(
			webContentContent = "测试内容",
			webContentTitle = "测试标题");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试标题");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "测试内容");

		SelectFrameTop();

		PortletEntry.changeLocale(locale = "en-US");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Test Title");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "content",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "Test Content");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test TranslationPersistsAfterEditingAnother {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description Test",
			structureName = "Structure Name Test");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Structure Name Test");

		WebContent.addWithStructureCP(
			webContentText = "Test",
			webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		WebContent.addWithStructureCP(
			webContentText = "Test Text",
			webContentTitle = "Test Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试文本",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试标题");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Test Title");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Test Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试标题");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试文本");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test TranslationsRemainsUponSavingWebContent {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentText = "Este é um campo de texto",
			webContentTextFieldLabel = "Texto",
			webContentTitle = "Título do conteúdo da web");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Este é um campo de texto");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test VerifyDefaultLanguageIsFirstShown {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description Test",
			structureName = "Structure Name Test");

		DataEngine.addField(
			fieldFieldLabel = "Text Test",
			fieldName = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text Test",
			fieldHelp = "Help Test");

		WebContentStructures.addLocalization(
			locale = "pt-BR",
			localization1Name = "Novo nome do teste");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Text Test",
			label = "Teste de nome");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Teste de nome",
			fieldHelp = "Teste do campo de ajuda");

		WebContentStructures.saveCP(structureName = "Structure Name Test");

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Structure Name Test");

		PortletEntry.viewLocale(
			locale = "en-US",
			portletName = "Web Content");
	}

}