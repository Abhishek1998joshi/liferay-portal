@component-name = "portal-object"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-148544 - Verify it's possible to create a template with an object as an item type"
	@priority = "5"
	test CanCreateTemplateWithObject {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149237",
			objectName = "CustomObject149237",
			pluralLabelName = "Custom Objects 149237");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject149237");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149237");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149237");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149237");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");
	}

	@description = "LPS-148544 - Verify it's possible to map a boolean field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewBooleanField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149241",
			objectName = "CustomObject149241",
			pluralLabelName = "Custom Objects 149241");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "Boolean",
			isRequired = "false",
			objectName = "CustomObject149241");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149241");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149241");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149241",
			value = "149241");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149241");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Custom Field",
			panelTitle = "Custom Object 149241");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149241");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Test Information Template");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "149241");
	}

	@description = "LPS-148544 - Verify it's possible to map a Date field for a template on the content page and view the entries"
	@ignore = "Test Stub"
	@priority = "4"
	test CanMapAndViewDateField {

		// TODO LPS-149245 CanMapAndViewDateField pending implementation

	}

	@description = "LPS-148544 - Verify it's possible to map a Decimal field for a template on the content page and view the entries"
	@priority = "4"
	test CanMapAndViewDecimalField {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 149246",
			objectName = "CustomObject149246",
			pluralLabelName = "Custom Objects 149246");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Decimal",
			fieldLabelName = "Decimal",
			fieldName = "customObjectField",
			fieldType = "Double",
			isRequired = "false",
			objectName = "CustomObject149246");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject149246");

		Navigator.openURL();

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 149246");

		CreateObject.selectPanelCategoryKey(panelCategoryKey = "Control Panel > Object");

		CreateObject.saveObject();

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject149246",
			value = "149246");

		InformationTemplates.openInformationTemplatesAdmin(siteURLKey = "guest");

		InformationTemplates.addCP(
			informationTemplateName = "Test Information Template",
			itemType = "Custom Object 149246");

		InformationTemplates.inputScript(scriptContent = "");

		InformationTemplates.addField(
			fieldName = "Decimal",
			panelTitle = "Custom Object 149246");

		PortletEntry.save();

		InformationTemplates.viewTemplate(informationTemplateName = "Test Information Template");

		Navigator.openURL();

		WaitForPageLoad();

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		VisualizeObjectCollectionDisplay.openHeading();

		VisualizeObjectDisplayPage.addItem(
			frameTitle = "Select",
			pluralLabelName = "Custom Objects 149246");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "Decimal");

		PageEditor.clickPublish();

		Navigator.gotoPage(pageName = "Test Content Page Name");

		VisualizeObjectDisplayPage.assertDisplayEntry(entry = "149246.0");
	}

	@description = "LPS-148544 - Verify it's possible to map an integer field for a template on the content page and view the entries"
	@ignore = "Test Stub"
	@priority = "4"
	test CanMapAndViewIntegerField {

		// TODO LPS-149242 CanMapAndViewIntegerField pending implementation

	}

	@description = "LPS-148544 - Verify it's possible to map a Long text field for a template on the content page and view the entries"
	@ignore = "Test Stub"
	@priority = "4"
	test CanMapAndViewLongField {

		// TODO LPS-149244 CanMapAndViewLongField pending implementation

	}

	@description = "LPS-148544 - Verify it's possible to map a picklist field for a template on the content page and view the entries"
	@ignore = "Test Stub"
	@priority = "4"
	test CanMapAndViewPicklistField {

		// TODO LPS-149243 CanMapAndViewPicklistField pending implementation

	}

	@description = "LPS-148544 - Verify it's possible to map a text field for a template on the content page and view the entries"
	@ignore = "Test Stub"
	@priority = "4"
	test CanMapAndViewTextField {

		// TODO LPS-149240 CanMapAndViewTextField pending implementation

	}

}