definition {

	macro updatePicklistName {

	SelectFrame(locator1 = "Picklist#IFRAME_PICKLIST_MODAL");

		Type(
			locator1 = "Picklist#UPDATE_PICKLIST_NAME",
			value1 = "${picklistName}");
	}

	macro cancelUpdatePicklist {
		Click.javaScriptClick(locator1 = "Picklist#CANCEL_UPDATE_PICKLIST");
	}

	macro addPicklistItemViaAPI {
		JSONObject.addPicklistItem(
			itemKey = "${itemKey}",
			itemName = "${itemName}",
			picklistName = "${picklistName}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");
	}

	macro addPicklistViaAPI {
		JSONObject.addPicklist(
			picklistName = "${picklistName}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");
	}

	macro addPicklistViaUI {
		Click.javaScriptClick(locator1 = "Picklist#ADD_PICKLIST_BUTTON");

		Type(
			locator1 = "Picklist#ADD_PICKLIST_NAME",
			value1 = "${picklistName}");

		Button.clickSave();
	}

	macro assertPicklist {
		var key_picklistName = "${picklistName}";

		AssertElementPresent(locator1 = "Picklist#VIEW_PICKLIST");
	}

	macro assertPicklistNotPresent {
		var key_picklistName = "${picklistName}";

		AssertElementNotPresent(locator1 = "Picklist#VIEW_PICKLIST");
	}

	macro deleteAllPicklistsViaAPI {
		JSONObject.deleteAllPicklists(
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");
	}

	macro deletePicklistViaAPI {
		JSONObject.deletePicklist(
			picklistName = "${picklistName}",
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");
	}

	macro gotoPicklists {
		Navigator.openSpecificURL(url = "/group/guest/~/control_panel/manage?p_p_id=com_liferay_object_web_internal_list_type_portlet_portlet_ListTypeDefinitionsPortlet");
	}

	macro optionsPicklist {
		Click.javaScriptClick(
			key_picklistName = "${picklistName}",
			locator1 = "Picklist#PICKLIST_KEBAB_MENU");

		Click.javaScriptClick(
			key_picklistOption = "${picklistOption}",
			locator1 = "Picklist#PICKLIST_KEBAB_MENU_OPTION");
	}

}