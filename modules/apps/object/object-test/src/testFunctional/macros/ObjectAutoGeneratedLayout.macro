definition {

	macro addAttachment {
		LexiconEntry.gotoAdd();

		WaitForSPARefresh();

		ObjectAutoGeneratedLayout.clickSelectFile();

		var filePath = TestCase.getDependenciesDirPath(fileName = "${fileName}");

		UploadFile(
			locator1 = "TextInput#FILE",
			value1 = "${filePath}");
	}

	macro checkToggleLimitCharacters {
		Check.checkToggleSwitch(locator1 = "ObjectAutoGeneratedLayout#SHOW_COUNTER_TOGGLE");
	}

	macro ClickAtFileOnAttachment {
		Click(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

	macro clickSelectFile {
		Click(locator1 = "ObjectAutoGeneratedLayout#BUTTON_SELECT_FILE");
	}

	macro defineMaximumFileSize {
		Type(
			locator1 = "ObjectAutoGeneratedLayout#MAXIMUM_FILE_SIZE",
			value1 = "${maxFileSize}");
	}

	macro defineMaximumNumberOfCharacters {
		ObjectAutoGeneratedLayout.checkToggleLimitCharacters();

		Type(
			locator1 = "ObjectAutoGeneratedLayout#MAXIMUM_NUMBER_OF_CHARACTERS",
			value1 = "${maxCharacters}");
	}

	macro deleteFileOnAttachment {
		Click(locator1 = "ObjectAutoGeneratedLayout#DELETE_ATTACHMENT_ICON");
	}

	macro updateAttachment {
		ObjectPortlet.viewEntryDetails(entry = "${fileName}");

		WaitForSPARefresh();

		ObjectAutoGeneratedLayout.viewFilePresentOnAttachment(fileOnAttachment = "${fileName}");

		ObjectAutoGeneratedLayout.deleteFileOnAttachment();

		ObjectAutoGeneratedLayout.clickSelectFile();

		var filePath = TestCase.getDependenciesDirPath(fileName = "${newFileName}");

		UploadFile(
			locator1 = "TextInput#FILE",
			value1 = "${filePath}");

		ObjectAutoGeneratedLayout.viewFilePresentOnAttachment(fileOnAttachment = "${newFileName}");

		Button.clickSave();
	}

	macro viewCharacterCount {
		AssertElementPresent(
			key_characterCount = "${characterCount}",
			locator1 = "ObjectAutoGeneratedLayout#VIEW_CHARACTER_COUNT");
	}

	macro viewFileNotPresentOnAttachment {
		AssertElementNotPresent(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

	macro viewFilePresentOnAttachment {
		AssertElementPresent(
			key_fileName = "${fileOnAttachment}",
			locator1 = "ObjectAutoGeneratedLayout#FILE_ON_ATTACHMENT");
	}

}