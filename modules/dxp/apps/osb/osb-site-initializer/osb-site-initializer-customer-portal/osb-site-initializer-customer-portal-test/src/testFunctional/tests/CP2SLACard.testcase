definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
    var testAccount = "Test Account LXC-SM";
	var testUserFirstName = "Test";
	var testProduct = "LXC-SM";


	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

        task ("Add user to the Liferay Staff organization and a account") {
            CustomerPortal.assignUserToOrganization();

            CustomerPortal.addUserToOneOrMoreAccounts(accountsList = "${testAccount}");
        }

		task ("Go to Customer Portal Site") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.waitCP20PageToLoad(userFirstName = "${testUserFirstName}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}


    @description = "Automation Ticket: LPS-147800 | Test Summary: Verify if the card displays (SLA Card - SLA Name - Start Date - End Date - SLA Status)"
    @priority = "4"
    test AssertAllTitlesOnTheSLACard {
		task ("Given I go to the test account") {
			CustomerPortal.search(searchItem = "${testAccount}");

			CustomerPortal.enterOnProject(title = "${testAccount}");
		}

        task ("Then I should be able to view SLA Title, Status, Start Date and End Date for Platinum Support License.") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "Platinum");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "CURRENT");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "08/23/2021 - 08/23/2022");

            CP2Overview.assertSLACardBackgroundColor(slaCardTitle = "Platinum");
        }

        task ("When I shif the SLA card") {
            CP2Overview.switchSLACard();
        }

        task ("Then I should be able to view SLA Title, Status, Start Date and End Date for Gold Support License.") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "Gold");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "FUTURE");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "08/24/2022 - 08/24/2023");

            CP2Overview.assertSLACardBackgroundColor(slaCardTitle = "Gold");
        }

        task ("When I shif the SLA card") {
            CP2Overview.switchSLACard();
        }

        task ("Then I should be able to view SLA Title, Status, Start Date and End Date for Premium Support License.") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "Premium");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "EXPIRED");

            CP2Overview.assertSLACardContentIsVisible(cardContent = "08/22/2020 - 08/22/2021");

            CP2Overview.assertSLACardBackgroundColor(slaCardTitle = "Premium");
        }
    }

    @description = "Automation Ticket: LPS-147801 | Test Summary: Verify if when user has multiple statuses, the status order went from highest to lowest (Current > Future > Expired)."
    @priority = "5"
    test StatusOrderFromHighestToLowest {
        task ("Given I go to the test account") {
			CustomerPortal.search(searchItem = "${testAccount}");

			CustomerPortal.enterOnProject(title = "${testAccount}");
		}

        task ("Then I should be able to view SLA Status Current") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "CURRENT");
        }

        task ("When I shif the SLA card") {
            CP2Overview.switchSLACard();
        }

        task ("Then I should be able to view SLA Status Future") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "FUTURE");
        }

        task ("When I shif the SLA card") {
            CP2Overview.switchSLACard();
        }

        task ("Then I should be able to view SLA Status Expired") {
            CP2Overview.assertSLACardContentIsVisible(cardContent = "EXPIRED");
        }
    }
}