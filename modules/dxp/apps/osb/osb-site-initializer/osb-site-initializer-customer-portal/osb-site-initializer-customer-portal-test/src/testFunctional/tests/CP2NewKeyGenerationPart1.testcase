@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		/*task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}*/
	}

	tearDown {
		CustomerPortal.customerPortalApisTearDown();

		JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

		PortalInstances.tearDownCP();
	}

	@description = "LPS-149705 - Verify if the amount of available keys are shown on subscriptions."
    @priority = "5"
    test IfAvailableKeysAreDisplayedOnSubscriptions {
		property portal.upstream = "quarantine";

		// Needs refactor since it depends on example FIFA account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");
		}

		task ("When a user selects a project in Customer Portal and goes to 'Generate New' in Actions") {
			CustomerPortal.enterOnProject(title = "2022 FIFA World Cup Qatar - FAN ID");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "DXP");

            CP2ActivationKeys.generateNewKey();
		}

        task ("Then the subscription option will display remaining available key activations") {
            AssertTextEquals.assertPartialText(
				locator1 = "CP2ActivationKeys#SUBSCRIPTION_KEY_AVAILABLE",
				value1 = "Key activation available: 1 of");
        }
    }
	
    @description = "LPS-149703 - Verify if user can select the Key Type when generating a new key."
    @priority = "4"
    test IfKeyTypeCanBeSelected {
		property portal.upstream = "quarantine";

		// Needs refactor since it depends on example Solutions account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");
		}

		task ("When a user selects a project in Customer Portal and goes to 'Generate New' in Actions") {
			CustomerPortal.enterOnProject(title = "Test Account Solutions");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "DXP");

            CP2ActivationKeys.generateNewKey();
		}

        task ("Then the user can select the Key Type") {
            CP2ActivationKeys.selectKeyType(key_option = "Production (Virtual Cluster)");
        }
    }

	@description = "LPS-149702 - Verify if user can select the Version when generating a new key."
    @priority = "5"
    test IfProductVersionCanBeSelected {
		property portal.upstream = "quarantine";

		// Needs refactor since it depends on example Solutions account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");
		}

		task ("When a user selects a project in Customer Portal and goes to 'Generate New' in Actions") {
			CustomerPortal.enterOnProject(title = "Test Account Solutions");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "DXP");

            CP2ActivationKeys.generateNewKey();
		}

        task ("Then the user can select the Product Version") {
            CP2ActivationKeys.selectProductVersion(key_option = "7.3");
        }
    }

	@description = "LPS-149704 - Verify if start and end dates are displayed on subscriptions."
    @priority = "4"
    test IfStartAndEndDateAreDisplayedOnSubscriptions {
		property portal.upstream = "quarantine";

		// Needs refactor since it depends on example Solutions account

		task ("Given a user signs in on OKTA to update the Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "Customer Portal Name");
		}

		task ("When a user selects a project in Customer Portal and goes to 'Generate New' in Actions") {
			CustomerPortal.enterOnProject(title = "Test Account Solutions");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "DXP");

            CP2ActivationKeys.generateNewKey();
		}

        task ("Then the subscription options will display a start and end date") {
            AssertTextEquals(
				index = "1",
				locator1 = "CP2ActivationKeys#SUBSCRIPTION_LENGTH_BY_INDEX",
				value1 = "Aug 2, 2022 - Jul 3, 2023");
        }
    }
}