	@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testAccount = "NASA ICE";
	var testProduct = "DXP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

            task ("Add test user access to all Accounts") {
                CustomerPortal.assignUserToOrganization();

                CustomerPortal.addUserToOneOrMoreAccounts(accountsList = "${testAccount}");
            }
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "${testSiteName}");
		}
	}
	@description = "Automation ID: LPS-146195 | Test Summary: Verify that when you click the Download Key button a file is downloaded."
	@ignore = "true"
	@priority = "5"
	test AssertsThatTheFileHasBeenDownloaded {

		// Needs refactor since it depends on example Avangrid Portals account

		task ("Signs in OKTA to update and go to Customer Portal") {
			CustomerPortal.loginOktaToUpdateCP();

			Navigator.openURL();

			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");
		}

		task ("Select a project and go to activation page") {
			CustomerPortal.enterOnProject(title = "${testAccount}");

			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "DXP");
		}
		task ("Assert that text 'To activate a local Liferay DXP instance, download a development key for your Liferay DXP version' is present") {
			AssertElementPresent(locator1 = "CP2Utils#CAPITION_ABOVE_MENU");
		}

		task ("Select 1 key and click in Download key") {
			CP2ActivationKeys.selectKeyCheckboxByEnvironmentName(environmentName = "Redacted");

			CustomerPortal.clickAtButton(text = "Download Key");
		}

		task ("Assest the success message") {
			Alert.viewSuccessMessage();

		}

		task ("Assert that the Activation Key was downloaded") {
			CP2FileUtil.assertDownloadedFileIsPresent(downloadedFileName = "activation-key-dxpdevelopment-7.0-nasaice.xml");
		}
	}
