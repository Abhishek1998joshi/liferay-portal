@component-name = "portal-workflow-ee"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Kaleo Forms Admin";

	var kfFieldSetName = "Contacts";
	var workflowAssetType = "Process";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Kaleo Forms Admin");

		KaleoFormsAdmin.addProcess();

		KaleoFormsAdmin.addProcessDetails(
			kfProcessDescription = "Kaleo Forms Process Description",
			kfProcessName = "Kaleo Forms Process");

		KaleoFormsAdmin.next();

		KaleoFormsAdmin.chooseFieldSet(
			kfFieldSetName = "${kfFieldSetName}",
			kfProcessName = "Kaleo Forms Process");

		KaleoFormsAdmin.next();

		KaleoFormsAdmin.chooseWorkflow(
			kfProcessName = "Kaleo Forms Process",
			workflowDefinitionTitle = "Single Approver");

		KaleoFormsAdmin.next();

		KaleoFormsAdmin.assignForm(
			kfProcessName = "Kaleo Forms Process",
			workflowTask = "create");

		KaleoFormsAdmin.addForm(kfFormName = "Created Task Form");

		KaleoFormsAdmin.saveForm();

		KaleoFormsAdmin.chooseForm(kfFormName = "Created Task Form");

		KaleoFormsAdmin.saveProcess(kfProcessName = "Kaleo Forms Process");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			KaleoFormsAdmin.tearDownProcess();

			DDLTemplate.tearDownTemplateCP();

			DDLTemplate.tearDownTemplateCP(ddlDataDefinitionName = "To Do");

			Workflow.tearDownSpecificWorkflowDefinition(workflowDefinitionTitle = "Edited Workflow Definition");

			Workflow.tearDownWorkflowDefinitions();

			Page.tearDownCP();
		}
	}

	@description = "Verify that the user can clear the result bar after the user use  the search bar ."
	@priority = "5"
	test CanClearSearchBar {
		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Liferay");

		KaleoFormsAdmin.saveProcessRecord();

		Search.searchCP(searchTerm = "Random Company");

		KaleoFormsAdmin.viewProcessNoRecords(kfProcessName = "Kaleo Forms Process");

		Click(locator1 = "WorkflowConfiguration#CLEAR_BUTTON");

		KaleoFormsAdmin.viewProcess(kfProcessName = "Liferay");
	}

	@description = "Verify that the user can create a new submission without filling in the fields."
	@priority = "4"
	test CanCreateANewSubmissionWithFieldsEmpty {
		KaleoFormsAdmin.viewProcessRecord(kfProcessName = "Kaleo Forms Process");

		LexiconEntry.gotoAdd();

		KaleoFormsAdmin.saveProcessRecord();

		KaleoFormsAdmin.viewProcessNameByColumns(
			kfAuthor = "Test Test",
			kfCompanyName = " ",
			kfEmailName = " ",
			kfFirstName = " ",
			kfInstantMessenger = " ",
			kfInstantMessengerService = "Google Hangouts",
			kfStatus = "Pending");
	}

	@description = "Verify that user can delete all submissions in the page."
	@ignore = "Test Stub"
	@priority = "3"
	test CanDeleteAllSubmissions {

		// TODO LRQA-70698 CanDeleteAllSubmissions pending implementation

	}

	@description = "Verify that the user can filter by Create Date."
	@ignore = "Test Stub"
	@priority = "3"
	test CanFilterByCreateDate {

		// TODO LRQA-70692 CanFilterByCreateDate pending implementation

	}

	@description = "Verify that the user can filter by Modified Date ."
	@priority = "4"
	test CanFilterByModifiedDate {
		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");


		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Process A");

		KaleoFormsAdmin.saveProcessRecord();


		LexiconEntry.gotoAdd();

		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Process B");


		KaleoFormsAdmin.saveProcessRecord();

		KaleoFormsNewSubmissions.viewOrderTable(fieldNameList = "Process A,Process B");


		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Kaleo Forms Process",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Kaleo Forms Process",
			workflowAssetType = "${workflowAssetType}",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Kaleo Forms Admin");

		KaleoFormsAdmin.viewProcessRecord(kfProcessName = "Kaleo Forms Process");

		KaleoFormsNewSubmissions.viewOrderTable(fieldNameList = "Process B,Process A");



	}

	@description = "Verify that the user can modify the quantity of items view per page."
	@priority = "3"
	test CanModifyQuantityOfItemsPerPage {
		for (var kfProcessName : list "1,2,3,4") {
			KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

			KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Liferay");

			KaleoFormsAdmin.saveProcessRecord();

			Navigator.gotoBack();
		}

		AssertElementNotPresent(locator1 = "Pagination#ITEMS_PER_PAGE_SELECT");

		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Liferay");

		KaleoFormsAdmin.saveProcessRecord();

		AssertElementPresent(locator1 = "Pagination#RESULTS");

		Pagination.changePagination(itemsPerPage = "4");

		Pagination.viewResults(results = "Showing 1 to 4 of 5 entries.");
	}

	@description = "Verify that user can nagivate through pages."
	@ignore = "Test Stub"
	@priority = "3"
	test CanNavigateThroughPages {

		// TODO LRQA-70697 CanNavigateThroughPages pending implementation

	}

	@description = "Verify that the user can reverse the order of submissions."
	@priority = "3"
	test CanOrderSubmissions {
		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Process A");
		
		KaleoFormsAdmin.saveProcessRecord();
		

		LexiconEntry.gotoAdd();

		KaleoFormsNewSubmissions.addNewContacts(ddlCompany = "Process B");
		

		KaleoFormsAdmin.saveProcessRecord();

		KaleoFormsNewSubmissions.viewOrderTable(fieldNameList = "Process A,Process B");

		Workflow.clickRevertSortDirection();	
		
		KaleoFormsNewSubmissions.viewOrderTable(fieldNameList = "Process B,Process A");
	

	}

	@description = "Verify that the user can Reject a submission."
	@priority = "5"
	test CanRejectASubmission {
		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

		KaleoFormsAdmin.addNewContactsRecord(
			ddlCompany = "Liferay",
			ddlEmail = "qa@liferay.com",
			ddlFirstName = "Test",
			ddlInstantMesseger = "Liferay",
			ddlJobTitle = "QA",
			ddlLastName = "Test",
			ddlPhoneMobile = "12345678",
			ddlPhoneOffice = "12345678");

		KaleoFormsAdmin.saveProcessRecord();

		KaleoFormsAdmin.viewProcessRecordTable(
			kfAuthor = "Test Test",
			kfProcessFieldData = "Liferay",
			kfStatus = "Pending");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Kaleo Forms Process",
			workflowAssetType = "Process",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Kaleo Forms Process",
			workflowAssetType = "Process",
			workflowTask = "Review");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Kaleo Forms Admin");

		KaleoFormsAdmin.viewProcessRecord(kfProcessName = "Kaleo Forms Process");

		KaleoFormsAdmin.viewProcessRecordTable(
			kfAuthor = "Test Test",
			kfProcessFieldData = "Liferay",
			kfStatus = "Pending");
	}

	@description = "Verify that user can search by Column Value and view the search result."
	@ignore = "Test Stub"
	@priority = "3"
	test CanSearchByColunmValue {

		// TODO LRQA-70696 CanSearchByColunmValue pending implementation

	}

	@description = "Verify that the user is able to track the workflow through the Kebab Menu."
	@ignore = "Test Stub"
	@priority = "5"
	test CanViewTrackApprovalThroughKebabMenu {

		// TODO LRQA-70645 CanViewTrackApprovalThroughKebabMenu pending implementation

	}

	@description = "Verify that the user can view the column values on the page after submit the process."
	@priority = "5"
	test CanViewValuesAfterSubmitAProcess {
		KaleoFormsAdmin.submitNewProcess(kfProcessName = "Kaleo Forms Process");

		KaleoFormsNewSubmissions.addNewContacts(
			ddlCompany = "Liferay",
			ddlEmail = "test@liferay.com",
			ddlFirstName = "Test",
			ddlInstantMesseger = "Liferay",
			ddlJobTitle = "QA",
			ddlLastName = "Test",
			ddlPhoneMobile = "12345678",
			ddlPhoneOffice = "12345678");

		KaleoFormsAdmin.saveProcessRecord();

		KaleoFormsAdmin.viewProcessNameByColumns(
			kfAuthor = "Test Test",
			kfCompanyName = "Liferay",
			kfEmailName = "test@liferay.com",
			kfFirstName = "Test",
			kfInstantMessenger = "Liferay",
			kfInstantMessengerService = "Google Hangouts",
			kfStatus = "Pending");
	}

}