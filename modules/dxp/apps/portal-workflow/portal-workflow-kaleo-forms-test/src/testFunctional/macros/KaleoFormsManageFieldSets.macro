definition {

	macro searchFieldSet {
		Search.searchCP(searchTerm = "${fieldSetName}");

		AssertElementPresent(
			key_submissionName = "${fieldSetName}",
			locator1 = "WorkflowSubmissions#SUBMISSION_BY_NAME");

    }

	macro deleteOneFieldSet {
		Search.searchCP(searchTerm = "${fieldSetName}");

    macro viewFieldSetCannotBeDeleted {
        Search.searchCP(searchTerm = "${fieldSetName}");
	macro viewFieldSetCannotBeDeleted {
		Search.searchCP(searchTerm = "${fieldSetName}");

		Click.waitForMenuToggleJSClick(
			key_kfFieldSetName = "${fieldSetName}",
			locator1 = "KaleoFormsAdminSelectStructure#KALEO_FORMS_STRUCTURE_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro viewFieldSetCannotBeFound {
		Search.searchCP(searchTerm = "${fieldSetName}");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No Field Sets were found.");
	}
		Alert.viewErrorMessage(errorMessage = "The structure cannot be deleted because it is required by one or more structure links.");
	}
    macro viewFieldSetOrder {
        var rowNumber = "1";

        for (var nameFieldset : list "${fieldSetList}") {
            AssertElementPresent(
                key_rowNumber = "${rowNumber}",
                key_nameFieldset = "${nameFieldset}",
                locator1 = "KaleoFormsManageFieldSets#NAME_ROW_FROM_MANAGE_FIELD");

            var rowNumber = MathUtil.sum("${rowNumber}", "1");
        }
    }

    macro clickFilterById {
	macro clickFilterById {
		var filterOption = "ID";

		Click(
			locator1 = "ContentDashboard#FILTER_AND_ORDER_DROPDOWN",
			value1 = "Filter and Order");

		Click(locator1 = "ContentDashboard#FILTER_BY_OPTION");
	}

	macro viewFieldSetOrder {
		var rowNumber = "1";

		for (var nameFieldset : list "${fieldSetList}") {
			AssertElementPresent(
				key_nameFieldset = "${nameFieldset}",
				key_rowNumber = "${rowNumber}",
				locator1 = "KaleoFormsManageFieldSets#NAME_ROW_FROM_MANAGE_FIELD");

			var rowNumber = MathUtil.sum("${rowNumber}", "1");
		}
	}

	macro viewUpDirectionOfSortButton {
		if (IsElementPresent(locator1 = "KaleoFormsManageFieldSets#SORTED_UP_ICON")) {
			AssertElementPresent(locator1 = "KaleoFormsManageFieldSets#SORTED_UP_ICON");
		}

		else {
			Workflow.clickRevertSortDirection();
		}
	}

	macro editFieldSets {

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Edit",
			rowEntry = "${nameFieldset}");

		PortletEntry.inputName(name = "${newNameFieldset}");
	}

	macro viewFieldSetOrder {
		var rowNumber = "1";

		for (var nameFieldset : list "${fieldSetList}") {
			AssertElementPresent(
				key_nameFieldset = "${nameFieldset}",
				key_rowNumber = "${rowNumber}",
				locator1 = "KaleoFormsManageFieldSets#NAME_ROW_FROM_MANAGE_FIELD");

			var rowNumber = MathUtil.sum("${rowNumber}", "1");
		}
	}

}
	
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    macro viewPageNumber {
		for (var pageNumber : list "${pageNumberList}") {
			var key_pageNumber = "${pageNumber}";

			AssertElementPresent(locator1 = "KaleoFormsManageFieldSets#PAGINATION_NUMBER");
		}
	}

}
