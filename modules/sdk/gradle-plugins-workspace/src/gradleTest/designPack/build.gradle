import java.util.zip.ZipEntry
import java.util.zip.ZipFile
import java.util.zip.ZipInputStream

List<String> outputPaths = new ArrayList<>();

task runGradleTest

gradle.liferayWorkspace {
	bundleDistRootDirName = "foo/bar"
	product = "portal-7.4-ga8"
}

gradle.taskGraph.afterTask {
	Task task, TaskState taskState ->

	if ((task.name.contains("zipDesignPack"))) {
		outputPaths.add(task.archivePath)
	}
}

node {
	nodeVersion = "14.19.0"
}

runGradleTest {
	dependsOn ":design-packs:my-theme:zipDesignPack"

	doLast {
		outputPaths.each{
			File outputFile = file(it)

			assert outputFile.exists()

			ZipFile zipFile = new ZipFile(outputFile)

			String zipEntryRootName = gradle.liferayWorkspace.bundleDistRootDirName

			if (zipEntryRootName) {
				zipEntryRootName += "/"
			}
			else {
				zipEntryRootName = ""
			}

			zipFile.withCloseable {

				for (String fileName in ["result/clay.css", "result/clay_rtl.css", "result/main.css", "result/main_rtl.css"]) {
					File expectedFile = file(fileName)

					String zipEntryName = zipEntryRootName + fileName.substring(fileName.indexOf('/') + 1)

					ZipEntry zipEntry = zipFile.getEntry(zipEntryName)

					assert zipEntry != null : zipEntryName

					InputStream inputStream = zipFile.getInputStream(zipEntry)

					assert expectedFile.text.normalize() == inputStream.text.normalize()
				}
			}
		}
	}
}